[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "alea-preprocess"
version = "0.1.11"
description = "Efficient, accessible preprocessing routines for pretrain, SFT, and DPO training data preparation from the ALEA Institute."
license = "MIT"
readme = "README.md"
homepage = "https://aleainstitute.ai/"
repository = "https://github.com/alea-institute/alea-preprocess"
keywords = ["alea", "llm", "data", "preprocess", "pretrain", "kl3m"]
requires-python = ">=3.10, <4.0"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities"
]
exclude = ["**/__pycache__", "**/*.pyc", "**/*.pyo", "tests/", "resources/", "docker/", ".github/", ".pre-commit-config.yaml", ".gitignore"]
dynamic = ["version"]

[tool.maturin]
features = ["pyo3/extension-module"]

[tool.poetry]
name = "alea-preprocess"
version = "0.1.11"
description = "Efficient, accessible preprocessing routines for pretrain, SFT, and DPO training data preparation.from the ALEA Institute."
authors = ["ALEA Institute <hello@aleainstitute.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://aleainstitute.ai/"
repository = "https://github.com/alea-institute/alea-preprocess"
keywords = ["alea", "llm", "data", "preprocess", "pretrain", "kl3m"]
exclude = ["**/__pycache__", "**/*.pyc", "**/*.pyo", "tests/", "resources/", "docker/", ".github/", ".pre-commit-config.yaml", ".gitignore"]

[tool.poetry.dependencies]
python = ">=3.10, <4.0"
pytest = "^8.3.2"
maturin = { version = ">=1.7", extras = ["patchelf"] }


[tool.pylint]
max-line-length = 120
disable = [
    "line-too-long",
    "too-few-public-methods",
    "no-self-argument",
    "cyclic-import",
    "duplicate-code",
    "import-self",
    "no-name-in-module",
]
extension-pkg-allow-list = ["lxml"]
ignore-patterns = ["test_.*?.py", "conftest.py"]

[tool.pylint.messages_control]
max-args = 10
max-attributes = 15
max-branches = 15
max-locals = 25
min-public-methods = 0
disable = ['W0511']

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
ignore_missing_imports = true
