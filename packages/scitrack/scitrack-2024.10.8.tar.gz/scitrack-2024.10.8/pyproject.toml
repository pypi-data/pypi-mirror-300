[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.metadata]
module = "scitrack"
author = "Gavin Huttley"
author-email = "Gavin.Huttley@anu.edu.au"
home-page = "https://github.com/HuttleyLab/scitrack"
license = "BSD-3"
description-file = "README.rst"
keywords = "science, logging"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"

[tool.flit.sdist]
include = ["src/*", "pyproject.toml", "*.rst"]
exclude = ["*.xml"]


[tool.flit.metadata.urls]
Documentation = "https://github.com/HuttleyLab/scitrack"
"Bug Tracker" = "https://github.com/HuttleyLab/scitrack/issues"
"Source Code" = "https://github.com/HuttleyLab/scitrack"

[tool.flit.metadata.requires-extra]
test = [
    "numpy",
    "pytest",
    "pytest-cov",
    "ruff==0.6.9",
    "nox"]

[tool.ruff]
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]
ignore = ["EXE002", "FA100", "E501", "D"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "ANN",
    "N802",
    "N803"
]
"noxfile.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "ANN",
    "N802",
    "N803"
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"