function mockCloudCall(){if(!global.__minium__.cloud_call_mocked){Object.defineProperty(global.__minium__,"cloud_call_mocked",{value:!0,writable:!1});const l={};function e(e){const c=new global.__minium__.MockRule(`${e}_mock_rule`);return function(o){const n=c.search(o);return n?(console.log(`[minium] ${e} rule match`,n),n.success?Promise.resolve(n.success):n.fail?Promise.reject(n.fail):l[e].call(this,o)):l[e].call(this,o)}}const c=["callContainer","callFunction"];if(c.forEach((e=>{l[e]=wx.cloud[e]})),"undefined"!=typeof Proxy){const o=new Proxy(wx.cloud,{get:(l,o)=>-1!==c.indexOf(o)?e(o):l[o]});wx.cloud=o,Object.defineProperty(wx,"cloud",{writable:!0,value:o})}else c.forEach((l=>{const c=e(l);Object.defineProperty(wx.cloud,l,{writable:!0,value:c}),wx.cloud[l]=c}))}}
