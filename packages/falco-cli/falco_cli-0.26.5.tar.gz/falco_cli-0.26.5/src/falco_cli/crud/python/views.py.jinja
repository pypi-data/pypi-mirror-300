# IMPORTS:START
from falco_toolbox.htmx import for_htmx
from falco_toolbox.pagination import paginate_queryset
{% if login_required %}
from falco_toolbox.types import AuthenticatedHttpRequest
{% else %}
from falco_toolbox.types import HttpRequest
{% endif %}

from django.http import HttpResponse
from django.shortcuts import get_object_or_404
from django.shortcuts import redirect
from django.template.response import TemplateResponse
from django.views.decorators.http import require_http_methods
{% if login_required %}
from django.contrib.auth.decorators import login_required
{% endif %}

from .forms import {{model_name}}Form
from .models import {{model_name}}

# IMPORTS:END


# CODE:START
{% if login_required %}
@login_required
@for_htmx(use_partial="table")
def {{model_name|lower}}_list(request: AuthenticatedHttpRequest):{% else %}
@for_htmx(use_partial="table")
def {{model_name|lower}}_list(request: HttpRequest):{% endif %}
    {{model_name_plural|lower}} = {{model_name}}.objects.order_by("id")
    return TemplateResponse(
        request,
        "{{app_label}}/{{model_name|lower}}_list.html",
        context={"{{model_name_plural|lower}}_page": paginate_queryset(request, {{model_name_plural|lower}})},
    )

{% if login_required %}
@login_required
def {{model_name|lower}}_detail(request: AuthenticatedHttpRequest, pk: int):{% else %}
def {{model_name|lower}}_detail(request: HttpRequest, pk: int):{% endif %}
    {{model_name|lower}} = get_object_or_404({{model_name}}.objects, pk=pk)
    return TemplateResponse(
        request,
        "{{app_label}}/{{model_name|lower}}_detail.html",
        context={"{{model_name|lower}}": {{model_name|lower}}},
    )

{% if login_required %}
@login_required
def {{model_name|lower}}_create(request: AuthenticatedHttpRequest):{% else %}
def {{model_name|lower}}_create(request: HttpRequest):{% endif %}
    {%- if model_has_file_fields %}
    form = {{model_name}}Form(request.POST or None, request.FILES or None)
    {%- else %}
    form = {{model_name}}Form(request.POST or None)
    {%- endif %}
    if request.method == "POST" and form.is_valid():
        form.save()
        return redirect("{{app_label}}:{{model_name|lower}}_list")
    return TemplateResponse(
        request,
        "{{app_label}}/{{model_name|lower}}_create.html",
        context={"form": form},
    )

{% if login_required %}
@login_required
def {{model_name|lower}}_update(request: AuthenticatedHttpRequest, pk: int):{% else %}
def {{model_name|lower}}_update(request: HttpRequest, pk: int):{% endif %}
    {{model_name|lower}} = get_object_or_404({{model_name}}.objects, pk=pk)
    {%- if model_has_file_fields %}
    form = {{model_name}}Form(request.POST or None, request.FILES or None, instance={{model_name|lower}})
    {%- else %}
    form = {{model_name}}Form(request.POST or None, instance={{model_name|lower}})
    {%- endif %}
    if request.method == "POST" and form.is_valid():
        form.save()
        return redirect("{{app_label}}:{{model_name|lower}}_detail", pk=pk)
    return TemplateResponse(
        request,
        "{{app_label}}/{{model_name|lower}}_update.html",
        context={"{{model_name|lower}}": {{model_name|lower}}, "form": form},
    )

@require_http_methods(["DELETE"])
{% if login_required %}
@login_required
def {{model_name|lower}}_delete(_: AuthenticatedHttpRequest, pk: int):{% else %}
def {{model_name|lower}}_delete(_: HttpRequest, pk: int):{% endif %}
    {{model_name}}.objects.filter(pk=pk).delete()
    return HttpResponse("")


# CODE:END
