# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: cicd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  master-check:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push'}}
    runs-on: ubuntu-latest
    steps:
      - name: Check Running workflow
        env:
          ACTOR_CONTEXT: ${{  toJson(github.actor)  }}
        run:  echo  "Pushing on production branch by $ACTOR_CONTEXT and deploying to prod server"
  testing-code:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
      - name: Testing
        run: |
          pytest --continue-on-collection-errors
      - name: Upload pytest results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{  matrix.python-version }}
          path: junit/tests-results-${{ github.run_id }}.xml
        if: ${{always()}}
  building-package:
    needs:  testing-code
    runs-on:  ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Package
        run: |
          python -m pip install build
          python -m build
      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: pypi-python-package
          path: dist/
  pypiu-publish:
    needs: building-package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
        name: pypi-publish
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: pypi-python-package
          path: dist/
      - name: Publish package to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
