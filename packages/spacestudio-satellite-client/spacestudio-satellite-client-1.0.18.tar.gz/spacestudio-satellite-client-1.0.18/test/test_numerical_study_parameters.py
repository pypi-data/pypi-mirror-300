# coding: utf-8

"""
    spacestudio satellite API documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacestudio_satellite_client.models.numerical_study_parameters import NumericalStudyParameters

class TestNumericalStudyParameters(unittest.TestCase):
    """NumericalStudyParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NumericalStudyParameters:
        """Test NumericalStudyParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NumericalStudyParameters`
        """
        model = NumericalStudyParameters()
        if include_optional:
            return NumericalStudyParameters(
                numerical_outputs_configuration = spacestudio_satellite_client.models.numerical_outputs_configuration.NumericalOutputsConfiguration(
                    ephemerides_requested = [
                        'CARTESIAN'
                        ], 
                    ephemerides_step_in_seconds = 1.337, 
                    ephemerides_mean_choice = True, 
                    ephemerides_osc_choice = True, 
                    ephemerides_file_types_requested = [
                        'CCSDS_ATTITUDE_EPHEMERIS_MESSAGE'
                        ], ),
                maneuvering_strategy = spacestudio_satellite_client.models.maneuvering_strategy.ManeuveringStrategy(
                    maneuvering_strategy_choice = 'CUSTOM', 
                    number_of_rest_orbits = 56, 
                    number_of_thrust_orbits = 56, 
                    number_of_shift_orbits = 56, 
                    thrust_arc_definition = 'DUTY_CYCLE', 
                    thrust_arc_duration = 1.337, 
                    orbital_duty_cycle = 1.337, 
                    thrust_arcs_number = 'ONE', 
                    thrust_arcs_position = 'ASCENDING_AND_DESCENDING_NODES', 
                    reference = 'ASCENDING_AND_DESCENDING_NODES', 
                    delta_mean_longitude_argument = 1.337, 
                    thrust_arc_mean_longitude_argument = 1.337, 
                    stop_thrust_in_eclipse = True, 
                    dynamic_duty_cycle_simulated = True, ),
                simulation_configuration = spacestudio_satellite_client.models.simulation_configuration.SimulationConfiguration(
                    propagation_type = 'NUMERICAL', 
                    maximum_simulation_duration = 1.337, )
            )
        else:
            return NumericalStudyParameters(
        )
        """

    def testNumericalStudyParameters(self):
        """Test NumericalStudyParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
