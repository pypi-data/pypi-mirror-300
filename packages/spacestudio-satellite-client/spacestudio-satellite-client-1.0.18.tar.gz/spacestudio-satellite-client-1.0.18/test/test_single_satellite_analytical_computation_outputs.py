# coding: utf-8

"""
    spacestudio satellite API documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacestudio_satellite_client.models.single_satellite_analytical_computation_outputs import SingleSatelliteAnalyticalComputationOutputs

class TestSingleSatelliteAnalyticalComputationOutputs(unittest.TestCase):
    """SingleSatelliteAnalyticalComputationOutputs unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SingleSatelliteAnalyticalComputationOutputs:
        """Test SingleSatelliteAnalyticalComputationOutputs
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleSatelliteAnalyticalComputationOutputs`
        """
        model = SingleSatelliteAnalyticalComputationOutputs()
        if include_optional:
            return SingleSatelliteAnalyticalComputationOutputs(
                drag_perturbation_enabled = True,
                maneuver_model = '',
                drag_to_thrust_ratio = 1.337,
                delta_v = 1.337,
                maneuvering_duration = 1.337,
                mission_duration = 1.337,
                thrust_duration = 1.337,
                thruster_mean_duty_cycle = 1.337,
                total_impulse = 1.337,
                used_propellant = 1.337,
                number_of_burns = 1.337,
                mean_burn_duration_estimation = 1.337,
                mean_atmospheric_density = 1.337,
                mean_drag = 1.337,
                mean_drag_acceleration = 1.337,
                drag_delta_v = 1.337
            )
        else:
            return SingleSatelliteAnalyticalComputationOutputs(
        )
        """

    def testSingleSatelliteAnalyticalComputationOutputs(self):
        """Test SingleSatelliteAnalyticalComputationOutputs"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
