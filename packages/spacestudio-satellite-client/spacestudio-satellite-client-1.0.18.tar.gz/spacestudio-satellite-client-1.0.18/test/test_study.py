# coding: utf-8

"""
    spacestudio satellite API documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacestudio_satellite_client.models.study import Study

class TestStudy(unittest.TestCase):
    """Study unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Study:
        """Test Study
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Study`
        """
        model = Study()
        if include_optional:
            return Study(
                id = '',
                name = '',
                description = '',
                scenario_id = '',
                scenario_state_id = '',
                parameters = spacestudio_satellite_client.models.study_parameters.StudyParameters(
                    maneuver = spacestudio_satellite_client.models.maneuver.Maneuver(), 
                    context_outputs = spacestudio_satellite_client.models.context_outputs.ContextOutputs(
                        consumption_propellant = 1.337, ), 
                    previous_maneuver_computation = '', ),
                inputs = spacestudio_satellite_client.models.study_inputs.StudyInputs(
                    propulsion_system = spacestudio_satellite_client.models.propulsion_system.propulsion-system(
                        id = '', 
                        name = '', 
                        scope = '', 
                        object_advanced = True, 
                        isp = 1.337, 
                        power = 1.337, 
                        thrust = 1.337, 
                        standby_power = 1.337, 
                        warm_up_power = 1.337, 
                        warm_up_duration = 1.337, 
                        propellant_mass = 1.337, 
                        total_mass = 1.337, 
                        total_impulse = 1.337, 
                        maximum_thrust_duration = 1.337, 
                        consumption = 1.337, 
                        propellant_capacity_choice = 'PROPELLANT', 
                        propulsion_system_type = 'CHEMICAL', ), 
                    spacecraft_geometry = spacestudio_satellite_client.models.spacecraft_geometry.spacecraft-geometry(
                        id = '', 
                        name = '', 
                        scope = '', 
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, 
                        inertial_center_in_spacecraft_frame_x = 1.337, 
                        inertial_center_in_spacecraft_frame_y = 1.337, 
                        inertial_center_in_spacecraft_frame_z = 1.337, 
                        inertia_xx = 1.337, 
                        inertia_xy = 1.337, 
                        inertia_xz = 1.337, 
                        inertia_yx = 1.337, 
                        inertia_yy = 1.337, 
                        inertia_yz = 1.337, 
                        inertia_zx = 1.337, 
                        inertia_zy = 1.337, 
                        inertia_zz = 1.337, 
                        thruster_axis_in_satellite_frame_x = 1.337, 
                        thruster_axis_in_satellite_frame_y = 1.337, 
                        thruster_axis_in_satellite_frame_z = 1.337, 
                        solar_array_efficiency = 1.337, 
                        solar_array_maximum_power = 1.337, 
                        solar_array_surface = 1.337, 
                        solar_array_axis_in_satellite_frame_x = 1.337, 
                        solar_array_axis_in_satellite_frame_y = 1.337, 
                        solar_array_axis_in_satellite_frame_z = 1.337, 
                        solar_array_normal_in_satellite_frame_x = 1.337, 
                        solar_array_normal_in_satellite_frame_y = 1.337, 
                        solar_array_normal_in_satellite_frame_z = 1.337, 
                        payload_pointing_axis_in_satellite_frame_x = 1.337, 
                        payload_pointing_axis_in_satellite_frame_y = 1.337, 
                        payload_pointing_axis_in_satellite_frame_z = 1.337, 
                        antenna_pointing_axis_in_satellite_frame_x = 1.337, 
                        antenna_pointing_axis_in_satellite_frame_y = 1.337, 
                        antenna_pointing_axis_in_satellite_frame_z = 1.337, 
                        spherical_cross_section = 1.337, 
                        body_solar_array_faces = [
                            'PLUS_X'
                            ], 
                        solar_array_definition_type = 'MAXIMUM_POWER', 
                        solar_array_type = 'NONE', 
                        type = 'SPHERE', ), 
                    platform = spacestudio_satellite_client.models.platform.platform(
                        id = '', 
                        name = '', 
                        scope = '', 
                        platform_mass = 1.337, 
                        on_board_average_power = 1.337, 
                        duty_cycle = 1.337, ), 
                    initial_orbit = spacestudio_satellite_client.models.orbit.Orbit(
                        id = '', 
                        name = '', 
                        read_only = True, 
                        scope = '', 
                        object_advanced = True, 
                        sun_synchronous = True, 
                        inclination = 1.337, 
                        sma = 1.337, 
                        eccentricity = 1.337, 
                        parameters = spacestudio_satellite_client.models.orbit_parameters.OrbitParameters(), 
                        advanced_parameters = spacestudio_satellite_client.models.advanced_orbit_parameters.AdvancedOrbitParameters(
                            orbit_date = '', 
                            ascending_node_type = 'RAAN', 
                            raan = 1.337, 
                            mltan = 1.337, 
                            anomaly = 1.337, 
                            anomaly_type = 'TRUE', 
                            orbital_element_type = 'MEAN', 
                            perigee_argument = 1.337, ), ), 
                    final_orbit = spacestudio_satellite_client.models.orbit.Orbit(
                        id = '', 
                        name = '', 
                        read_only = True, 
                        scope = '', 
                        object_advanced = True, 
                        sun_synchronous = True, 
                        inclination = 1.337, 
                        sma = 1.337, 
                        eccentricity = 1.337, ), 
                    drag_perturbation = null, 
                    earth_potential_perturbation = null, 
                    solar_radiation_pressure_perturbation = null, 
                    third_body_perturbation = null, ),
                comparison_items = [
                    spacestudio_satellite_client.models.comparison_item.ComparisonItem(
                        input = '', 
                        field = '', 
                        min = 1.337, 
                        max = 1.337, 
                        step = 1.337, 
                        points = 56, 
                        ids = [
                            ''
                            ], 
                        value = spacestudio_satellite_client.models.value.value(), 
                        values = [
                            None
                            ], )
                    ],
                computation = spacestudio_satellite_client.models.study_computation.StudyComputation(
                    progress = 1.337, 
                    errors = [
                        ''
                        ], 
                    status = 'PENDING', 
                    baseline = spacestudio_satellite_client.models.computation.computation(
                        id = '', 
                        warnings = [
                            ''
                            ], 
                        progress = 1.337, 
                        status = 'PENDING', 
                        comparison_items = [
                            spacestudio_satellite_client.models.comparison_item.ComparisonItem(
                                input = '', 
                                field = '', 
                                min = 1.337, 
                                max = 1.337, 
                                step = 1.337, 
                                points = 56, 
                                ids = [
                                    ''
                                    ], 
                                value = spacestudio_satellite_client.models.value.value(), 
                                values = [
                                    None
                                    ], )
                            ], 
                        outputs = spacestudio_satellite_client.models.computation_outputs.ComputationOutputs(), ), 
                    cases = [
                        spacestudio_satellite_client.models.computation.computation(
                            id = '', 
                            progress = 1.337, 
                            status = , )
                        ], 
                    comparison_items_in_input = [
                        spacestudio_satellite_client.models.comparison_item.ComparisonItem(
                            input = '', 
                            field = '', 
                            min = 1.337, 
                            max = 1.337, 
                            step = 1.337, 
                            points = 56, 
                            value = spacestudio_satellite_client.models.value.value(), )
                        ], ),
                display_configuration = spacestudio_satellite_client.models.display_configuration.DisplayConfiguration(
                    comparison_overview = spacestudio_satellite_client.models.display_configuration_comparison_overview.DisplayConfiguration_comparisonOverview(
                        displayed_results = [
                            ''
                            ], 
                        view_mode = 'LIST', 
                        plots = [
                            spacestudio_satellite_client.models.plot.Plot(
                                id = 56, 
                                axis_param_x = '', 
                                axis_param_y = [
                                    ''
                                    ], 
                                axis_param_z = '', 
                                type = 'BAR_CHART', )
                            ], ), 
                    baseline_configuration = spacestudio_satellite_client.models.baseline_configuration.BaselineConfiguration(), 
                    tabs = [
                        spacestudio_satellite_client.models.tab.Tab(
                            name = '', 
                            computation_index = 56, )
                        ], 
                    current_tab = spacestudio_satellite_client.models.tab.Tab(
                        name = '', 
                        computation_index = 56, ), ),
                need_recomputation = True
            )
        else:
            return Study(
                name = '',
        )
        """

    def testStudy(self):
        """Test Study"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
