# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from openfl.experimental.protocols import aggregator_pb2 as openfl_dot_experimental_dot_protocols_dot_aggregator__pb2


class AggregatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendTaskResults = channel.unary_unary(
                '/openfl.experiment.aggregator.Aggregator/SendTaskResults',
                request_serializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.TaskResultsRequest.SerializeToString,
                response_deserializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.TaskResultsResponse.FromString,
                )
        self.GetTasks = channel.unary_unary(
                '/openfl.experiment.aggregator.Aggregator/GetTasks',
                request_serializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.GetTasksRequest.SerializeToString,
                response_deserializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.GetTasksResponse.FromString,
                )
        self.CallCheckpoint = channel.unary_unary(
                '/openfl.experiment.aggregator.Aggregator/CallCheckpoint',
                request_serializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.CheckpointRequest.SerializeToString,
                response_deserializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.CheckpointResponse.FromString,
                )


class AggregatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendTaskResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CallCheckpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AggregatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendTaskResults': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTaskResults,
                    request_deserializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.TaskResultsRequest.FromString,
                    response_serializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.TaskResultsResponse.SerializeToString,
            ),
            'GetTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTasks,
                    request_deserializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.GetTasksRequest.FromString,
                    response_serializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.GetTasksResponse.SerializeToString,
            ),
            'CallCheckpoint': grpc.unary_unary_rpc_method_handler(
                    servicer.CallCheckpoint,
                    request_deserializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.CheckpointRequest.FromString,
                    response_serializer=openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.CheckpointResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'openfl.experiment.aggregator.Aggregator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Aggregator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendTaskResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openfl.experiment.aggregator.Aggregator/SendTaskResults',
            openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.TaskResultsRequest.SerializeToString,
            openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.TaskResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openfl.experiment.aggregator.Aggregator/GetTasks',
            openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.GetTasksRequest.SerializeToString,
            openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.GetTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CallCheckpoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/openfl.experiment.aggregator.Aggregator/CallCheckpoint',
            openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.CheckpointRequest.SerializeToString,
            openfl_dot_experimental_dot_protocols_dot_aggregator__pb2.CheckpointResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
