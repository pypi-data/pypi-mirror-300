Metadata-Version: 2.1
Name: configconverter
Version: 0.1.0
Summary: A versatile tool to convert configuration files between different formats.
Home-page: https://github.com/ankitaglawe/configconverter
License: MIT
Keywords: configuration,converter,json,yaml,toml,ini,xml
Author: Ankit Aglawe
Author-email: aglawe.ankit@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Utilities
Requires-Dist: PyYAML (>=6.0,<7.0)
Requires-Dist: toml (>=0.10.2,<0.11.0)
Project-URL: Documentation, https://configconverter.readthedocs.io
Project-URL: Repository, https://github.com/ankitaglawe/configconverter
Description-Content-Type: text/markdown


# ConfigConverter

Convert configuration files between different formats.

## Features

- Supports JSON, YAML, TOML, INI, and XML formats.
- Command-line interface and Python API.
- Easy to use and extend.

## Installation

```bash
pip install configconverter
```

## Command-Line Usage

```bash
configconverter [OPTIONS] INPUT_FILE [OUTPUT_FILE]
```

### Examples

- Convert `config.json` to `config.yaml`:

  ```bash
  configconverter config.json config.yaml
  ```

- Specify formats explicitly:

  ```bash
  configconverter -i ini -o toml settings.conf settings.toml
  ```

- Output to standard output:

  ```bash
  configconverter config.toml -o json --stdout
  ```

## Python API Usage

```python
from configconverter import convert

# Convert using file paths
convert('config.json', 'json', 'yaml', output_file='config.yaml')

# Convert using data strings
json_data = '{"name": "John", "age": 30}'
yaml_data = convert(json_data, 'json', 'yaml', from_file=False)
print(yaml_data)
```

## Contributing

Contributions are welcome! Please submit a pull request or open an issue on GitHub.

## License

This project is licensed under the MIT License.


