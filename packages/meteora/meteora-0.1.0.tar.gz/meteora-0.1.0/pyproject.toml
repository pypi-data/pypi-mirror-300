[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.0",
]

[project]
authors = [
    { email = "marti.bosch@epfl.ch", name = "MartÃ­ Bosch" },
]
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "better-abc",
    "geopandas>=1.0.0",
    "matplotlib",
    "requests",
    "requests-cache",
    "requests-oauthlib",
]
description = "Pythonic interface to access data from meteorological stations"
name = "meteora"
readme = "README.md"
requires-python = ">=3.9"
version = "0.1.0"

[project.license]
text = "GPL-3.0"

[project.optional-dependencies]
cx = [
    "contextily",
]
dev = [
    "build",
    "commitizen",
    "pip",
    "pre-commit",
    "toml",
    "tox",
    "twine",
]
doc = [
    "myst-parser",
    "sphinx",
]
ox = [
    "osmnx",
]
test = [
    "coverage[toml]",
    "pytest",
    "pytest-cov",
    "python-dotenv[cli]",
    "ruff",
]

[project.urls]
Repository = "https://github.com/martibosch/meteora"

[tool.commitizen]
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
version_provider = "pep621"
version_scheme = "semver"

[tool.coverage.report]
exclude_lines = [
    "except ImportError",
    "except ModuleNotFoundError",
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
]
ignore_errors = true
omit = [
    "docs/conf.py",
    "tests/*",
]

[tool.coverage.run]
source = [
    "meteora",
]

[tool.ruff]
line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "D",
    "E",
    "F",
    "I",
]

[tool.ruff.lint.isort]
known-first-party = [
    "meteora",
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401",
]
"tests/test_meteora.py" = [
    "D",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools.packages.find]
include = [
    "meteora",
    "meteora.*",
]

[tool.tox]
envlist = [
    "lint",
    "py39",
    "py310",
    "py311",
    "py312",
]
isolated_build = true
requires = [
    "tox>=4.19",
]

[tool.tox.gh-actions.python]
"3.9" = [
    "py39",
]
"3.10" = [
    "py310",
]
"3.11" = [
    "py311",
]
"3.12" = [
    "lint",
    "py312",
]

[tool.tox.testenv]
commands = [
    "dotenv -f .keys.env run pytest -s --cov=meteora --cov-append --cov-report=xml --cov-report term-missing tests",
]
conda_deps = [
    "gdal>=3.3",
]
extras = [
    "ox",
    "test",
]
whitelist_externals = [
    "pytest",
]

[tool.tox.testenv.lint]
commands = [
    "python -m build",
    "sphinx-build docs docs/_build",
    "twine check dist/*",
]
extras = [
    "dev",
    "doc",
    "test",
]
whitelist_externals = [
    "build",
    "sphinx-build",
    "twine",
]

[tool.tox.testenv.setenv]
PYTHONPATH = "{toxinidir}"
PYTHONWARNINGS = "ignore"
