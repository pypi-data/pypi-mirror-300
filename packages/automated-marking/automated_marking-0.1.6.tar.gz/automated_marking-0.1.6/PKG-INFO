Metadata-Version: 2.1
Name: automated-marking
Version: 0.1.6
Summary: Python script designed to clone Git repositories, detect programming languages, validate the code, and log the results to an Excel file.
Home-page: https://github.com/kawooky/CTA-automated-marking
Author: Youssef Kawook
Author-email: kawooky@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: pandas>=1.0
Requires-Dist: gitpython>=3.0
Requires-Dist: requests>=2.0
Requires-Dist: openpyxl>=3.0
Requires-Dist: sqlparse>=0.4

# Automated Repository Processor

This Python package is designed to clone Git repositories, detect their programming languages, validate the code, and log the results to an Excel file. It provides a user-friendly interface for processing multiple repositories efficiently.

## Features

- Clone or pull repositories from Git.
- Automatically detect the programming language used in each repository.
- Validate the code based on the detected language (supports Java, HTML/CSS, and SQL).
- Log results to an Excel file, with options to append to existing files.
- User-friendly file dialog for selecting Excel files.

## Installation

You can install the package directly from PyPI using pip:

```bash
pip install automated-marking
```

## Usage

1. **Create the repos.txt File**:

- After installation, you will need to create a repos.txt file in the root directory of your project. This file should contain the repository URLs and folder names, one per line, in the following format:

  ```txt
  https://github.com/user/repo_name folder_name
  ```

- Here's an example of a `repos.txt` file:

  ```txt
  https://github.com/example-user/java-project my-java-project
  https://github.com/example-user/html-css-project my-html-css-project
  https://github.com/example-user/sql-project my-sql-project
  ```

2. **Run the script**:

- After setting up the repos.txt file, run the following command to start the script:

  ```bash
  automated-marking
  ```

3. **Follow the prompts**:

- The script will check the validity of the repository URLs.
- You will be prompted to select an Excel file to log results using a visual dialog or create a new one.
- The results will be saved in the specified Excel file following a predetermined format.
