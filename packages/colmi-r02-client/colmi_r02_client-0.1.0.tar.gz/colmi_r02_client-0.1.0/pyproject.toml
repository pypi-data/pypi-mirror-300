[tool.poetry]
name = "colmi-r02-client"
version = "0.1.0"
description = "Connect to Colmi R02 smart ring over BLE"
authors = ["Wesley Ellis <tahnok@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
bleak = "^0.22.2"
asyncclick = "^8.1.7.2"

[tool.poetry.scripts]
colmi_r02_client = "colmi_r02_client.cli:cli_client"
colmi_r02_util = "colmi_r02_client.cli:util"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
ruff = "^0.6.0"
mypy = "^1.11.1"
freezegun = "^1.5.1"
hypothesis = "^6.112.0"
pytest-asyncio = "^0.24.0"


[tool.poetry.group.doc.dependencies]
pdoc = "^14.6.1"


[tool.poetry.group.nvim-lsp.dependencies]
pyright = "^1.1.382.post0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_no_return = true
warn_redundant_casts = true
strict_equality = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 125

[tool.ruff.lint]
select = [
  "ASYNC",  # flake8-async
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "DJ",     # flake8-django
  "E",      # pycodestyle
  "F",      # Pyflakes
  "FLY",    # flynt
  "INT",    # flake8-gettext
  "NPY",    # NumPy-specific rules
  "PD",     # pandas-vet
  "PIE",    # flake8-pie
  "PLE",    # Pylint errors
  "RET504", # flake8-return
  "RSE",    # flake8-raise
  "SIM",    # flake8-simplify
  "T10",    # flake8-debugger
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  "RUF",    # Ruff-specific rules
]
