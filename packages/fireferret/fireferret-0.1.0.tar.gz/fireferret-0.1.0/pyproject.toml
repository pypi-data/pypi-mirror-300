[project]
name = "fireferret"
version = "0.1.0"
authors = [
  {name="Dinno Koluh"},
]
description = "Repository containing different ML algorithms"
readme = "README.md"
requires-python = ">=3.12"

# Ruff configuration
[tool.ruff]
line-length = 200
indent-width = 4
# Assume Python 3.12
target-version = "py312"

[tool.ruff.format]
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Exclude a variety of commonly ignored directories.
[tool.ruff.lint]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "__init__.py",
]

# Rules can be found here: https://docs.astral.sh/ruff/rules
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

ignore = [
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "project-local",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
# Fill with local packages in src folder
project-local = [
    "fireferret",
    "tests"
]


[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
