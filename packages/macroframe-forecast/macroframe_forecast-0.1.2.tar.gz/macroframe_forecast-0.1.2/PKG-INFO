Metadata-Version: 2.1
Name: macroframe-forecast
Version: 0.1.2
Summary: Macroframework forecasting with accounting identities
Maintainer-email: Sakai Ando <sando@imf.org>, Sultan Orazbayev <sorazbayev@imf.org>
Project-URL: homepage, https://github.com/sakaiando/macroframe-forecast
Project-URL: repository, https://github.com/sakaiando/macroframe-forecast
Keywords: macroframework,forecasting,macroeconomic identities,high-dimensional forecasting,econometrics
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.11.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas>=2.2.0
Requires-Dist: numpy>=1.26.3
Requires-Dist: scipy>=1.12.0
Requires-Dist: scikit-learn>=1.4.0
Requires-Dist: dask>=2024.8.1
Requires-Dist: distributed>=2024.2.0
Requires-Dist: sktime>=0.27.0
Requires-Dist: sympy>=1.12
Requires-Dist: cvxpy>=1.5.3

# Systematizing Macroframework Forecasting: High-Dimensional Conditional Forecasting with Accounting Identities

This repository contains the Python code for the forecasting method described in:

[Systematizing Macroframework Forecasting: High-Dimensional Conditional Forecasting with Accounting Identities](https://link.springer.com/article/10.1057/s41308-023-00225-8).

# Installation

To install the `mff` package, run the following from the repository root:

```shell
python -m pip install .
```

# Development

For development of the code, use the environment in file `environment-dev.yml`.
It's recommended to install the editable version of the package, so the edits
are immediately reflected for testing:

```shell
python -m pip install -e .
```

## Building documentation

To build/update documentation, run:

```shell
sphinx-build -M html docs/source/ docs/build/
```
