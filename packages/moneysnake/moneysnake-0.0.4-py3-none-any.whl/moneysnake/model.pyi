from pydantic import BaseModel
from typing import Any, Self

def to_endpoint(class_name: str) -> str: ...

class MoneybirdModel(BaseModel):
    id: int | None
    def save(self) -> None: ...
    def update(self, data: dict[str, Any]) -> None: ...
    def delete(self) -> None: ...
    @classmethod
    def find_by_id(cls, id: int) -> Self: ...
    @classmethod
    def update_by_id(cls, id: int, data: dict[str, Any]) -> Self: ...
    @classmethod
    def delete_by_id(cls, contact_id: int) -> Self: ...
    @classmethod
    def from_dict(cls, data: dict[str, Any]) -> Self: ...
