# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .metadata_browser import MetadataBrowser
from .metadata_device import MetadataDevice
from .metadata_os import MetadataOs


class Metadata(pydantic_v1.BaseModel):
    user_agent: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    user agent
    """

    timezone: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    timezone
    """

    browser: typing.Optional[MetadataBrowser] = pydantic_v1.Field(default=None)
    """
    browser id
    """

    device: typing.Optional[MetadataDevice] = pydantic_v1.Field(default=None)
    """
    device id
    """

    os: typing.Optional[MetadataOs] = pydantic_v1.Field(default=None)
    """
    os id
    """

    locale: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    locale
    """

    location: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    location
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
