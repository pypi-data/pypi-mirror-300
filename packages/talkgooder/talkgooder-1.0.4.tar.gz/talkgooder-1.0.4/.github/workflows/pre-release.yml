# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test, build, and generate docs

on: 
  push:
    branches:
      - '**'
      - '!main'

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    name: Test Python versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The project default is 100 char lines
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    - name: Test with pytest
      run: |
        pytest
  build:
    name: Build and generate documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build setuptools setuptools-scm sphinx sphinx_rtd_theme myst_parser
    - name: Build the packages
      run: |
        python -m build
    - name: Generate documentation
      run: |
        sphinx-build -b html docsrc docs -E -d "docsrc/_doctrees"
    - name: Commit and push the new documentation
      run: |
        git config user.name "Brian Warner"
        git config user.email brian@bdwarner.com
        git add docs
        git commit -s -m "Rebuild the documentation" || exit 0
        git push
