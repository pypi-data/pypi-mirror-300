Metadata-Version: 2.1
Name: johannesmann
Version: 0.1.0
Summary: Python implementation of the Johannesmann Spatial Tessellation method.
Author-email: Leander Claes <claes@emt.uni-paderborn.de>
License: BSD license
        
        Copyright (c) 2024, Measurement Engineering Group
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its contributors
           may be used to endorse or promote products derived from this software
           without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
        ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
        WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: homepage, https://emt.uni-paderborn.de
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.7
Description-Content-Type: text/x-rst
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: numpy
Provides-Extra: doc
Requires-Dist: setuptools_scm; extra == "doc"
Requires-Dist: sphinx; extra == "doc"
Requires-Dist: sphinx-rtd-theme; extra == "doc"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"

**********************************
Johannesmann Spatial Tessellation
**********************************

Python implementation of the Johannesmann Spatial Tessellation method.

This method was developed for the occasion of Sarah Johannesmann's doctoral
thesis defence and is inspired by the way she cuts a cake. For a
two-dimensional, bounded plane this is realised by subdividing the plane by a
line, which intersects a random point on the plane at a random slope, resulting
in two tiles. The process is repeated an arbitrary number of times, with each
new line subdividing only the tile the random origin point is located.


Features
========

* Implementation of two-dimensions.
* Single point and grid sampling methods.


Example
=======

Import the package by::

    import johannesmann

Create a tessellation object with size 4 by 4 with 30 cuts::

    tsl = johannesmann.Tessellation(4, 4, 30)

Sample the tile ID number at the centre of the tessellated plane::

    center_id = tsl.tile_id(0, 0)

Sample the whole bounded plane (from -2 to 2 in both dimension) with a grid of
1000 by 1000 samples to get an image of the tessellation. Set `squash_ids=True`
to decrease the range of tile ID numbers by renumbering and removing unused
ID numbers::

    image = tsl.tile_id_grid(1000, 1000, squash_ids=True)
