[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "invoke-plugin-for-sphinx"
version = "3.0.0"
description = "Sphinx plugin which can render invoke tasks with autodoc"
authors = [{ name = "Kai Mueller", email = "kai.mueller01@sap.com"}]
readme = "README.md"
keywords = ["sphinx", "invoke", "plugin", "inv", "documentation"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Typing :: Typed"
]
requires-python = ">=3.9,<4"
dependencies = [
    "sphinx>=7,<9",
    "invoke>=2.1,<3",
]

[project.license]
text = "Apache-2.0"

[project.urls]
"Issue Tracker" = "https://github.com/SAP/invoke-plugin-for-sphinx/issues"
"Changelog" = "https://github.com/SAP/invoke-plugin-for-sphinx/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pre-commit==4.0.0",
    "pylint==3.3.1",
    "black==24.10.0",
    "isort==5.13.2",
    "mypy==1.11.2",
    "types-invoke==2.0.0.10",
]
test = [
    "pytest==8.3.3",
    "pytest-mock==3.14.0",
    "pytest-cov==5.0.0",
    "coverage==7.6.1",
    "diff-cover==9.2.0",
]

[tool.setuptools.packages.find]
include = ["invoke_plugin_for_sphinx"]

[tool.setuptools.package-data]
invoke_plugin_for_sphinx = ["py.typed"]

[tool.isort]
profile = "black"
add_imports = ["from __future__ import annotations"]

[tool.mypy]
# main config
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_unreachable = true
strict = true
warn_unused_ignores = false
# output
pretty = true
show_column_numbers = true
show_error_codes = true
show_traceback = true

[tool.pylint.basic]
no-docstring-rgx = "^_"

[tool.pylint.design]
min-public-methods = 0

[tool.pylint.master]
max-line-length = 100
py-version = [3, 8]

[tool.pylint."messages control"]
enable = ["all"]
disable = [
    # allow TODO comments
    "fixme",
    # allow disables
    "locally-disabled",
    "suppressed-message",
]

[tool.pylint.reports]
reports = false

[tool.pylint.similarities]
ignore-imports = true

[tool.coverage.report]
fail_under = 90
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true

[tool.diff_cover]
include_untracked = true
fail_under = 90
