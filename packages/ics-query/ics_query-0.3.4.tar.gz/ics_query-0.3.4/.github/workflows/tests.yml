name: tests

on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
  workflow_dispatch:

jobs:
  run-tests:
    strategy:
      matrix:
        config:
        # [Python version, tox env, OS]
        - ["3.9",   "py39", "ubuntu-latest"]
        - ["3.10",  "py310", "ubuntu-latest"]
        - ["3.11",  "py311", "ubuntu-latest"]
        - ["3.12",  "py312", "ubuntu-latest"]
        - ["3.9",  "ruff", "ubuntu-latest"]
        - ["3.11",  "exe", "windows-latest"]

    runs-on: ${{ matrix.config[2] }}
    name: ${{ matrix.config[1] }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.config[0] }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Test
      run: |
        tox -e ${{ matrix.config[1] }}
    - uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.config[1] }}-${{ matrix.config[2] }}  # dist-exe-windows-latest
        path: dist
        if-no-files-found: ignore
        retention-days: 1
        compression-level: 0
        
  deploy-tag-to-pypi:
    name: Publish Package on PyPI
    # only deploy on tags, see https://stackoverflow.com/a/58478262/1320237
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
    - run-tests
    runs-on: ubuntu-latest
    # This environment stores the TWINE_USERNAME and TWINE_PASSWORD
    # see https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    environment:
      name: PyPI
      url: https://pypi.org/project/ics-query/
    # after using the environment, we need to make the secrets available
    # see https://docs.github.com/en/actions/security-guides/encrypted-secrets#example-using-bash
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade wheel twine build
    - name: remove old files
      run: rm -rf dist/*
    - name: build distribution files
      run: python -m build
    - name: deploy to pypi
      run: |
        # You will have to set the variables TWINE_USERNAME and TWINE_PASSWORD
        # You can use a token specific to your project by setting the user name to
        # __token__ and the password to the token given to you by the PyPI project.
        # sources:
        #   - https://shambu2k.hashnode.dev/gitlab-to-pypi
        #   - http://blog.octomy.org/2020/11/deploying-python-pacakges-to-pypi-using.html?m=1
        # Also, set the tags as protected to allow the secrets to be used.
        # see https://docs.gitlab.com/ee/user/project/protected_tags.html
        if [ -z "$TWINE_USERNAME" ]; then
          echo "WARNING: TWINE_USERNAME not set!"
        fi
        if [ -z "$TWINE_PASSWORD" ]; then
          echo "WARNING: TWINE_PASSWORD not set!"
        fi
        twine check dist/*
        twine upload dist/*
          
  # artifact-check:
  #   name: artifact check
  #   runs-on: ubuntu-latest
  #   needs:
  #     - run-tests
  #   steps:
  #   - uses: actions/download-artifact@v4
  #     with:
  #       pattern: dist-*
  #       path: dist
  #   - run: ls -R dist
  
  github-release:
    name: "Publish GitHub Release"
    # only deploy on tags, see https://stackoverflow.com/a/58478262/1320237
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
      - run-tests
      - deploy-tag-to-pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
      - run: ls -R dist
      - name: create release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          body: "For a list of changes, please refer to the [Changelog](https://github.com/niccokunzmann/ics-query#changelog)."
          generateReleaseNotes: false
          artifacts: "dist/dist-exe-windows-latest/ics-query.exe"
