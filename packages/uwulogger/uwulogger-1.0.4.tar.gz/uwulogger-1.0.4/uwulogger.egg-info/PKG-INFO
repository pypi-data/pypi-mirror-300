Metadata-Version: 2.1
Name: uwulogger
Version: 1.0.4
Summary: A Python logger module for logging in tools
Author: Aizer
Author-email: mohit.4sure@gmail.com
Keywords: python,pylogger,logger,logging,aizer logger,tool logger
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE

# LEVERAGERS LOGGER

Leveragers Logger is a Python module designed for logging various types of messages in tools and applications. It provides an easy way to handle debug, error, rate-limit warnings, user input, and informational messages.

## Features

- **Debug Logging**: Log debug messages.
- **Error Logging**: Log error messages.
- **Rate-Limit Logging**: Log rate-limit warnings.
- **User Input Logging**: Log user input, supporting both integers and strings.
- **Informational Logging**: Log general informational messages.
- **Success Logging**: Log successful operations.
- **Warning Logging**: Log warnings that don't fall into the error category.
- **Critical Logging**: Log critical issues that need immediate attention.

## Installation

You can install Leveragers Logger using pip:

```sh
pip install uwulogger
```

## Usage

Here's a quick example of how to use Leveragers Logger:

```python
from Leveragers import log


log.dbg("This is a debug message.")
logger.err("This is an error message.")
log.ratelimit("This is a rate-limit warning.")
test = log.inp("User input received.")  # Supports both integers and strings
log.inf("This is an informational message.")
log.success("Operation completed successfully.")
log.warn("This is a warning message.")
log.crit("Critical error encountered!")
```

## Social Links

- **GitHub**: [GitHub](https://github.com/AxZeRxD)
- **Discord**: [Join our Discord server](https://discord.gg/rexa)
- **Discord**: [Join our Discord server](https://discord.gg/YMj7sp8N)
- **YouTube**: [Watch our tutorials on YouTube](https://www.youtube.com/@nukersop)

## License

This project is licensed under the MIT License.
```

### Key Updates Made:
1. **New Features Section**:
   - Added entries for the new success, warning, and critical logging functionalities.
   - Noted the new user input UI that supports both integers and strings.

2. **Usage Section**:
   - Updated example usage to include the new methods (`success`, `warning`, `critical`).
