# This section describes the requirements of the build/installation
# process itself. Being able to do this was the original reason to
# introduce pyproject.toml
[build-system]
requires = [
    "setuptools >=61",
    "setuptools_scm >=7",
]
build-backend = "setuptools.build_meta"

# This section provides general project metadata that is used across
# a variety of build tools. Notably, the version specified here is the
# single source of truth for epmatools's version
[project]
name = "epmatools"
description = "Tools to manipulate EPMA analyses"
readme = "README.md"
maintainers = [
    { name = "Ondrej Lexa", email = "lexa.ondrej@gmail.com" },
]
dynamic = ["version"]
requires-python = ">=3.9"
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "click",
    "numpy",
    "matplotlib",
    "scipy",
    "h5py",
    "pandas",
    "scikit-learn",
    "colorcet",
    "xlrd",
    "openpyxl",
    "periodictable",
    "jupyterlab",
]

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-cov",
    "nbval",
]
docs = [
    "ipykernel",
    "nbsphinx",
    "nbsphinx-link",
    "sphinx",
    "sphinx_mdinclude",
    "sphinx_rtd_theme",
]

# Command line scripts installed as part of the installation
[project.scripts]
epmatools = "epmatools.__main__:main"

[tool.setuptools]
packages = [
    "epmatools",
]

[tool.setuptools.package-dir]
epmatools = "src"

# Configure setuptools_scm, which extracts the version number from
# the version control system. For more information see its documentation:
# https://github.com/pypa/setuptools_scm
[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "node-and-date"
write_to = "src/_version.py"

# The following is the configuration for the pytest test suite
[tool.pytest.ini_options]
testpaths = [
    "tests",
    "notebooks",
]
