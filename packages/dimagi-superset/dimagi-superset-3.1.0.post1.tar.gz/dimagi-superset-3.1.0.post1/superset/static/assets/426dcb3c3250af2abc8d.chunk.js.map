{"version":3,"file":"426dcb3c3250af2abc8d.chunk.js","mappings":"iJAoBO,MAAMA,EAAiB,CAC5BC,MAAMC,EAAAA,EAAAA,GAAE,OACRC,KAAM,CACJ,CACEF,KAAM,gBACNG,OAAOF,EAAAA,EAAAA,GAAE,iBACTG,IAAK,wBACLC,YAAY,GAEd,CACEL,KAAM,gBACNG,OAAOF,EAAAA,EAAAA,GAAE,iBACTG,IAAK,mBACLC,YAAY,I,mLCFlBC,EAAAA,EAAkBC,iBAAiB,MAAOC,EAAAA,GAC1CF,EAAAA,EAAkBC,iBAAiB,WAAYE,EAAAA,GAC/CH,EAAAA,EAAkBC,iBAAiB,OAAQG,EAAAA,GAC3CJ,EAAAA,EAAkBC,iBAAiB,OAAQI,EAAAA,GAE3C,MAAMC,EAA2BC,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;aAe9BC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,UAAUC,IAAI;;EAIzC,SAAUC,EAAqBC,GAU5C,IAV6C,eAC5CC,EAAc,gBACdC,EAAe,SACfC,KACGC,GAMJJ,EAcC,OACEK,EAAAA,EAAAA,IAACd,EAAwB,MACvBc,EAAAA,EAAAA,IAACC,EAAAA,EAAMC,KAAI,CACTC,SAAU,EACVC,KAAK,SACLC,QAASC,IAlBf,IAAyBC,EAmBjBD,EAAEE,iBACFF,EAAEG,cAAcC,OApBCH,EAqBDT,GApBtBa,EAAAA,EAAAA,IAAoB,IAAMC,QAAQC,QAAQN,KACvCO,MAAK,KACAjB,GACFA,GAAgBtB,EAAAA,EAAAA,GAAE,e,IAGrBwC,OAAM,KACDnB,GACFA,GAAerB,EAAAA,EAAAA,GAAE,iD,GAYQ,KAG7ByB,EAAAA,EAAAA,IAACpB,EAAAA,GAAiBoC,EAAAA,EAAAA,GAAA,CAACC,MAAOC,EAAAA,GAAYnB,GACnCD,GAIT,C,kDCvEc,SAAUqB,EAAoB9B,GAQ3C,IAR6E,QAC5E+B,EAAO,UACPC,EAAS,eACTC,GAKDjC,EACC,MAAMkC,EAAQH,EAAQI,WAAUC,GAASA,EAAMC,KAAOJ,KAC/CK,EAAcC,IAAmBC,EAAAA,EAAAA,UAASN,IAC1CO,EAAiBC,IAAsBF,EAAAA,EAAAA,WAAS,IAChDG,EAAaC,IAAkBJ,EAAAA,EAAAA,WAAS,GAE/C,SAASK,IACPH,EAAoC,IAAjBJ,GACnBM,EAAeN,IAAiBP,EAAQe,OAAS,EACnD,CAEA,SAASC,EAAiBC,GACxB,MACMd,EAAQI,GADCU,GAAY,EAAI,GAE3Bd,GAAS,GAAKA,EAAQH,EAAQe,SAChCd,EAAUD,EAAQG,GAAOG,IACzBE,EAAgBL,GAChBW,IAEJ,CAkBA,OAJAI,EAAAA,EAAAA,YAAU,KACRJ,GAAY,IAGP,CACLK,eAjBF,SAAwBC,GAClBb,GAAgB,GAAKA,EAAeP,EAAQe,SAC/B,cAAXK,EAAGC,KAAkC,MAAXD,EAAGC,KAC/BD,EAAGhC,iBACH4B,GAAiB,IACG,YAAXI,EAAGC,KAAgC,MAAXD,EAAGC,MACpCD,EAAGhC,iBACH4B,GAAiB,IAGvB,EAQEA,mBACAN,kBACAE,cAEJ,C,+XC7CA,MAAMU,EAAavD,EAAAA,GAAOC,GAAG;WAClBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOoD,UAAUC,MAAM;eACxCjD,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAAKL,EAAMuD,WAAWC,MAAMC,CAAC;;;EAKhDC,EAAa7D,EAAAA,GAAOC,GAAG;WAClB6D,IAAA,IAAC,MAAE3D,GAAO2D,EAAA,OAAK3D,EAAMC,OAAOC,UAAU0D,KAAK;eACvCC,IAAA,IAAC,MAAE7D,GAAO6D,EAAA,OAAK7D,EAAMuD,WAAWC,MAAMM,CAAC;;EAIhDC,EAAkBlE,EAAAA,GAAOC,GAAG;gBAClBkE,IAAA,IAAC,MAAEhE,GAAOgE,EAAA,OAAsB,EAAjBhE,EAAMiE,QAAY;EAG3CC,EAAYrE,EAAAA,GAAOC,GAAG;;eAEbqE,IAAA,IAAC,MAAEnE,GAAOmE,EAAA,OAAKnE,EAAMuD,WAAWC,MAAMC,CAAC;aACzCW,IAAA,IAAC,MAAEpE,GAAOoE,EAAA,OAAsB,EAAjBpE,EAAMiE,QAAY;MACxCI,IAAA,IAAC,MAAErE,GAAOqE,EAAA,OAAsB,EAAjBrE,EAAMiE,QAAY;kBACrBK,IAAA,IAAC,MAAEtE,GAAOsE,EAAA,OAAsB,EAAjBtE,EAAMiE,QAAY;WACxCM,IAAA,IAAC,MAAEvE,GAAOuE,EAAA,OAAKvE,EAAMC,OAAOoD,UAAUmB,KAAK;;;;;kBAKpCC,IAAA,IAAC,MAAEzE,GAAOyE,EAAA,OAAKzE,EAAMC,OAAOoD,UAAUqB,MAAM;;qBAEzCC,IAAA,IAAC,MAAE3E,GAAO2E,EAAA,OAAK3E,EAAM4E,YAAY;qBACjCC,IAAA,IAAC,MAAE7E,GAAO6E,EAAA,OAAsB,EAAjB7E,EAAMiE,QAAY;;;;kBAIpCa,IAAA,IAAC,MAAE9E,GAAO8E,EAAA,OAAK9E,EAAMC,OAAOoD,UAAU0B,MAAM;;EAGxDC,GAAcnF,EAAAA,EAAAA,IAAOoF,EAAAA,QAAM;;eAElBC,IAAA,IAAC,MAAElF,GAAOkF,EAAA,OAAsB,EAAjBlF,EAAMiE,QAAY;;;;iBAI/BkB,IAAA,IAAC,MAAEnF,GAAOmF,EAAA,OAAKnF,EAAMuD,WAAWC,MAAM4B,EAAE;mBACtCC,IAAA,IAAC,MAAErF,GAAOqF,EAAA,OAAKrF,EAAMuD,WAAW+B,QAAQC,MAAM;mBAC9CC,IAAA,IAAC,MAAExF,GAAOwF,EAAA,OAAKxF,EAAMuD,WAAWC,MAAMiC,CAAC;;;;EAsG1D,GAAeC,EAAAA,EAAAA,KAvFf,SAA0BC,GASD,IATE,OACzBC,EAAM,aACNC,EAAY,QACZ/D,EAAO,MACPK,EAAK,UACLJ,EAAS,KACT+D,EAAI,eACJxF,EAAc,gBACdC,GACuBoF,EACvB,MAAM,eAAE1C,EAAc,iBAAEH,EAAgB,gBAAEN,EAAe,YAAEE,IACzDb,EAAAA,EAAAA,GAAkC,CAChCC,UACAE,eAAgBG,EAAMC,GACtBL,eAGGgE,EAAYC,IAAiBzD,EAAAA,EAAAA,UAA8B,SAE5D,GAAEH,EAAE,IAAE6D,EAAG,aAAEC,GAAiB/D,EAClC,OACEzB,EAAAA,EAAAA,IAAA,OAAKI,KAAK,OAAOqF,QAASlD,IACxBvC,EAAAA,EAAAA,IAACsE,EAAW,CACVY,OAAQA,EACRE,KAAMA,EACNM,OAAOnH,EAAAA,EAAAA,GAAE,iBACToH,QACE3F,EAAAA,EAAAA,IAAA4F,EAAAA,SAAA,MACE5F,EAAAA,EAAAA,IAAC6F,EAAAA,EAAM,CAELpD,IAAI,iBACJqD,SAAUhE,EACVzB,QAASA,IAAM+B,GAAiB,KAE/B7D,EAAAA,EAAAA,GAAE,cAELyB,EAAAA,EAAAA,IAAC6F,EAAAA,EAAM,CAELpD,IAAI,aACJqD,SAAU9D,EACV3B,QAASA,IAAM+B,GAAiB,KAE/B7D,EAAAA,EAAAA,GAAE,UAELyB,EAAAA,EAAAA,IAAC6F,EAAAA,EAAM,CAELpD,IAAI,kBACJsD,YAAY,UACZ1F,QAASA,IAAM8E,EAAazD,KAE3BnD,EAAAA,EAAAA,GAAE,uBAKTyB,EAAAA,EAAAA,IAAC0C,EAAU,MAAEnE,EAAAA,EAAAA,GAAE,cACfyB,EAAAA,EAAAA,IAACgD,EAAU,KAAEvB,EAAMuE,WACnBhG,EAAAA,EAAAA,IAACqD,EAAe,MACdrD,EAAAA,EAAAA,IAACwD,EAAS,CACRpD,KAAK,SAEL6F,UAAWC,IAAG,CAAEC,OAAuB,SAAfd,IACxBhF,QAASA,IAAMiF,EAAc,UAE5B/G,EAAAA,EAAAA,GAAE,gBAELyB,EAAAA,EAAAA,IAACwD,EAAS,CACRpD,KAAK,SAEL6F,UAAWC,IAAG,CAAEC,OAAuB,aAAfd,IACxBhF,QAASA,IAAMiF,EAAc,cAE5B/G,EAAAA,EAAAA,GAAE,qBAGPyB,EAAAA,EAAAA,IAACN,EAAAA,EAAqB,CACpBE,eAAgBA,EAChBC,gBAAiBA,EACjBuG,SAAS,QAEQ,SAAff,EAAwBE,EAAMC,IAAiB,KAK3D,I,0BCvHA,MAGMa,GAAqBlH,EAAAA,EAAAA,IAAOmH,EAAAA,EAAqC;;;;EAMvE1H,EAAAA,EAAkBC,iBAAiB,MAAO0G,EAAAA,GAC1C,MAAMgB,GAA0BpH,EAAAA,EAAAA,IAAOP,EAAAA,EAAkB;YAC7CS,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAsB,GAAjBC,EAAMiE,QAAa;;;;EAWxCiD,EAAmBrH,EAAAA,GAAOC,GAAG;;;aAGtBO,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAAKL,EAAMC,OAAOkH,QAAQhH,IAAI;;;;EAM/CiH,EAAoBvH,EAAAA,GAAOC,GAAG;WACzB6D,IAAA,IAAC,MAAE3D,GAAO2D,EAAA,OAAK3D,EAAMC,OAAOC,UAAU0D,KAAK;EAGhDyD,GAAaxH,EAAAA,EAAAA,IAAOyH,EAAAA,EAAM;;iBAEfzD,IAAA,IAAC,MAAE7D,GAAO6D,EAAA,OAAK7D,EAAMuD,WAAWgE,SAASC,SAAS;EAqXnE,GAAe9B,EAAAA,EAAAA,KAlXf,SAAkB1B,GAAmC,IAAlC,eAAE1D,GAAgC0D,EACnD,MACEyD,OAAO,QAAEC,EAASC,cAAeC,EAAYC,mBAAoB/F,GAAS,UAC1EC,IACE+F,EAAAA,EAAAA,IACF,SACA7I,EAAAA,EAAAA,GAAE,iBACFqB,GACA,IAGKyH,EAA0BC,IAC/BzF,EAAAA,EAAAA,YAEIvC,GAAQiI,EAAAA,EAAAA,MACRC,GAAUC,EAAAA,EAAAA,MAEVC,GAAqBC,EAAAA,EAAAA,cACxBjG,IACCkG,EAAAA,EAAeC,IAAI,CACjBC,SAAU,iBAAiBpG,MAC1BZ,MACD2C,IAAkB,IAAjB,KAAEsE,EAAO,CAAC,GAAGtE,EACZ6D,EAA4B,IAAKS,EAAKC,QAAS,IAEjDC,EAAAA,EAAAA,KAAmBC,GACjBtI,GACErB,EAAAA,EAAAA,GAAE,uDAAwD2J,MAG/D,GAEH,CAACtI,IAGGuI,EAAyB,CAC7BC,YAAa,mBACV/J,EAAAA,GAGCgK,EAAc,CAAC,CAAE3G,GAAI4G,EAAAA,EAAmBC,WAAYC,MAAM,IAC1DC,GAAUC,EAAAA,EAAAA,UACd,IAAM,CACJ,CACEC,KAAMjF,IAUD,IATHkF,KACEC,UAAU,OAAEC,KAQfpF,EACC,MAAMqF,EAGF,CACFzK,KAAM,KACNG,MAAO,IAwCT,OAtCIqK,IAAWE,EAAAA,GAAWC,SACxBF,EAAazK,MACX0B,EAAAA,EAAAA,IAACC,EAAAA,EAAMiJ,MAAK,CAACC,UAAW7J,EAAMC,OAAO6J,QAAQ3J,OAE/CsJ,EAAatK,OAAQF,EAAAA,EAAAA,GAAE,YAEvBuK,IAAWE,EAAAA,GAAWK,QACtBP,IAAWE,EAAAA,GAAWM,SAEtBP,EAAazK,MACX0B,EAAAA,EAAAA,IAACC,EAAAA,EAAMsJ,OAAM,CACXJ,UACEL,IAAWE,EAAAA,GAAWK,OAClB/J,EAAMC,OAAOiK,MAAM/J,KACnBH,EAAMC,OAAOC,UAAUC,OAIjCsJ,EAAatK,OAAQF,EAAAA,EAAAA,GAAE,WACduK,IAAWE,EAAAA,GAAWS,SAC/BV,EAAazK,MACX0B,EAAAA,EAAAA,IAACC,EAAAA,EAAMyJ,QAAO,CAACP,UAAW7J,EAAMC,OAAOkH,QAAQhH,OAEjDsJ,EAAatK,OAAQF,EAAAA,EAAAA,GAAE,YACduK,IAAWE,EAAAA,GAAWW,WAC/BZ,EAAazK,MACX0B,EAAAA,EAAAA,IAACC,EAAAA,EAAM2J,QAAO,CAACT,UAAW7J,EAAMC,OAAOC,UAAUqK,SAEnDd,EAAatK,OAAQF,EAAAA,EAAAA,GAAE,YAEvBuK,IAAWE,EAAAA,GAAWc,WACtBhB,IAAWE,EAAAA,GAAWe,UAEtBhB,EAAazK,MACX0B,EAAAA,EAAAA,IAACC,EAAAA,EAAM+J,OAAM,CAACb,UAAW7J,EAAMC,OAAOC,UAAUC,OAElDsJ,EAAatK,OAAQF,EAAAA,EAAAA,GAAE,eAGvByB,EAAAA,EAAAA,IAACiK,EAAAA,EAAO,CAACvE,MAAOqD,EAAatK,MAAOyL,UAAU,WAC5ClK,EAAAA,EAAAA,IAAA,YAAO+I,EAAazK,MACZ,EAGd6L,SAAU7B,EAAAA,EAAmBQ,OAC7BsB,KAAM,KACNC,eAAe,GAEjB,CACEF,SAAU7B,EAAAA,EAAmBC,WAC7B+B,QAAQ/L,EAAAA,EAAAA,GAAE,QACV6L,KAAM,KACNzB,KAAMhF,IAII,IAHRiF,KACEC,UAAU,WAAEN,KAEV5E,EACJ,MACM4G,EADcC,IAAAA,IAAWjC,GAAYkC,QAExCC,OAAOC,EAAAA,IACPC,MAAM,KAQT,OALE5K,EAAAA,EAAAA,IAAA4F,EAAAA,SAAA,KACG2E,EAAuB,GAAI,KAAAvK,EAAAA,EAAAA,IAAA,WAC3BuK,EAAuB,GAGH,GAG7B,CACED,QAAQ/L,EAAAA,EAAAA,GAAE,YACV6L,KAAM,KACNzB,KAAM/E,IAII,IAHRgF,KACEC,UAAU,OAAEC,EAAM,WAAEP,EAAU,SAAEsC,KAE9BjH,EACJ,MAAMkH,EAAYhC,IAAWE,EAAAA,GAAWK,OAAS,SAAWP,EACtDiC,EAAYF,EACdL,IAAOA,IAAAA,IAAWK,EAAWtC,IAAamC,OAAOM,EAAAA,IACjD,eACJ,OACEhL,EAAAA,EAAAA,IAAC2G,EAAU,CAACsE,KAAMH,EAAW1K,KAAK,SAC/B2K,EACU,GAInB,CACEZ,SAAU7B,EAAAA,EAAmBtC,SAC7BsE,QAAQ/L,EAAAA,EAAAA,GAAE,YACV6L,KAAM,MAER,CACED,SAAU7B,EAAAA,EAAmB4C,cAC7BZ,QAAQ/L,EAAAA,EAAAA,GAAE,YACV6L,KAAM,MAER,CACED,SAAU7B,EAAAA,EAAmB6C,SAC7BC,QAAQ,GAEV,CACEjB,SAAU7B,EAAAA,EAAmB+C,OAC7Bf,QAAQ/L,EAAAA,EAAAA,GAAE,UACV6L,KAAM,MAER,CACEzB,KAAM9E,IAII,IAHR+E,KACEC,UAAYyC,WAAYC,EAAS,MAE/B1H,EACJ,MAAM2H,EAAQD,EAAOE,KAAKC,GAAeA,EAAMA,QACzCC,EAAOH,EAAMrJ,OAAS,EAAIqJ,EAAMI,QAAU,GAEhD,OAAIJ,EAAMrJ,QAENnC,EAAAA,EAAAA,IAACwG,EAAgB,MACfxG,EAAAA,EAAAA,IAAA,YAAO2L,IACP3L,EAAAA,EAAAA,IAAC6L,EAAAA,EAAO,CACN3B,UAAU,QACVxE,OAAOnH,EAAAA,EAAAA,GAAE,UACTuN,QAAQ,QACRC,SACE/L,EAAAA,EAAAA,IAAA4F,EAAAA,SAAA,KACG4F,EAAMC,KAAKnN,IACV0B,EAAAA,EAAAA,IAAC0G,EAAiB,CAACjE,IAAKnE,GAAOA,QAKrC0B,EAAAA,EAAAA,IAAA,QAAMiG,UAAU,SAAQ,KAAGuF,EAAMrJ,OAAO,OAMzCwJ,CAAI,EAEbxB,SAAU7B,EAAAA,EAAmBgD,WAC7BhB,QAAQ/L,EAAAA,EAAAA,GAAE,UACV6L,KAAM,KACNC,eAAe,GAEjB,CACEF,SAAU7B,EAAAA,EAAmB0D,gBAC7B1B,QAAQ/L,EAAAA,EAAAA,GAAE,QACV6L,KAAM,KACNzB,KAAM5E,IAAA,IACJ6E,KACEC,UAAU,KAAEoD,KAEVlI,EAAA,OAAKmI,EAAAA,EAAAA,GAAaD,EAAK,GAE/B,CACE9B,SAAU7B,EAAAA,EAAmB2D,KAC7Bb,QAAQ,GAEV,CACEjB,SAAU7B,EAAAA,EAAmB6D,KAC7B7B,QAAQ/L,EAAAA,EAAAA,GAAE,QACV6L,KAAM,MAER,CACED,SAAU7B,EAAAA,EAAmB/C,IAC7B+E,QAAQ/L,EAAAA,EAAAA,GAAE,OACVoK,KAAM1E,IAAA,IAAG2E,KAAK,SAAEC,EAAQ,GAAEnH,IAAWuC,EAAA,OACnCjE,EAAAA,EAAAA,IAAA,OACEG,SAAU,EACVC,KAAK,SAELC,QAASA,IAAMiH,EAA4BuB,KAE3C7I,EAAAA,EAAAA,IAACuG,EAAuB,CAACH,SAAS,MAAMnF,MAAOC,EAAAA,IAC5CkL,EAAAA,EAAAA,IAAWvD,EAAStD,IAtRL,IAwRd,GAGV,CACE+E,QAAQ/L,EAAAA,EAAAA,GAAE,WACVmD,GAAI,UACJ2I,eAAe,EACf1B,KAAMxE,IAAA,IACJyE,KACEC,UAAU,GAAEnH,KAEVyC,EAAA,OACJnE,EAAAA,EAAAA,IAACiK,EAAAA,EAAO,CAACvE,OAAOnH,EAAAA,EAAAA,GAAE,yBAA0B2L,UAAU,WACpDlK,EAAAA,EAAAA,IAACqM,EAAAA,GAAI,CAACC,GAAI,mBAAmB5K,MAC3B1B,EAAAA,EAAAA,IAACC,EAAAA,EAAMsM,KAAI,CAACpD,UAAW7J,EAAMC,OAAOC,UAAUC,QAExC,KAIhB,IAGI+M,GAAmB9D,EAAAA,EAAAA,UACvB,IAAM,CACJ,CACE4B,QAAQ/L,EAAAA,EAAAA,GAAE,YACVkE,IAAK,WACLf,GAAI,WACJ+K,MAAO,SACPC,SAAUC,EAAAA,EAAeC,gBACzBC,iBAAiBtO,EAAAA,EAAAA,GAAE,OACnBuO,cAAcC,EAAAA,EAAAA,IACZ,QACA,YACA9E,EAAAA,EAAAA,KAAmBC,GACjBtI,GACErB,EAAAA,EAAAA,GAAE,uDAAwD2J,OAIhE8E,UAAU,GAEZ,CACE1C,QAAQ/L,EAAAA,EAAAA,GAAE,SACVkE,IAAK,QACLf,GAAI,SACJ+K,MAAO,SACPC,SAAUC,EAAAA,EAAeM,OACzBJ,gBAAiB,MACjBC,cAAcI,EAAAA,EAAAA,IACZ,QACA,UACAjF,EAAAA,EAAAA,KAAmBC,GACjBtI,GACErB,EAAAA,EAAAA,GAAE,qDAAsD2J,OAI9D8E,UAAU,GAEZ,CACE1C,QAAQ/L,EAAAA,EAAAA,GAAE,QACVkE,IAAK,OACLf,GAAI,OACJ+K,MAAO,SACPC,SAAUC,EAAAA,EAAeC,gBACzBC,gBAAiB,MACjBC,cAAcC,EAAAA,EAAAA,IACZ,QACA,QACA9E,EAAAA,EAAAA,KAAmBC,GACjBtI,GACErB,EAAAA,EAAAA,GAAE,mDAAoD2J,OAI5D8E,UAAU,GAEZ,CACE1C,QAAQ/L,EAAAA,EAAAA,GAAE,cACVkE,IAAK,aACLf,GAAI,aACJ+K,MAAO,iBACPC,SAAUC,EAAAA,EAAeQ,SAE3B,CACE7C,QAAQ/L,EAAAA,EAAAA,GAAE,wBACVkE,IAAK,MACLf,GAAI,MACJ+K,MAAO,SACPC,SAAUC,EAAAA,EAAeS,YAG7B,CAACxN,IAGH,OACEI,EAAAA,EAAAA,IAAA4F,EAAAA,SAAA,MACE5F,EAAAA,EAAAA,IAACqN,EAAAA,EAAYlF,GACZd,IACCrH,EAAAA,EAAAA,IAACsN,EAAiB,CAChBpI,OAAQA,IAAMoC,OAA4BiG,GAC1C9L,MAAO4F,EACPjG,QAASA,EACTC,UAAWqG,EACXvC,aAAezD,GAAe8F,EAAQgG,KAAK,mBAAmB9L,KAC9D0D,MAAI,KAGRpF,EAAAA,EAAAA,IAACqG,EAAkB,CACjBJ,UAAU,0BACVwC,QAASA,EACTgF,MAAOvG,EACPwG,KAAMtM,EACNC,UAAWA,EACXmL,QAASA,EACTnE,YAAaA,EACbrB,QAASA,EACT2G,SAhZU,GAiZVC,eAAwC,MAAxBvG,OAAwB,EAAxBA,EAA0B3F,GAC1CmM,YAAaA,OACbjO,eAAgBA,EAChBC,gBAAiBA,EAAAA,KAIzB,G,kBC7bc,SAAUqM,EAAa4B,GACnC,OAAKA,EAGE,GAAGA,EAAMC,cAAcD,EAAME,YAF3B,EAGX,C","sources":["webpack://superset/./src/features/home/commonMenuData.ts","webpack://superset/./src/features/queries/SyntaxHighlighterCopy.tsx","webpack://superset/./src/features/queries/hooks/useQueryPreviewState.ts","webpack://superset/./src/features/queries/QueryPreviewModal.tsx","webpack://superset/./src/pages/QueryHistoryList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('SQL'),\n  tabs: [\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\n\ntype BaseQueryObject = {\n  id: number;\n};\n\nexport default function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';\nimport { QueryObject } from 'src/views/CRUD/types';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 24px 0;\n`;\n\nconst QueryViewToggle = styled.div`\n  margin: 0 0 ${({ theme }) => theme.gridUnit * 6}px 0;\n`;\n\nconst TabButton = styled.div`\n  display: inline;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding: ${({ theme }) => theme.gridUnit * 2}px\n    ${({ theme }) => theme.gridUnit * 4}px;\n  margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n  color: ${({ theme }) => theme.colors.secondary.dark1};\n\n  &.active,\n  &:focus,\n  &:hover {\n    background: ${({ theme }) => theme.colors.secondary.light4};\n    border-bottom: none;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &:hover:not(.active) {\n    background: ${({ theme }) => theme.colors.secondary.light5};\n  }\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: ${({ theme }) => theme.gridUnit * 6}px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ninterface QueryPreviewModalProps extends ToastProps {\n  onHide: () => void;\n  openInSqlLab: (id: number) => any;\n  queries: QueryObject[];\n  query: QueryObject;\n  fetchData: (id: number) => any;\n  show: boolean;\n}\n\nfunction QueryPreviewModal({\n  onHide,\n  openInSqlLab,\n  queries,\n  query,\n  fetchData,\n  show,\n  addDangerToast,\n  addSuccessToast,\n}: QueryPreviewModalProps) {\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n    useQueryPreviewState<QueryObject>({\n      queries,\n      currentQueryId: query.id,\n      fetchData,\n    });\n\n  const [currentTab, setCurrentTab] = useState<'user' | 'executed'>('user');\n\n  const { id, sql, executed_sql } = query;\n  return (\n    <div role=\"none\" onKeyUp={handleKeyPress}>\n      <StyledModal\n        onHide={onHide}\n        show={show}\n        title={t('Query preview')}\n        footer={\n          <>\n            <Button\n              data-test=\"previous-query\"\n              key=\"previous-query\"\n              disabled={disablePrevious}\n              onClick={() => handleDataChange(true)}\n            >\n              {t('Previous')}\n            </Button>\n            <Button\n              data-test=\"next-query\"\n              key=\"next-query\"\n              disabled={disableNext}\n              onClick={() => handleDataChange(false)}\n            >\n              {t('Next')}\n            </Button>\n            <Button\n              data-test=\"open-in-sql-lab\"\n              key=\"open-in-sql-lab\"\n              buttonStyle=\"primary\"\n              onClick={() => openInSqlLab(id)}\n            >\n              {t('Open in SQL Lab')}\n            </Button>\n          </>\n        }\n      >\n        <QueryTitle>{t('Tab name')}</QueryTitle>\n        <QueryLabel>{query.tab_name}</QueryLabel>\n        <QueryViewToggle>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-user-sql\"\n            className={cx({ active: currentTab === 'user' })}\n            onClick={() => setCurrentTab('user')}\n          >\n            {t('User query')}\n          </TabButton>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-executed-sql\"\n            className={cx({ active: currentTab === 'executed' })}\n            onClick={() => setCurrentTab('executed')}\n          >\n            {t('Executed query')}\n          </TabButton>\n        </QueryViewToggle>\n        <SyntaxHighlighterCopy\n          addDangerToast={addDangerToast}\n          addSuccessToast={addSuccessToast}\n          language=\"sql\"\n        >\n          {(currentTab === 'user' ? sql : executed_sql) || ''}\n        </SyntaxHighlighterCopy>\n      </StyledModal>\n    </div>\n  );\n}\n\nexport default withToasts(QueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback, ReactElement } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  QueryState,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n  shortenSQL,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport Label from 'src/components/Label';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport ListView, {\n  Filters,\n  FilterOperator,\n  ListViewProps,\n} from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObject, QueryObjectColumns } from 'src/views/CRUD/types';\n\nimport Icons from 'src/components/Icons';\nimport QueryPreviewModal from 'src/features/queries/QueryPreviewModal';\nimport { addSuccessToast } from 'src/components/MessageToasts/actions';\nimport getOwnerName from 'src/utils/getOwnerName';\n\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\n\nconst TopAlignedListView = styled(ListView)<ListViewProps<QueryObject>>`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\ninterface QueryListProps {\n  addDangerToast: (msg: string, config?: any) => any;\n  addSuccessToast: (msg: string, config?: any) => any;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\n\nfunction QueryList({ addDangerToast }: QueryListProps) {\n  const {\n    state: { loading, resourceCount: queryCount, resourceCollection: queries },\n    fetchData,\n  } = useListViewResource<QueryObject>(\n    'query',\n    t('Query history'),\n    addDangerToast,\n    false,\n  );\n\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] =\n    useState<QueryObject>();\n\n  const theme = useTheme();\n  const history = useHistory();\n\n  const handleQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query. %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Query history',\n    ...commonMenuData,\n  };\n\n  const initialSort = [{ id: QueryObjectColumns.start_time, desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { status },\n          },\n        }: {\n          row: {\n            original: {\n              status: QueryState;\n            };\n          };\n        }) => {\n          const statusConfig: {\n            name: ReactElement | null;\n            label: string;\n          } = {\n            name: null,\n            label: '',\n          };\n          if (status === QueryState.SUCCESS) {\n            statusConfig.name = (\n              <Icons.Check iconColor={theme.colors.success.base} />\n            );\n            statusConfig.label = t('Success');\n          } else if (\n            status === QueryState.FAILED ||\n            status === QueryState.STOPPED\n          ) {\n            statusConfig.name = (\n              <Icons.XSmall\n                iconColor={\n                  status === QueryState.FAILED\n                    ? theme.colors.error.base\n                    : theme.colors.grayscale.base\n                }\n              />\n            );\n            statusConfig.label = t('Failed');\n          } else if (status === QueryState.RUNNING) {\n            statusConfig.name = (\n              <Icons.Running iconColor={theme.colors.primary.base} />\n            );\n            statusConfig.label = t('Running');\n          } else if (status === QueryState.TIMED_OUT) {\n            statusConfig.name = (\n              <Icons.Offline iconColor={theme.colors.grayscale.light1} />\n            );\n            statusConfig.label = t('Offline');\n          } else if (\n            status === QueryState.SCHEDULED ||\n            status === QueryState.PENDING\n          ) {\n            statusConfig.name = (\n              <Icons.Queued iconColor={theme.colors.grayscale.base} />\n            );\n            statusConfig.label = t('Scheduled');\n          }\n          return (\n            <Tooltip title={statusConfig.label} placement=\"bottom\">\n              <span>{statusConfig.name}</span>\n            </Tooltip>\n          );\n        },\n        accessor: QueryObjectColumns.status,\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.start_time,\n        Header: t('Time'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { start_time },\n          },\n        }: any) => {\n          const startMoment = moment.utc(start_time).local();\n          const formattedStartTimeData = startMoment\n            .format(DATETIME_WITH_TIME_ZONE)\n            .split(' ');\n\n          const formattedStartTime = (\n            <>\n              {formattedStartTimeData[0]} <br />\n              {formattedStartTimeData[1]}\n            </>\n          );\n          return formattedStartTime;\n        },\n      },\n      {\n        Header: t('Duration'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { status, start_time, end_time },\n          },\n        }: any) => {\n          const timerType = status === QueryState.FAILED ? 'danger' : status;\n          const timerTime = end_time\n            ? moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS)\n            : '00:00:00.000';\n          return (\n            <TimerLabel type={timerType} role=\"timer\">\n              {timerTime}\n            </TimerLabel>\n          );\n        },\n      },\n      {\n        accessor: QueryObjectColumns.tab_name,\n        Header: t('Tab name'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database_name,\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.schema,\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names.length > 0 ? names.shift() : '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: QueryObjectColumns.sql_tables,\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.user_first_name,\n        Header: t('User'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { user },\n          },\n        }: any) => getOwnerName(user),\n      },\n      {\n        accessor: QueryObjectColumns.user,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.rows,\n        Header: t('Rows'),\n        size: 'md',\n      },\n      {\n        accessor: QueryObjectColumns.sql,\n        Header: t('SQL'),\n        Cell: ({ row: { original, id } }: any) => (\n          <div\n            tabIndex={0}\n            role=\"button\"\n            data-test={`open-sql-preview-${id}`}\n            onClick={() => setQueryCurrentlyPreviewing(original)}\n          >\n            <StyledSyntaxHighlighter language=\"sql\" style={github}>\n              {shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)}\n            </StyledSyntaxHighlighter>\n          </div>\n        ),\n      },\n      {\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) => (\n          <Tooltip title={t('Open query in SQL Lab')} placement=\"bottom\">\n            <Link to={`/sqllab?queryId=${id}`}>\n              <Icons.Full iconColor={theme.colors.grayscale.base} />\n            </Link>\n          </Tooltip>\n        ),\n      },\n    ],\n    [],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching database values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('State'),\n        key: 'state',\n        id: 'status',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'query',\n          'status',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('User'),\n        key: 'user',\n        id: 'user',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'user',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching user values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Time range'),\n        key: 'start_time',\n        id: 'start_time',\n        input: 'datetime_range',\n        operator: FilterOperator.between,\n      },\n      {\n        Header: t('Search by query text'),\n        key: 'sql',\n        id: 'sql',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyPreviewing && (\n        <QueryPreviewModal\n          onHide={() => setQueryCurrentlyPreviewing(undefined)}\n          query={queryCurrentlyPreviewing}\n          queries={queries}\n          fetchData={handleQueryPreview}\n          openInSqlLab={(id: number) => history.push(`/sqllab?queryId=${id}`)}\n          show\n        />\n      )}\n      <TopAlignedListView\n        className=\"query-history-list-view\"\n        columns={columns}\n        count={queryCount}\n        data={queries}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n        highlightRowId={queryCurrentlyPreviewing?.id}\n        refreshData={() => {}}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n      />\n    </>\n  );\n}\n\nexport default withToasts(QueryList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["commonMenuData","name","t","tabs","label","url","usesRouter","SyntaxHighlighter","registerLanguage","sqlSyntax","markdownSyntax","htmlSyntax","jsonSyntax","SyntaxHighlighterWrapper","styled","div","_ref","theme","colors","grayscale","base","SyntaxHighlighterCopy","_ref2","addDangerToast","addSuccessToast","children","syntaxHighlighterProps","___EmotionJSX","Icons","Copy","tabIndex","role","onClick","e","textToCopy","preventDefault","currentTarget","blur","copyTextToClipboard","Promise","resolve","then","catch","_extends","style","github","useQueryPreviewState","queries","fetchData","currentQueryId","index","findIndex","query","id","currentIndex","setCurrentIndex","useState","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","length","handleDataChange","previous","useEffect","handleKeyPress","ev","key","QueryTitle","secondary","light2","typography","sizes","s","QueryLabel","_ref3","dark2","_ref4","m","QueryViewToggle","_ref5","gridUnit","TabButton","_ref6","_ref7","_ref8","_ref9","_ref10","dark1","_ref11","light4","_ref12","borderRadius","_ref13","_ref14","light5","StyledModal","Modal","_ref15","_ref16","xs","_ref17","weights","normal","_ref18","l","withToasts","_ref19","onHide","openInSqlLab","show","currentTab","setCurrentTab","sql","executed_sql","onKeyUp","title","footer","React","Button","disabled","buttonStyle","tab_name","className","cx","active","language","TopAlignedListView","ListView","StyledSyntaxHighlighter","StyledTableLabel","primary","StyledPopoverItem","TimerLabel","Label","families","monospace","state","loading","resourceCount","queryCount","resourceCollection","useListViewResource","queryCurrentlyPreviewing","setQueryCurrentlyPreviewing","useTheme","history","useHistory","handleQueryPreview","useCallback","SupersetClient","get","endpoint","json","result","createErrorHandler","errMsg","menuData","activeChild","initialSort","QueryObjectColumns","start_time","desc","columns","useMemo","Cell","row","original","status","statusConfig","QueryState","SUCCESS","Check","iconColor","success","FAILED","STOPPED","XSmall","error","RUNNING","Running","TIMED_OUT","Offline","light1","SCHEDULED","PENDING","Queued","Tooltip","placement","accessor","size","disableSortBy","Header","formattedStartTimeData","moment","local","format","DATETIME_WITH_TIME_ZONE","split","end_time","timerType","timerTime","TIME_WITH_MS","type","database_name","database","hidden","schema","sql_tables","tables","names","map","table","main","shift","Popover","trigger","content","user_first_name","user","getOwnerName","rows","shortenSQL","Link","to","Full","filters","input","operator","FilterOperator","relationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","paginate","equals","createFetchDistinct","between","contains","SubMenu","QueryPreviewModal","undefined","push","count","data","pageSize","highlightRowId","refreshData","owner","first_name","last_name"],"sourceRoot":""}