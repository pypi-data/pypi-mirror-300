{"version":3,"file":"4325eeef76037925117c.chunk.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-core/src/chart/components/SuperChartCore.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/NoResultsComponent.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/SuperChart.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/FallbackComponent.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/createLoadableRenderer.ts","webpack://superset/./packages/superset-ui-core/src/chart/models/ChartProps.ts","webpack://superset/./packages/superset-ui-core/src/dimension/parseLength.ts","webpack://superset/./packages/superset-ui-core/src/hooks/useChangeEffect/useChangeEffect.ts","webpack://superset/./packages/superset-ui-core/src/utils/convertKeysToCamelCase.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable react/jsx-sort-default-props */\nimport * as React from 'react';\nimport { t } from '@superset-ui/core';\nimport { createSelector } from 'reselect';\nimport getChartComponentRegistry from '../registries/ChartComponentRegistrySingleton';\nimport getChartTransformPropsRegistry from '../registries/ChartTransformPropsRegistrySingleton';\nimport ChartProps from '../models/ChartProps';\nimport createLoadableRenderer from './createLoadableRenderer';\nimport { ChartType } from '../models/ChartPlugin';\nimport {\n  PreTransformProps,\n  TransformProps,\n  PostTransformProps,\n} from '../types/TransformFunction';\nimport { HandlerFunction } from '../types/Base';\n\nfunction IDENTITY<T>(x: T) {\n  return x;\n}\n\nconst EMPTY = () => null;\n\nconst defaultProps = {\n  id: '',\n  className: '',\n  preTransformProps: IDENTITY,\n  overrideTransformProps: undefined,\n  postTransformProps: IDENTITY,\n  onRenderSuccess() {},\n  onRenderFailure() {},\n};\n\ninterface LoadingProps {\n  error: { toString(): string };\n}\n\ninterface LoadedModules {\n  Chart: ChartType;\n  transformProps: TransformProps;\n}\n\ninterface RenderProps {\n  chartProps: ChartProps;\n  preTransformProps?: PreTransformProps;\n  postTransformProps?: PostTransformProps;\n}\n\nconst BLANK_CHART_PROPS = new ChartProps();\n\nexport type Props = {\n  id?: string;\n  className?: string;\n  chartProps?: ChartProps | null;\n  chartType: string;\n  preTransformProps?: PreTransformProps;\n  overrideTransformProps?: TransformProps;\n  postTransformProps?: PostTransformProps;\n  onRenderSuccess?: HandlerFunction;\n  onRenderFailure?: HandlerFunction;\n};\n\nexport default class SuperChartCore extends React.PureComponent<Props, {}> {\n  /**\n   * The HTML element that wraps all chart content\n   */\n  container?: HTMLElement | null;\n\n  /**\n   * memoized function so it will not recompute\n   * and return previous value\n   * unless one of\n   * - preTransformProps\n   * - transformProps\n   * - postTransformProps\n   * - chartProps\n   * is changed.\n   */\n  processChartProps = createSelector(\n    [\n      (input: {\n        chartProps: ChartProps;\n        preTransformProps?: PreTransformProps;\n        transformProps?: TransformProps;\n        postTransformProps?: PostTransformProps;\n      }) => input.chartProps,\n      input => input.preTransformProps,\n      input => input.transformProps,\n      input => input.postTransformProps,\n    ],\n    (chartProps, pre = IDENTITY, transform = IDENTITY, post = IDENTITY) =>\n      post(transform(pre(chartProps))),\n  );\n\n  /**\n   * memoized function so it will not recompute\n   * and return previous value\n   * unless one of\n   * - chartType\n   * - overrideTransformProps\n   * is changed.\n   */\n  private createLoadableRenderer = createSelector(\n    [\n      (input: { chartType: string; overrideTransformProps?: TransformProps }) =>\n        input.chartType,\n      input => input.overrideTransformProps,\n    ],\n    (chartType, overrideTransformProps) => {\n      if (chartType) {\n        const Renderer = createLoadableRenderer({\n          loader: {\n            Chart: () => getChartComponentRegistry().getAsPromise(chartType),\n            transformProps: overrideTransformProps\n              ? () => Promise.resolve(overrideTransformProps)\n              : () => getChartTransformPropsRegistry().getAsPromise(chartType),\n          },\n          loading: (loadingProps: LoadingProps) =>\n            this.renderLoading(loadingProps, chartType),\n          render: this.renderChart,\n        });\n\n        // Trigger preloading.\n        Renderer.preload();\n\n        return Renderer;\n      }\n\n      return EMPTY;\n    },\n  );\n\n  static defaultProps = defaultProps;\n\n  private renderChart = (loaded: LoadedModules, props: RenderProps) => {\n    const { Chart, transformProps } = loaded;\n    const { chartProps, preTransformProps, postTransformProps } = props;\n\n    return (\n      <Chart\n        {...this.processChartProps({\n          chartProps,\n          preTransformProps,\n          transformProps,\n          postTransformProps,\n        })}\n      />\n    );\n  };\n\n  private renderLoading = (loadingProps: LoadingProps, chartType: string) => {\n    const { error } = loadingProps;\n\n    if (error) {\n      return (\n        <div className=\"alert alert-warning\" role=\"alert\">\n          <strong>{t('ERROR')}</strong>&nbsp;\n          <code>chartType=&quot;{chartType}&quot;</code> &mdash;\n          {error.toString()}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  private setRef = (container: HTMLElement | null) => {\n    this.container = container;\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      preTransformProps,\n      postTransformProps,\n      chartProps = BLANK_CHART_PROPS,\n      onRenderSuccess,\n      onRenderFailure,\n    } = this.props;\n\n    // Create LoadableRenderer and start preloading\n    // the lazy-loaded Chart components\n    const Renderer = this.createLoadableRenderer(this.props);\n\n    // Do not render if chartProps is set to null.\n    // but the pre-loading has been started in this.createLoadableRenderer\n    // to prepare for rendering once chartProps becomes available.\n    if (chartProps === null) {\n      return null;\n    }\n\n    const containerProps: {\n      id?: string;\n      className?: string;\n    } = {};\n    if (id) {\n      containerProps.id = id;\n    }\n    if (className) {\n      containerProps.className = className;\n    }\n\n    return (\n      <div {...containerProps} ref={this.setRef}>\n        <Renderer\n          preTransformProps={preTransformProps}\n          postTransformProps={postTransformProps}\n          chartProps={chartProps}\n          onRenderSuccess={onRenderSuccess}\n          onRenderFailure={onRenderFailure}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { CSSProperties } from 'react';\nimport { css, styled } from '../../style';\nimport { t } from '../../translation';\n\nconst MESSAGE_STYLES: CSSProperties = { maxWidth: 800 };\nconst MIN_WIDTH_FOR_BODY = 250;\n\nconst Container = styled.div<{\n  width: number | string;\n  height: number | string;\n}>`\n  ${({ theme, width, height }) => css`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: ${height}px;\n    width: ${width}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    & .no-results-title {\n      font-size: ${theme.typography.sizes.l}px;\n      font-weight: ${theme.typography.weights.bold};\n      padding-bottom: ${theme.gridUnit * 2};\n    }\n\n    & .no-results-body {\n      font-size: ${theme.typography.sizes.m}px;\n    }\n  `}\n`;\n\ntype Props = {\n  className?: string;\n  height: number | string;\n  id?: string;\n  width: number | string;\n};\n\nconst NoResultsComponent = ({ className, height, id, width }: Props) => {\n  // render the body if the width is auto/100% or greater than 250 pixels\n  const shouldRenderBody =\n    typeof width === 'string' || width > MIN_WIDTH_FOR_BODY;\n\n  const BODY_STRING = t(\n    'No results were returned for this query. If you expected results to be returned, ensure any filters are configured properly and the datasource contains data for the selected time range.',\n  );\n\n  return (\n    <Container\n      height={height}\n      width={width}\n      className={className}\n      id={id}\n      title={shouldRenderBody ? undefined : BODY_STRING}\n    >\n      <div style={MESSAGE_STYLES}>\n        <div className=\"no-results-title\">{t('No Results')}</div>\n        {shouldRenderBody && (\n          <div className=\"no-results-body\">{BODY_STRING}</div>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default NoResultsComponent;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode, RefObject } from 'react';\nimport ErrorBoundary, {\n  ErrorBoundaryProps,\n  FallbackProps,\n} from 'react-error-boundary';\nimport { ParentSize } from '@vx/responsive';\nimport { createSelector } from 'reselect';\nimport { withTheme } from '@emotion/react';\nimport { parseLength, Dimension } from '../../dimension';\nimport getChartMetadataRegistry from '../registries/ChartMetadataRegistrySingleton';\nimport SuperChartCore, { Props as SuperChartCoreProps } from './SuperChartCore';\nimport DefaultFallbackComponent from './FallbackComponent';\nimport ChartProps, { ChartPropsConfig } from '../models/ChartProps';\nimport NoResultsComponent from './NoResultsComponent';\n\nconst defaultProps = {\n  FallbackComponent: DefaultFallbackComponent,\n  height: 400 as string | number,\n  width: '100%' as string | number,\n  enableNoResults: true,\n};\n\nexport type FallbackPropsWithDimension = FallbackProps & Partial<Dimension>;\n\nexport type WrapperProps = Dimension & {\n  children: ReactNode;\n};\n\nexport type Props = Omit<SuperChartCoreProps, 'chartProps'> &\n  Omit<ChartPropsConfig, 'width' | 'height'> & {\n    /**\n     * Set this to true to disable error boundary built-in in SuperChart\n     * and let the error propagate to upper level\n     * and handle by yourself\n     */\n    disableErrorBoundary?: boolean;\n    /** debounceTime to check for container resize */\n    debounceTime?: number;\n    /** enable \"No Results\" message if empty result set */\n    enableNoResults?: boolean;\n    /** Component to render when there are unexpected errors */\n    FallbackComponent?: React.ComponentType<FallbackPropsWithDimension>;\n    /** Event listener for unexpected errors from chart */\n    onErrorBoundary?: ErrorBoundaryProps['onError'];\n    /** Prop for form plugins using superchart */\n    showOverflow?: boolean;\n    /** Prop for popovercontainer ref */\n    parentRef?: RefObject<any>;\n    /** Prop for chart ref */\n    inputRef?: RefObject<any>;\n    /** Chart width */\n    height?: number | string;\n    /** Chart height */\n    width?: number | string;\n    /**\n     * Component to wrap the actual chart\n     * after the dynamic width and height are determined.\n     * This can be useful for handling tooltip z-index, etc.\n     * e.g. <div style={{ position: 'fixed' }} />\n     * You cannot just wrap this same component outside of SuperChart\n     * when using dynamic width or height\n     * because it will clash with auto-sizing.\n     */\n    Wrapper?: React.ComponentType<WrapperProps>;\n    /**\n     * Component to display when query returns no results.\n     * If not defined, NoResultsComponent is used\n     */\n    noResults?: ReactNode;\n    /**\n     * Determines is the context menu related to the chart is open\n     */\n    inContextMenu?: boolean;\n  };\n\ntype PropsWithDefault = Props & Readonly<typeof defaultProps>;\n\nclass SuperChart extends React.PureComponent<Props, {}> {\n  /**\n   * SuperChart's core\n   */\n  core?: SuperChartCore | null;\n\n  private createChartProps = ChartProps.createSelector();\n\n  private parseDimension = createSelector(\n    [\n      ({ width }: { width: string | number; height: string | number }) => width,\n      ({ height }) => height,\n    ],\n    (width, height) => {\n      // Parse them in case they are % or 'auto'\n      const widthInfo = parseLength(width);\n      const heightInfo = parseLength(height);\n\n      const boxHeight = heightInfo.isDynamic\n        ? `${heightInfo.multiplier * 100}%`\n        : heightInfo.value;\n      const boxWidth = widthInfo.isDynamic\n        ? `${widthInfo.multiplier * 100}%`\n        : widthInfo.value;\n      const style = {\n        height: boxHeight,\n        width: boxWidth,\n      };\n\n      // bounding box will ensure that when one dimension is not dynamic\n      // e.g. height = 300\n      // the auto size will be bound to that value instead of being 100% by default\n      // e.g. height: 300 instead of height: '100%'\n      const BoundingBox =\n        widthInfo.isDynamic &&\n        heightInfo.isDynamic &&\n        widthInfo.multiplier === 1 &&\n        heightInfo.multiplier === 1\n          ? React.Fragment\n          : ({ children }: { children: ReactNode }) => (\n              <div style={style}>{children}</div>\n            );\n\n      return { BoundingBox, heightInfo, widthInfo };\n    },\n  );\n\n  static defaultProps = defaultProps;\n\n  private setRef = (core: SuperChartCore | null) => {\n    this.core = core;\n  };\n\n  private getQueryCount = () =>\n    getChartMetadataRegistry().get(this.props.chartType)?.queryObjectCount ?? 1;\n\n  renderChart(width: number, height: number) {\n    const {\n      id,\n      className,\n      chartType,\n      preTransformProps,\n      overrideTransformProps,\n      postTransformProps,\n      onRenderSuccess,\n      onRenderFailure,\n      disableErrorBoundary,\n      FallbackComponent,\n      onErrorBoundary,\n      Wrapper,\n      queriesData,\n      enableNoResults,\n      noResults,\n      theme,\n      ...rest\n    } = this.props as PropsWithDefault;\n\n    const chartProps = this.createChartProps({\n      ...rest,\n      queriesData,\n      height,\n      width,\n      theme,\n    });\n\n    let chart;\n    // Render the no results component if the query data is null or empty\n    const noResultQueries =\n      enableNoResults &&\n      (!queriesData ||\n        queriesData\n          .slice(0, this.getQueryCount())\n          .every(\n            ({ data }) => !data || (Array.isArray(data) && data.length === 0),\n          ));\n    if (noResultQueries) {\n      chart = noResults || (\n        <NoResultsComponent\n          id={id}\n          className={className}\n          height={height}\n          width={width}\n        />\n      );\n    } else {\n      const chartWithoutWrapper = (\n        <SuperChartCore\n          ref={this.setRef}\n          id={id}\n          className={className}\n          chartType={chartType}\n          chartProps={chartProps}\n          preTransformProps={preTransformProps}\n          overrideTransformProps={overrideTransformProps}\n          postTransformProps={postTransformProps}\n          onRenderSuccess={onRenderSuccess}\n          onRenderFailure={onRenderFailure}\n        />\n      );\n      chart = Wrapper ? (\n        <Wrapper width={width} height={height}>\n          {chartWithoutWrapper}\n        </Wrapper>\n      ) : (\n        chartWithoutWrapper\n      );\n    }\n    // Include the error boundary by default unless it is specifically disabled.\n    return disableErrorBoundary === true ? (\n      chart\n    ) : (\n      <ErrorBoundary\n        FallbackComponent={(props: FallbackProps) => (\n          <FallbackComponent width={width} height={height} {...props} />\n        )}\n        onError={onErrorBoundary}\n      >\n        {chart}\n      </ErrorBoundary>\n    );\n  }\n\n  render() {\n    const { heightInfo, widthInfo, BoundingBox } = this.parseDimension(\n      this.props as PropsWithDefault,\n    );\n\n    // If any of the dimension is dynamic, get parent's dimension\n    if (widthInfo.isDynamic || heightInfo.isDynamic) {\n      const { debounceTime } = this.props;\n\n      return (\n        <BoundingBox>\n          <ParentSize debounceTime={debounceTime}>\n            {({ width, height }) =>\n              this.renderChart(\n                widthInfo.isDynamic ? Math.floor(width) : widthInfo.value,\n                heightInfo.isDynamic ? Math.floor(height) : heightInfo.value,\n              )\n            }\n          </ParentSize>\n        </BoundingBox>\n      );\n    }\n\n    return this.renderChart(widthInfo.value, heightInfo.value);\n  }\n}\n\nexport default withTheme(SuperChart);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { SupersetTheme } from '../../style';\nimport { FallbackPropsWithDimension } from './SuperChart';\n\nexport type Props = FallbackPropsWithDimension;\n\nexport default function FallbackComponent({\n  componentStack,\n  error,\n  height,\n  width,\n}: Props) {\n  return (\n    <div\n      css={(theme: SupersetTheme) => ({\n        backgroundColor: theme.colors.grayscale.dark2,\n        color: theme.colors.grayscale.light5,\n        overflow: 'auto',\n        padding: 32,\n      })}\n      style={{ height, width }}\n    >\n      <div>\n        <div>\n          <b>{t('Oops! An error occurred!')}</b>\n        </div>\n        <code>{error ? error.toString() : 'Unknown Error'}</code>\n      </div>\n      {componentStack && (\n        <div>\n          <b>{t('Stack Trace:')}</b>\n          <code>\n            {componentStack.split('\\n').map((row: string) => (\n              <div key={row}>{row}</div>\n            ))}\n          </code>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Loadable from 'react-loadable';\n\nexport type LoadableRendererProps = {\n  onRenderFailure?: Function;\n  onRenderSuccess?: Function;\n};\n\nconst defaultProps = {\n  onRenderFailure() {},\n  onRenderSuccess() {},\n};\n\nexport interface LoadableRenderer<Props>\n  extends React.ComponentClass<Props & LoadableRendererProps>,\n    Loadable.LoadableComponent {}\n\nexport default function createLoadableRenderer<Props, Exports>(\n  options: Loadable.OptionsWithMap<Props, Exports>,\n): LoadableRenderer<Props> {\n  const LoadableRenderer = Loadable.Map(options) as LoadableRenderer<Props>;\n\n  // Extends the behavior of LoadableComponent to provide post-render listeners\n  class CustomLoadableRenderer extends LoadableRenderer {\n    static defaultProps: object;\n\n    componentDidMount() {\n      this.afterRender();\n    }\n\n    componentDidUpdate() {\n      this.afterRender();\n    }\n\n    afterRender() {\n      const { loaded, loading, error } = this.state;\n      const { onRenderFailure, onRenderSuccess } = this.props;\n      if (!loading) {\n        if (error) {\n          (onRenderFailure as Function)(error);\n        } else if (loaded && Object.keys(loaded).length > 0) {\n          (onRenderSuccess as Function)();\n        }\n      }\n    }\n  }\n\n  CustomLoadableRenderer.defaultProps = defaultProps;\n  CustomLoadableRenderer.preload = LoadableRenderer.preload;\n\n  return CustomLoadableRenderer;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** Type checking is disabled for this file due to reselect only supporting\n * TS declarations for selectors with up to 12 arguments. */\n// @ts-nocheck\nimport { RefObject } from 'react';\nimport { createSelector } from 'reselect';\nimport {\n  AppSection,\n  Behavior,\n  convertKeysToCamelCase,\n  Datasource,\n  FilterState,\n  JsonObject,\n} from '../..';\nimport {\n  HandlerFunction,\n  LegendState,\n  PlainObject,\n  SetDataMaskHook,\n} from '../types/Base';\nimport { QueryData, DataRecordFilters } from '..';\nimport { SupersetTheme } from '../../style';\n\n// TODO: more specific typing for these fields of ChartProps\ntype AnnotationData = PlainObject;\ntype SnakeCaseDatasource = PlainObject;\ntype CamelCaseFormData = PlainObject;\ntype SnakeCaseFormData = PlainObject;\ntype RawFormData = CamelCaseFormData | SnakeCaseFormData;\n\ntype ChartPropsSelector = (c: ChartPropsConfig) => ChartProps;\n\n/** Optional field for event handlers, renderers */\ntype Hooks = {\n  /**\n   * sync active filters between chart and dashboard, \"add\" actually\n   * also handles \"change\" and \"remove\".\n   */\n  onAddFilter?: (newFilters: DataRecordFilters, merge?: boolean) => void;\n  /** handle right click */\n  onContextMenu?: HandlerFunction;\n  /** handle errors */\n  onError?: HandlerFunction;\n  /** handle legend state changes */\n  onLegendStateChanged?: HandlerFunction;\n  /** use the vis as control to update state */\n  setControlValue?: HandlerFunction;\n  /** handle external filters */\n  setDataMask?: SetDataMaskHook;\n  /** handle tooltip */\n  setTooltip?: HandlerFunction;\n} & PlainObject;\n\n/**\n * Preferred format for ChartProps config\n */\nexport interface ChartPropsConfig {\n  annotationData?: AnnotationData;\n  /** Datasource metadata */\n  datasource?: SnakeCaseDatasource;\n  /**\n   * Formerly called \"filters\", which was misleading because it is actually\n   * initial values of the filter_box and table vis\n   */\n  initialValues?: DataRecordFilters;\n  /** Main configuration of the chart */\n  formData?: RawFormData;\n  /** Chart height */\n  height?: number;\n  /** Programmatic overrides such as event handlers, renderers */\n  hooks?: Hooks;\n  /** The data returned for all queries objects in the request */\n  queriesData?: QueryData[];\n  /** Chart width */\n  width?: number;\n  /** Own chart state that saved in dashboard */\n  ownState?: JsonObject;\n  /** Filter state that saved in dashboard */\n  filterState?: FilterState;\n  /** Legend state */\n  legendState?: LegendState;\n  /** Set of actual behaviors that this instance of chart should use */\n  behaviors?: Behavior[];\n  /** Chart display settings related to current view context */\n  displaySettings?: JsonObject;\n  /** Application section of the chart on the screen (in what components/screen it placed) */\n  appSection?: AppSection;\n  /** is the chart refreshing its contents */\n  isRefreshing?: boolean;\n  /** chart ref */\n  inputRef?: RefObject<any>;\n  /** Theme object */\n  theme: SupersetTheme;\n}\n\nconst DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 600;\n\nexport default class ChartProps<FormData extends RawFormData = RawFormData> {\n  static createSelector: () => ChartPropsSelector;\n\n  annotationData: AnnotationData;\n\n  datasource: Datasource;\n\n  rawDatasource: SnakeCaseDatasource;\n\n  initialValues: DataRecordFilters;\n\n  formData: CamelCaseFormData;\n\n  rawFormData: FormData;\n\n  height: number;\n\n  hooks: Hooks;\n\n  ownState: JsonObject;\n\n  filterState: FilterState;\n\n  legendState?: LegendState;\n\n  queriesData: QueryData[];\n\n  width: number;\n\n  behaviors: Behavior[];\n\n  displaySettings?: JsonObject;\n\n  appSection?: AppSection;\n\n  isRefreshing?: boolean;\n\n  inputRef?: RefObject<any>;\n\n  inContextMenu?: boolean;\n\n  emitCrossFilters?: boolean;\n\n  theme: SupersetTheme;\n\n  constructor(config: ChartPropsConfig & { formData?: FormData } = {}) {\n    const {\n      annotationData = {},\n      datasource = {},\n      formData = {} as FormData,\n      hooks = {},\n      ownState = {},\n      filterState = {},\n      legendState,\n      initialValues = {},\n      queriesData = [],\n      behaviors = [],\n      displaySettings = {},\n      width = DEFAULT_WIDTH,\n      height = DEFAULT_HEIGHT,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu = false,\n      emitCrossFilters = false,\n      theme,\n    } = config;\n    this.width = width;\n    this.height = height;\n    this.annotationData = annotationData;\n    this.datasource = convertKeysToCamelCase(datasource) as Datasource;\n    this.rawDatasource = datasource;\n    this.formData = convertKeysToCamelCase(formData);\n    this.rawFormData = formData;\n    this.hooks = hooks;\n    this.initialValues = initialValues;\n    this.queriesData = queriesData;\n    this.ownState = ownState;\n    this.filterState = filterState;\n    this.legendState = legendState;\n    this.behaviors = behaviors;\n    this.displaySettings = displaySettings;\n    this.appSection = appSection;\n    this.isRefreshing = isRefreshing;\n    this.inputRef = inputRef;\n    this.inContextMenu = inContextMenu;\n    this.emitCrossFilters = emitCrossFilters;\n    this.theme = theme;\n  }\n}\n\n// eslint-disable-next-line func-name-matching\nChartProps.createSelector = function create(): ChartPropsSelector {\n  return createSelector(\n    (input: ChartPropsConfig) => input.annotationData,\n    input => input.datasource,\n    input => input.formData,\n    input => input.height,\n    input => input.hooks,\n    input => input.initialValues,\n    input => input.queriesData,\n    input => input.width,\n    input => input.ownState,\n    input => input.filterState,\n    input => input.legendState,\n    input => input.behaviors,\n    input => input.displaySettings,\n    input => input.appSection,\n    input => input.isRefreshing,\n    input => input.inputRef,\n    input => input.inContextMenu,\n    input => input.emitCrossFilters,\n    input => input.theme,\n    (\n      annotationData,\n      datasource,\n      formData,\n      height,\n      hooks,\n      initialValues,\n      queriesData,\n      width,\n      ownState,\n      filterState,\n      legendState,\n      behaviors,\n      displaySettings,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu,\n      emitCrossFilters,\n      theme,\n    ) =>\n      new ChartProps({\n        annotationData,\n        datasource,\n        formData,\n        height,\n        hooks,\n        initialValues,\n        queriesData,\n        ownState,\n        filterState,\n        legendState,\n        width,\n        behaviors,\n        displaySettings,\n        appSection,\n        isRefreshing,\n        inputRef,\n        inContextMenu,\n        emitCrossFilters,\n        theme,\n      }),\n  );\n};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst HUNDRED_PERCENT = { isDynamic: true, multiplier: 1 } as const;\n\nexport default function parseLength(\n  input: string | number,\n):\n  | { isDynamic: true; multiplier: number }\n  | { isDynamic: false; value: number } {\n  if (input === 'auto' || input === '100%') {\n    return HUNDRED_PERCENT;\n  }\n\n  if (\n    typeof input === 'string' &&\n    input.length > 0 &&\n    input[input.length - 1] === '%'\n  ) {\n    return { isDynamic: true, multiplier: parseFloat(input) / 100 };\n  }\n  const value = typeof input === 'number' ? input : parseFloat(input);\n\n  return { isDynamic: false, value };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useEffect } from 'react';\nimport { usePrevious } from '../usePrevious';\n\n/**\n * Calls the callback when the value changes.\n *\n * Passes the previous and current values to the callback\n */\nexport function useChangeEffect<T>(\n  value: T,\n  callback: (previous: T | undefined, current: T) => void,\n) {\n  const previous = usePrevious(value);\n  useEffect(() => {\n    if (value !== previous) {\n      callback(previous, value);\n    }\n  }, [value, previous, callback]);\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport camelCase from 'lodash/camelCase';\nimport isPlainObject from 'lodash/isPlainObject';\nimport mapKeys from 'lodash/mapKeys';\n\nexport default function convertKeysToCamelCase<T>(object: T) {\n  if (object === null || object === undefined) {\n    return object;\n  }\n  if (isPlainObject(object)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return mapKeys(object as { [key: string]: any }, (_, k) =>\n      camelCase(k),\n    ) as T;\n  }\n  throw new Error(`Cannot convert input that is not a plain object: ${object}`);\n}\n"],"names":["IDENTITY","x","EMPTY","defaultProps","id","className","preTransformProps","overrideTransformProps","undefined","postTransformProps","onRenderSuccess","onRenderFailure","BLANK_CHART_PROPS","ChartProps","SuperChartCore","React","constructor","arguments","container","processChartProps","createSelector","input","chartProps","transformProps","pre","transform","post","createLoadableRenderer","chartType","Renderer","loader","Chart","getChartComponentRegistry","getAsPromise","Promise","resolve","getChartTransformPropsRegistry","loading","loadingProps","this","renderLoading","render","renderChart","preload","loaded","props","___EmotionJSX","error","role","t","toString","setRef","containerProps","_extends","ref","MESSAGE_STYLES","maxWidth","Container","styled","div","_ref","theme","width","height","css","gridUnit","typography","sizes","l","weights","bold","m","_ref2","shouldRenderBody","BODY_STRING","title","style","FallbackComponent","componentStack","backgroundColor","colors","grayscale","dark2","color","light5","overflow","padding","split","map","row","key","enableNoResults","SuperChart","core","createChartProps","parseDimension","widthInfo","parseLength","heightInfo","isDynamic","multiplier","value","BoundingBox","_ref3","children","getQueryCount","_getChartMetadataRegi","_getChartMetadataRegi2","getChartMetadataRegistry","get","queryObjectCount","disableErrorBoundary","onErrorBoundary","Wrapper","queriesData","noResults","rest","chart","slice","every","_ref4","data","Array","isArray","length","chartWithoutWrapper","NoResultsComponent","ErrorBoundary","onError","debounceTime","ParentSize","_ref5","Math","floor","withTheme","options","LoadableRenderer","Loadable","CustomLoadableRenderer","componentDidMount","afterRender","componentDidUpdate","state","Object","keys","DEFAULT_WIDTH","DEFAULT_HEIGHT","config","annotationData","datasource","rawDatasource","initialValues","formData","rawFormData","hooks","ownState","filterState","legendState","behaviors","displaySettings","appSection","isRefreshing","inputRef","inContextMenu","emitCrossFilters","convertKeysToCamelCase","HUNDRED_PERCENT","parseFloat","useChangeEffect","callback","previous","usePrevious","useEffect","object","isPlainObject","mapKeys","_","k","camelCase","Error"],"sourceRoot":""}