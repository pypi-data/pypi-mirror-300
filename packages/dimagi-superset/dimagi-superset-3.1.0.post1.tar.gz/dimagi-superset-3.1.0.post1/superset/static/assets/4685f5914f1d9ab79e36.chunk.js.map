{"version":3,"file":"4685f5914f1d9ab79e36.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/features/annotations/AnnotationModal.tsx","webpack://superset/./src/pages/AnnotationList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { RangePicker } from 'src/components/DatePicker';\nimport moment from 'moment';\nimport Icons from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { JsonEditor } from 'src/components/AsyncAceEditor';\n\nimport { AnnotationObject } from './types';\n\ninterface AnnotationModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  annotationLayerId: number;\n  annotation?: AnnotationObject | null;\n  onAnnotationAdd?: (annotation?: AnnotationObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledJsonEditor = styled(JsonEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst AnnotationContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 5}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea {\n    flex: 1 1 auto;\n    height: ${({ theme }) => theme.gridUnit * 17}px;\n    resize: none;\n    width: 100%;\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  input[type='text'] {\n    width: 65%;\n  }\n`;\n\nconst AnnotationModal: FunctionComponent<AnnotationModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  annotationLayerId,\n  annotation = null,\n  onAnnotationAdd,\n  onHide,\n  show,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const isEditMode = annotation !== null;\n\n  // annotation fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n  );\n\n  const resetAnnotation = () => {\n    // Reset annotation\n    setCurrentAnnotation({\n      short_descr: '',\n      start_dttm: '',\n      end_dttm: '',\n      json_metadata: '',\n      long_descr: '',\n    });\n  };\n\n  const hide = () => {\n    if (isEditMode) {\n      setCurrentAnnotation(resource);\n    } else {\n      resetAnnotation();\n    }\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentAnnotation?.id) {\n        const update_id = currentAnnotation.id;\n        delete currentAnnotation.id;\n        delete currentAnnotation.created_by;\n        delete currentAnnotation.changed_by;\n        delete currentAnnotation.changed_on_delta_humanized;\n        delete currentAnnotation.layer;\n        updateResource(update_id, currentAnnotation).then(response => {\n          // No response on error\n          if (!response) {\n            return;\n          }\n\n          if (onAnnotationAdd) {\n            onAnnotationAdd();\n          }\n\n          hide();\n\n          addSuccessToast(t('The annotation has been updated'));\n        });\n      }\n    } else if (currentAnnotation) {\n      // Create\n      createResource(currentAnnotation).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onAnnotationAdd) {\n          onAnnotationAdd();\n        }\n\n        hide();\n\n        addSuccessToast(t('The annotation has been saved'));\n      });\n    }\n  };\n\n  const onAnnotationTextChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentAnnotation(data);\n  };\n\n  const onJsonChange = (json: string) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm: currentAnnotation ? currentAnnotation.end_dttm : '',\n      json_metadata: json,\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm: currentAnnotation ? currentAnnotation.start_dttm : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const onDateChange = (value: any, dateString: Array<string>) => {\n    const data = {\n      ...currentAnnotation,\n      end_dttm:\n        currentAnnotation && dateString[1].length\n          ? moment(dateString[1]).format('YYYY-MM-DD HH:mm')\n          : '',\n      short_descr: currentAnnotation ? currentAnnotation.short_descr : '',\n      start_dttm:\n        currentAnnotation && dateString[0].length\n          ? moment(dateString[0]).format('YYYY-MM-DD HH:mm')\n          : '',\n    };\n    setCurrentAnnotation(data);\n  };\n\n  const validate = () => {\n    if (\n      currentAnnotation?.short_descr?.length &&\n      currentAnnotation?.start_dttm?.length &&\n      currentAnnotation?.end_dttm?.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentAnnotation?.id ||\n        (annotation && annotation.id !== currentAnnotation.id) ||\n        show)\n    ) {\n      if (annotation?.id !== null && !loading) {\n        const id = annotation.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentAnnotation || currentAnnotation.id || show)\n    ) {\n      resetAnnotation();\n    }\n  }, [annotation]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentAnnotation(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentAnnotation ? currentAnnotation.short_descr : '',\n    currentAnnotation ? currentAnnotation.start_dttm : '',\n    currentAnnotation ? currentAnnotation.end_dttm : '',\n  ]);\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode ? t('Edit annotation') : t('Add annotation')}\n        </h4>\n      }\n    >\n      <StyledAnnotationTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('Name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"short_descr\"\n          onChange={onAnnotationTextChange}\n          type=\"text\"\n          value={currentAnnotation?.short_descr}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">\n          {t('date')}\n          <span className=\"required\">*</span>\n        </div>\n        <RangePicker\n          placeholder={[t('Start date'), t('End date')]}\n          format=\"YYYY-MM-DD HH:mm\"\n          onChange={onDateChange}\n          showTime={{ format: 'hh:mm a' }}\n          use12Hours\n          value={\n            currentAnnotation?.start_dttm?.length ||\n            currentAnnotation?.end_dttm?.length\n              ? [\n                  moment(currentAnnotation.start_dttm),\n                  moment(currentAnnotation.end_dttm),\n                ]\n              : null\n          }\n        />\n      </AnnotationContainer>\n      <StyledAnnotationTitle>\n        <h4>{t('Additional information')}</h4>\n      </StyledAnnotationTitle>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"long_descr\"\n          value={currentAnnotation ? currentAnnotation.long_descr : ''}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onAnnotationTextChange}\n        />\n      </AnnotationContainer>\n      <AnnotationContainer>\n        <div className=\"control-label\">{t('JSON metadata')}</div>\n        <StyledJsonEditor\n          onChange={onJsonChange}\n          value={\n            currentAnnotation?.json_metadata\n              ? currentAnnotation.json_metadata\n              : ''\n          }\n          width=\"100%\"\n          height=\"120px\"\n        />\n      </AnnotationContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { css, t, styled, SupersetClient } from '@superset-ui/core';\nimport moment from 'moment';\nimport rison from 'rison';\n\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ListView, { ListViewProps } from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\n\nimport { AnnotationObject } from 'src/features/annotations/types';\nimport AnnotationModal from 'src/features/annotations/AnnotationModal';\n\nconst PAGE_SIZE = 25;\n\ninterface AnnotationListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s}px;\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\nfunction AnnotationList({\n  addDangerToast,\n  addSuccessToast,\n}: AnnotationListProps) {\n  const { annotationLayerId }: any = useParams();\n  const {\n    state: {\n      loading,\n      resourceCount: annotationsCount,\n      resourceCollection: annotations,\n      bulkSelectEnabled,\n    },\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n    false,\n  );\n  const [annotationModalOpen, setAnnotationModalOpen] =\n    useState<boolean>(false);\n  const [annotationLayerName, setAnnotationLayerName] = useState<string>('');\n  const [currentAnnotation, setCurrentAnnotation] =\n    useState<AnnotationObject | null>(null);\n  const [annotationCurrentlyDeleting, setAnnotationCurrentlyDeleting] =\n    useState<AnnotationObject | null>(null);\n  const handleAnnotationEdit = (annotation: AnnotationObject | null) => {\n    setCurrentAnnotation(annotation);\n    setAnnotationModalOpen(true);\n  };\n\n  const fetchAnnotationLayer = useCallback(\n    async function fetchAnnotationLayer() {\n      try {\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/annotation_layer/${annotationLayerId}`,\n        });\n        setAnnotationLayerName(response.json.result.name);\n      } catch (response) {\n        await getClientErrorObject(response).then(({ error }: any) => {\n          addDangerToast(error.error || error.statusText || error);\n        });\n      }\n    },\n    [annotationLayerId],\n  );\n\n  const handleAnnotationDelete = ({ id, short_descr }: AnnotationObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setAnnotationCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', short_descr));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', short_descr, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkAnnotationsDelete = (\n    annotationsToDelete: AnnotationObject[],\n  ) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/?q=${rison.encode(\n        annotationsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected annotations: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  // get the Annotation Layer\n  useEffect(() => {\n    fetchAnnotationLayer();\n  }, [fetchAnnotationLayer]);\n\n  const initialSort = [{ id: 'short_descr', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'short_descr',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'long_descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('ll'),\n        Header: t('Start'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { end_dttm: endDttm },\n          },\n        }: any) => moment(new Date(endDttm)).format('ll'),\n        Header: t('End'),\n        accessor: 'end_dttm',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationEdit(original);\n          const handleDelete = () => setAnnotationCurrentlyDeleting(original);\n          const actions = [\n            {\n              label: 'edit-action',\n              tooltip: t('Edit annotation'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'delete-action',\n              tooltip: t('Delete annotation'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ];\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [true, true],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n    buttonStyle: 'primary',\n    onClick: () => {\n      handleAnnotationEdit(null);\n    },\n  });\n\n  subMenuButtons.push({\n    name: t('Bulk select'),\n    onClick: toggleBulkSelect,\n    buttonStyle: 'secondary',\n    'data-test': 'annotation-bulk-select',\n  });\n\n  let hasHistory = true;\n\n  try {\n    useHistory();\n  } catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n\n  const emptyState = {\n    title: t('No annotation yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => {\n      handleAnnotationEdit(null);\n    },\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n  };\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>{t('Annotation Layer %s', annotationLayerName)}</span>\n            <span>\n              {hasHistory ? (\n                <Link to=\"/annotationlayer/list/\">{t('Back to all')}</Link>\n              ) : (\n                <a href=\"/annotationlayer/list/\">{t('Back to all')}</a>\n              )}\n            </span>\n          </StyledHeader>\n        }\n        buttons={subMenuButtons}\n      />\n      <AnnotationModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        annotation={currentAnnotation}\n        show={annotationModalOpen}\n        onAnnotationAdd={() => refreshData()}\n        annotationLayerId={annotationLayerId}\n        onHide={() => setAnnotationModalOpen(false)}\n      />\n      {annotationCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'Are you sure you want to delete %s?',\n            annotationCurrentlyDeleting?.short_descr,\n          )}\n          onConfirm={() => {\n            if (annotationCurrentlyDeleting) {\n              handleAnnotationDelete(annotationCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setAnnotationCurrentlyDeleting(null)}\n          open\n          title={t('Delete Annotation?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected annotations?',\n        )}\n        onConfirm={handleBulkAnnotationsDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [\n            {\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            },\n          ];\n\n          return (\n            <ListView<AnnotationObject>\n              className=\"annotations-list-view\"\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              columns={columns}\n              count={annotationsCount}\n              data={annotations}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              refreshData={refreshData}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationList);\n"],"names":["StyledActions","styled","span","_ref","theme","colors","primary","base","ActionWrapper","_ref2","grayscale","ActionsBar","_ref3","actions","___EmotionJSX","className","map","action","index","ActionIcon","Icons","icon","tooltip","Tooltip","id","label","title","placement","key","role","tabIndex","onClick","StyledAnnotationTitle","div","gridUnit","StyledJsonEditor","JsonEditor","borderRadius","_ref4","secondary","light2","AnnotationContainer","_ref5","_ref6","_ref7","_ref8","error","_ref9","_ref10","_ref11","_ref12","_ref13","withToasts","_ref14","_currentAnnotation$st2","_currentAnnotation$en2","addDangerToast","addSuccessToast","annotationLayerId","annotation","onAnnotationAdd","onHide","show","disableSave","setDisableSave","useState","currentAnnotation","setCurrentAnnotation","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","useSingleViewResource","t","resetAnnotation","short_descr","start_dttm","end_dttm","json_metadata","long_descr","hide","onAnnotationTextChange","event","target","data","name","value","useEffect","validate","_currentAnnotation$sh","_currentAnnotation$st","_currentAnnotation$en","length","Modal","disablePrimaryButton","onHandledPrimaryAction","onSave","update_id","created_by","changed_by","changed_on_delta_humanized","layer","then","response","primaryButtonName","width","EditAlt","css","StyledIcon","PlusLarge","onChange","type","RangePicker","placeholder","format","onDateChange","dateString","moment","showTime","use12Hours","json","height","StyledHeader","typography","sizes","s","weights","normal","useParams","resourceCount","annotationsCount","resourceCollection","annotations","bulkSelectEnabled","fetchData","refreshData","toggleBulkSelect","useListViewResource","annotationModalOpen","setAnnotationModalOpen","annotationLayerName","setAnnotationLayerName","annotationCurrentlyDeleting","setAnnotationCurrentlyDeleting","handleAnnotationEdit","fetchAnnotationLayer","useCallback","async","SupersetClient","get","endpoint","result","getClientErrorObject","statusText","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","startDttm","Date","endDttm","handleEdit","handleDelete","disableSortBy","subMenuButtons","push","React","buttonStyle","hasHistory","useHistory","err","emptyState","image","buttonAction","buttonText","SubMenu","Link","to","href","buttons","AnnotationModal","DeleteModal","description","onConfirm","handleAnnotationDelete","delete","createErrorHandler","errMsg","open","ConfirmStatusChange","annotationsToDelete","rison","message","confirmDelete","bulkActions","onSelect","ListView","count","disableBulkSelect","pageSize"],"sourceRoot":""}