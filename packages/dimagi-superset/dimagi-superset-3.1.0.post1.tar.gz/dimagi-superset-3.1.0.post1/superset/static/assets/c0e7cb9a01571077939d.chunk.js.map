{"version":3,"file":"c0e7cb9a01571077939d.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/features/annotationLayers/AnnotationLayerModal.tsx","webpack://superset/./src/pages/AnnotationLayerList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["import React from 'react';\n\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\n\nimport { AnnotationLayerObject } from './types';\n\ninterface AnnotationLayerModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  layer?: AnnotationLayerObject | null;\n  onLayerAdd?: (layer?: AnnotationLayerObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledAnnotationLayerTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst LayerContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  textarea,\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    width: 100%;\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nconst AnnotationLayerModal: FunctionComponent<AnnotationLayerModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onLayerAdd,\n  onHide,\n  show,\n  layer = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentLayer, setCurrentLayer] =\n    useState<AnnotationLayerObject | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = layer !== null;\n\n  // annotation layer fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('annotation_layer'),\n    addDangerToast,\n  );\n\n  const resetLayer = () => {\n    // Reset layer\n    setCurrentLayer({\n      name: '',\n      descr: '',\n    });\n  };\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n\n    // Reset layer\n    resetLayer();\n\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentLayer?.id) {\n        const update_id = currentLayer.id;\n        delete currentLayer.id;\n        delete currentLayer.created_by;\n        updateResource(update_id, currentLayer).then(response => {\n          if (!response) {\n            return;\n          }\n\n          hide();\n          addSuccessToast(t('Annotation template updated'));\n        });\n      }\n    } else if (currentLayer) {\n      // Create\n      createResource(currentLayer).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onLayerAdd) {\n          onLayerAdd(response);\n        }\n\n        hide();\n        addSuccessToast(t('Annotation template created'));\n      });\n    }\n  };\n\n  const onTextChange = (\n    event:\n      | React.ChangeEvent<HTMLTextAreaElement>\n      | React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const data = {\n      ...currentLayer,\n      name: currentLayer ? currentLayer.name : '',\n      descr: currentLayer ? currentLayer.descr : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentLayer(data);\n  };\n\n  const validate = () => {\n    if (currentLayer?.name?.length) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentLayer?.id ||\n        (layer && layer.id !== currentLayer.id) ||\n        (isHidden && show))\n    ) {\n      if (show && layer && layer.id !== null && !loading) {\n        const id = layer.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentLayer || currentLayer.id || (isHidden && show))\n    ) {\n      // Reset layer\n      resetLayer();\n    }\n  }, [layer, show]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentLayer(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentLayer ? currentLayer.name : '',\n    currentLayer ? currentLayer.descr : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"annotation-layer-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit annotation layer properties')\n            : t('Add annotation layer')}\n        </h4>\n      }\n    >\n      <StyledAnnotationLayerTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledAnnotationLayerTitle>\n      <LayerContainer>\n        <div className=\"control-label\">\n          {t('Annotation layer name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"name\"\n          onChange={onTextChange}\n          type=\"text\"\n          value={currentLayer?.name}\n        />\n      </LayerContainer>\n      <LayerContainer>\n        <div className=\"control-label\">{t('description')}</div>\n        <textarea\n          name=\"descr\"\n          value={currentLayer?.descr}\n          placeholder={t('Description (this can be seen in the list)')}\n          onChange={onTextChange}\n        />\n      </LayerContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(AnnotationLayerModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from 'src/features/annotationLayers/AnnotationLayerModal';\nimport { AnnotationLayerObject } from 'src/features/annotationLayers/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst PAGE_SIZE = 25;\n\ninterface AnnotationLayersListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction AnnotationLayersList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: AnnotationLayersListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: layersCount,\n      resourceCollection: layers,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('Annotation layers'),\n    addDangerToast,\n  );\n\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] =\n    useState<boolean>(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const handleLayerDelete = ({ id, name }: AnnotationLayerObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setLayerCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkLayerDelete = (layersToDelete: AnnotationLayerObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(\n        layersToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected layers: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  function handleAnnotationLayerEdit(layer: AnnotationLayerObject | null) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { id, name },\n          },\n        }: any) => {\n          let hasHistory = true;\n\n          try {\n            useHistory();\n          } catch (err) {\n            // If error is thrown, we know not to use <Link> in render\n            hasHistory = false;\n          }\n\n          if (hasHistory) {\n            return <Link to={`/annotationlayer/${id}/annotation`}>{name}</Link>;\n          }\n\n          return <a href={`/annotationlayer/${id}/annotation`}>{name}</a>;\n        },\n      },\n      {\n        accessor: 'descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationLayerEdit(original);\n          const handleDelete = () => setLayerCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.changed_by,\n        hidden: true,\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n      {\n        Header: t('Changed by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'annotation_layer',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n      </>\n    ),\n  };\n\n  const onLayerAdd = (id?: number) => {\n    window.location.href = `/annotationlayer/${id}/annotation`;\n  };\n\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n\n  return (\n    <>\n      <SubMenu name={t('Annotation layers')} buttons={subMenuButtons} />\n      <AnnotationLayerModal\n        addDangerToast={addDangerToast}\n        layer={currentAnnotationLayer}\n        onLayerAdd={onLayerAdd}\n        onHide={onModalHide}\n        show={annotationLayerModalOpen}\n      />\n      {layerCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the layer.')}\n          onConfirm={() => {\n            if (layerCurrentlyDeleting) {\n              handleLayerDelete(layerCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setLayerCurrentlyDeleting(null)}\n          open\n          title={t('Delete Layer?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected layers?')}\n        onConfirm={handleBulkLayerDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<AnnotationLayerObject>\n              className=\"annotation-layers-list-view\"\n              columns={columns}\n              count={layersCount}\n              data={layers}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              emptyState={emptyState}\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationLayersList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["ModifiedInfo","_ref","user","date","dateSpan","___EmotionJSX","className","userName","getOwnerName","title","t","Tooltip","placement","StyledActions","styled","span","theme","colors","primary","base","ActionWrapper","_ref2","grayscale","ActionsBar","_ref3","actions","map","action","index","ActionIcon","Icons","icon","tooltip","id","label","key","role","tabIndex","onClick","StyledAnnotationLayerTitle","div","gridUnit","LayerContainer","_ref4","_ref5","_ref6","error","_ref7","_ref8","_ref9","light2","_ref10","_ref11","light1","withToasts","_ref12","addDangerToast","addSuccessToast","onLayerAdd","onHide","show","layer","disableSave","setDisableSave","useState","currentLayer","setCurrentLayer","isHidden","setIsHidden","isEditMode","state","loading","resource","fetchResource","createResource","updateResource","useSingleViewResource","resetLayer","name","descr","hide","onTextChange","event","target","data","value","useEffect","validate","_currentLayer$name","length","Modal","disablePrimaryButton","onHandledPrimaryAction","onSave","update_id","created_by","then","response","primaryButtonName","width","EditAlt","css","StyledIcon","PlusLarge","onChange","type","placeholder","resourceCount","layersCount","resourceCollection","layers","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","useListViewResource","annotationLayerModalOpen","setAnnotationLayerModalOpen","currentAnnotationLayer","setCurrentAnnotationLayer","layerCurrentlyDeleting","setLayerCurrentlyDeleting","canCreate","canEdit","canDelete","handleAnnotationLayerEdit","initialSort","desc","columns","useMemo","accessor","Header","Cell","row","original","hasHistory","useHistory","err","Link","to","href","changed_on_delta_humanized","changedOn","changed_by","changedBy","size","handleEdit","handleDelete","filter","item","disableSortBy","hidden","QueryObjectColumns","subMenuButtons","push","React","buttonStyle","filters","input","operator","FilterOperator","contains","relationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","emptyState","image","buttonAction","buttonText","SubMenu","buttons","AnnotationLayerModal","window","location","onModalHide","DeleteModal","description","onConfirm","handleLayerDelete","SupersetClient","delete","endpoint","open","ConfirmStatusChange","layersToDelete","rison","json","message","confirmDelete","bulkActions","onSelect","ListView","count","pageSize","disableBulkSelect","owner","first_name","last_name"],"sourceRoot":""}