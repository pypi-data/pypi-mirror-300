{"version":3,"file":"ba63cc1653a041b010df.chunk.js","mappings":"+NA+Bc,SAAUA,EACtBC,GAEA,MAAM,KACJC,EAAI,SACJC,EAAQ,OACRC,EAAM,MACNC,EAAK,YACLC,EAAW,iBACXC,EAAgB,mBAChBC,EAAkB,iBAClBC,EAAgB,mBAChBC,EAAkB,gBAClBC,EAAe,YACfC,EAAW,SACXC,GACEZ,GACE,aAAEa,GAAiBX,GAElBY,EAAOC,IAAYC,EAAAA,EAAAA,UAA+B,MAAZH,EAAAA,EAAgB,IACvDI,GAAcC,EAAAA,EAAAA,UAClB,IACEjB,EAAKkB,QACH,CAACC,EAAGC,KAAA,IAAE,SAAEC,EAAQ,KAAEC,GAA0CF,EAAA,MAAM,IAC7DD,EACH,CAACE,GAAWC,EACb,GACD,CAAC,IAEL,CAACC,KAAKC,UAAUxB,KAGZyB,EAAgBC,IACpB,MAAMC,GAAwBC,EAAAA,EAAAA,GAAsBF,IAC7CG,GAAaF,EACdG,EAAQD,EAAYb,EAAYa,QAAaE,EAE7CC,EAA+B,CAAC,EAClCH,IACFG,EAAcC,gBAAkBJ,GAElCf,EAASa,GACTvB,EAAY,CACV4B,gBACAtB,YAAa,CACXoB,QACAjB,MAAOc,EAAYO,OAASP,EAAc,OAE5C,GAGJQ,EAAAA,EAAAA,YAAU,KACRV,EAAyB,MAAZb,EAAAA,EAAgB,GAAG,GAG/B,CAACW,KAAKC,UAAUZ,MAEnBuB,EAAAA,EAAAA,YAAU,KAAK,IAAAC,EACbX,EAA8B,OAAlBW,EAAC1B,EAAYG,OAAKuB,EAAI,GAAG,GACpC,CAACb,KAAKC,UAAUd,EAAYG,SAE/B,MAAMwB,EACoB,KAAvBrC,GAAQ,IAAIkC,QACTI,EAAAA,EAAAA,GAAE,YACFC,EAAAA,EAAAA,IAAG,YAAa,aAAcvC,EAAKkC,OAAQlC,EAAKkC,QAEhDM,EAA8B,CAAC,EACjC9B,EAAY+B,kBACdD,EAAaE,OACXC,EAAAA,EAAAA,IAACC,EAAAA,GAAa,CAACC,OAAQnC,EAAYoC,gBAChCpC,EAAY+B,kBAKnB,MAAMM,GAAW/C,GAAQ,IAAIgD,KAC1BC,IACC,MAAM,KAAE3B,EAAI,SAAED,GAAa4B,EAC3B,MAAO,CACLnB,MAAOR,EACPT,MAAOQ,EACR,IAIL,OACEsB,EAAAA,EAAAA,IAACO,EAAAA,GAAiB,CAAChD,OAAQA,EAAQC,MAAOA,IACxCwC,EAAAA,EAAAA,IAACQ,EAAAA,IAAcC,EAAAA,EAAAA,GAAA,CACbN,eAAgBpC,EAAYoC,gBACxBN,IAEJG,EAAAA,EAAAA,IAACU,EAAAA,GAAM,CACLC,YAAU,EACVzC,MAAOA,EACP0C,YAAalB,EAEbmB,SAAU/B,EACVgC,OAAQjD,EACRkD,QAASnD,EACToD,aAActD,EACduD,aAActD,EACduD,IAAKlD,EACLoC,QAASA,EACTe,wBAAyBrD,KAKnC,C,wFCrHO,MAAMsD,EAAmB,EAEnBb,EAAoBc,EAAAA,GAAOC,GAA4B;gBACpD7C,IAAA,IAAC,OAAElB,GAAQkB,EAAA,OAAKlB,CAAM;WAC3BgE,IAAA,IAAC,MAAE/D,GAAO+D,EAAA,OAAM/D,IAAU4D,EAAmB,OAAS,GAAG5D,KAAS;EAGhEgD,GAAiBa,EAAAA,EAAAA,IAAOG,EAAAA,EAAS;;;;EAMjCvB,EAAgBoB,EAAAA,GAAOC,GAElC;WACSG,IAAA,IAAAC,EAAA,IAAC,MAAEC,EAAK,OAAEzB,EAAS,SAASuB,EAAA,OAAyB,OAAzBC,EAAKC,EAAMC,OAAO1B,SAAO,EAApBwB,EAAsBG,IAAI","sources":["webpack://superset/./src/filters/components/TimeGrain/TimeGrainFilterPlugin.tsx","webpack://superset/./src/filters/components/common.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  t,\n  TimeGranularity,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FormItemProps } from 'antd/lib/form';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterTimeGrainProps } from './types';\n\nexport default function PluginFilterTimegrain(\n  props: PluginFilterTimeGrainProps,\n) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n  } = props;\n  const { defaultValue } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n  const durationMap = useMemo(\n    () =>\n      data.reduce(\n        (agg, { duration, name }: { duration: string; name: string }) => ({\n          ...agg,\n          [duration]: name,\n        }),\n        {} as { [key in string]: string },\n      ),\n    [JSON.stringify(data)],\n  );\n\n  const handleChange = (values: string[] | string | undefined | null) => {\n    const resultValue: string[] = ensureIsArray<string>(values);\n    const [timeGrain] = resultValue;\n    const label = timeGrain ? durationMap[timeGrain] : undefined;\n\n    const extraFormData: ExtraFormData = {};\n    if (timeGrain) {\n      extraFormData.time_grain_sqla = timeGrain as TimeGranularity;\n    }\n    setValue(resultValue);\n    setDataMask({\n      extraFormData,\n      filterState: {\n        label,\n        value: resultValue.length ? resultValue : null,\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleChange(defaultValue ?? []);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n\n  useEffect(() => {\n    handleChange(filterState.value ?? []);\n  }, [JSON.stringify(filterState.value)]);\n\n  const placeholderText =\n    (data || []).length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n\n  const options = (data || []).map(\n    (row: { name: string; duration: string }) => {\n      const { name, duration } = row;\n      return {\n        label: name,\n        value: duration,\n      };\n    },\n  );\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          // @ts-ignore\n          onChange={handleChange}\n          onBlur={unsetFocusedFilter}\n          onFocus={setFocusedFilter}\n          onMouseEnter={setHoveredFilter}\n          onMouseLeave={unsetHoveredFilter}\n          ref={inputRef}\n          options={options}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { PluginFilterStylesProps } from './types';\nimport FormItem from '../../components/Form/FormItem';\n\nexport const RESPONSIVE_WIDTH = 0;\n\nexport const FilterPluginStyle = styled.div<PluginFilterStylesProps>`\n  min-height: ${({ height }) => height}px;\n  width: ${({ width }) => (width === RESPONSIVE_WIDTH ? '100%' : `${width}px`)};\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  &.ant-row.ant-form-item {\n    margin: 0;\n  }\n`;\n\nexport const StatusMessage = styled.div<{\n  status?: 'error' | 'warning' | 'info';\n}>`\n  color: ${({ theme, status = 'error' }) => theme.colors[status]?.base};\n`;\n"],"names":["PluginFilterTimegrain","props","data","formData","height","width","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","filterState","inputRef","defaultValue","value","setValue","useState","durationMap","useMemo","reduce","agg","_ref","duration","name","JSON","stringify","handleChange","values","resultValue","ensureIsArray","timeGrain","label","undefined","extraFormData","time_grain_sqla","length","useEffect","_filterState$value","placeholderText","t","tn","formItemData","validateMessage","extra","___EmotionJSX","StatusMessage","status","validateStatus","options","map","row","FilterPluginStyle","StyledFormItem","_extends","Select","allowClear","placeholder","onChange","onBlur","onFocus","onMouseEnter","onMouseLeave","ref","onDropdownVisibleChange","RESPONSIVE_WIDTH","styled","div","_ref2","FormItem","_ref3","_theme$colors$status","theme","colors","base"],"sourceRoot":""}