{"version":3,"file":"8ac6053e56d31923d877.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/features/tags/TagModal.tsx","webpack://superset/./src/features/allEntities/AllEntitiesTable.tsx","webpack://superset/./src/pages/AllEntities/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst MAX_DISPLAY_CHAR = 20;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n  toolTipTitle = name,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > MAX_DISPLAY_CHAR, [name]);\n  const tagDisplay = isLongTag ? `${name.slice(0, MAX_DISPLAY_CHAR)}...` : name;\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag\n            key={id}\n            closable={editable}\n            onClose={handleClose}\n            color=\"blue\"\n          >\n            {tagDisplay}\n          </StyledTag>\n        </Tooltip>\n      ) : (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag data-test=\"tag\" role=\"link\" key={id} onClick={onClick}>\n            {id ? (\n              <a\n                href={`/superset/all_entities/?id=${id}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {tagDisplay}\n              </a>\n            ) : (\n              tagDisplay\n            )}\n          </StyledTag>\n        </Tooltip>\n      )}\n    </>\n  );\n\n  return tagElem;\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag\n              name={`+${extraTags}...`}\n              onClick={expand}\n              toolTipTitle={tags.map(t => t.name).join(', ')}\n            />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ChangeEvent, useState, useEffect } from 'react';\nimport rison from 'rison';\nimport Modal from 'src/components/Modal';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { FormLabel } from 'src/components/Form';\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport { Input } from 'antd';\nimport { Divider } from 'src/components';\nimport Button from 'src/components/Button';\nimport { Tag } from 'src/views/CRUD/types';\nimport { fetchObjectsByTagIds } from 'src/features/tags/tags';\n\nconst StyledModalBody = styled.div`\n  .ant-select-dropdown {\n    max-height: ${({ theme }) => theme.gridUnit * 40}px;\n  }\n  .tag-input {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\n\nexport interface TaggableResourceOption {\n  label: string;\n  value: number;\n  key: number;\n}\n\nexport enum TaggableResources {\n  Chart = 'chart',\n  Dashboard = 'dashboard',\n  SavedQuery = 'query',\n}\n\ninterface TagModalProps {\n  onHide: () => void;\n  refreshData: () => void;\n  addSuccessToast: (msg: string) => void;\n  addDangerToast: (msg: string) => void;\n  show: boolean;\n  clearOnHide?: boolean;\n  editTag?: Tag | null;\n}\n\nconst TagModal: React.FC<TagModalProps> = ({\n  show,\n  onHide,\n  editTag,\n  refreshData,\n  addSuccessToast,\n  addDangerToast,\n  clearOnHide = false,\n}) => {\n  const [dashboardsToTag, setDashboardsToTag] = useState<\n    TaggableResourceOption[]\n  >([]);\n  const [chartsToTag, setChartsToTag] = useState<TaggableResourceOption[]>([]);\n  const [savedQueriesToTag, setSavedQueriesToTag] = useState<\n    TaggableResourceOption[]\n  >([]);\n\n  const [tagName, setTagName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  const isEditMode = !!editTag;\n  const modalTitle = isEditMode ? 'Edit Tag' : 'Create Tag';\n\n  const clearResources = () => {\n    setDashboardsToTag([]);\n    setChartsToTag([]);\n    setSavedQueriesToTag([]);\n  };\n\n  const clearTagForm = () => {\n    setTagName('');\n    setDescription('');\n    setDashboardsToTag([]);\n    setChartsToTag([]);\n    setSavedQueriesToTag([]);\n  };\n\n  useEffect(() => {\n    const resourceMap: { [key: string]: TaggableResourceOption[] } = {\n      [TaggableResources.Dashboard]: [],\n      [TaggableResources.Chart]: [],\n      [TaggableResources.SavedQuery]: [],\n    };\n\n    const updateResourceOptions = ({ id, name, type }: Tag) => {\n      const resourceOptions = resourceMap[type];\n      if (resourceOptions) {\n        resourceOptions.push({\n          value: id,\n          label: name,\n          key: id,\n        });\n      }\n    };\n    clearResources();\n    if (isEditMode) {\n      fetchObjectsByTagIds(\n        { tagIds: [editTag.id], types: null },\n        (data: Tag[]) => {\n          data.forEach(updateResourceOptions);\n          setDashboardsToTag(resourceMap[TaggableResources.Dashboard]);\n          setChartsToTag(resourceMap[TaggableResources.Chart]);\n          setSavedQueriesToTag(resourceMap[TaggableResources.SavedQuery]);\n        },\n        (error: Response) => {\n          addDangerToast('Error Fetching Tagged Objects');\n        },\n      );\n      setTagName(editTag.name);\n      setDescription(editTag.description);\n    }\n  }, [editTag]);\n\n  const loadData = async (\n    search: string,\n    page: number,\n    pageSize: number,\n    columns: string[],\n    filterColumn: string,\n    orderColumn: string,\n    endpoint: string,\n  ) => {\n    const queryParams = rison.encode({\n      columns,\n      filters: [\n        {\n          col: filterColumn,\n          opr: 'ct',\n          value: search,\n        },\n      ],\n      page,\n      order_column: orderColumn,\n    });\n\n    const { json } = await SupersetClient.get({\n      endpoint: `/api/v1/${endpoint}/?q=${queryParams}`,\n    });\n    const { result, count } = json;\n\n    return {\n      data: result.map((item: { id: number }) => ({\n        value: item.id,\n        label: item[filterColumn],\n      })),\n      totalCount: count,\n    };\n  };\n\n  const loadCharts = async (search: string, page: number, pageSize: number) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'slice_name'],\n      'slice_name',\n      'slice_name',\n      'chart',\n    );\n\n  const loadDashboards = async (\n    search: string,\n    page: number,\n    pageSize: number,\n  ) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'dashboard_title'],\n      'dashboard_title',\n      'dashboard_title',\n      'dashboard',\n    );\n\n  const loadQueries = async (search: string, page: number, pageSize: number) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'label'],\n      'label',\n      'label',\n      'saved_query',\n    );\n\n  const handleOptionChange = (resource: TaggableResources, data: any) => {\n    if (resource === TaggableResources.Dashboard) setDashboardsToTag(data);\n    else if (resource === TaggableResources.Chart) setChartsToTag(data);\n    else if (resource === TaggableResources.SavedQuery)\n      setSavedQueriesToTag(data);\n  };\n\n  const handleTagNameChange = (ev: ChangeEvent<HTMLInputElement>) =>\n    setTagName(ev.target.value);\n  const handleDescriptionChange = (ev: ChangeEvent<HTMLInputElement>) =>\n    setDescription(ev.target.value);\n\n  const onSave = () => {\n    const dashboards = dashboardsToTag.map(dash => ['dashboard', dash.value]);\n    const charts = chartsToTag.map(chart => ['chart', chart.value]);\n    const savedQueries = savedQueriesToTag.map(q => ['query', q.value]);\n\n    if (isEditMode) {\n      SupersetClient.put({\n        endpoint: `/api/v1/tag/${editTag.id}`,\n        jsonPayload: {\n          description,\n          name: tagName,\n          objects_to_tag: [...dashboards, ...charts, ...savedQueries],\n        },\n      })\n        .then(({ json = {} }) => {\n          refreshData();\n          clearTagForm();\n          addSuccessToast(t('Tag updated'));\n          onHide();\n        })\n        .catch(err => {\n          addDangerToast(err.message || 'Error Updating Tag');\n        });\n    } else {\n      SupersetClient.post({\n        endpoint: `/api/v1/tag/`,\n        jsonPayload: {\n          description,\n          name: tagName,\n          objects_to_tag: [...dashboards, ...charts, ...savedQueries],\n        },\n      })\n        .then(({ json = {} }) => {\n          refreshData();\n          clearTagForm();\n          addSuccessToast(t('Tag created'));\n          onHide();\n        })\n        .catch(err => addDangerToast(err.message || 'Error Creating Tag'));\n    }\n  };\n\n  return (\n    <Modal\n      title={modalTitle}\n      onHide={() => {\n        if (clearOnHide) clearTagForm();\n        onHide();\n      }}\n      show={show}\n      footer={\n        <div>\n          <Button\n            data-test=\"modal-save-dashboard-button\"\n            buttonStyle=\"secondary\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            data-test=\"modal-save-dashboard-button\"\n            buttonStyle=\"primary\"\n            onClick={onSave}\n          >\n            {t('Save')}\n          </Button>\n        </div>\n      }\n    >\n      <StyledModalBody>\n        <FormLabel>{t('Tag name')}</FormLabel>\n        <Input\n          className=\"tag-input\"\n          onChange={handleTagNameChange}\n          placeholder={t('Name of your tag')}\n          value={tagName}\n        />\n        <FormLabel>{t('Description')}</FormLabel>\n        <Input\n          className=\"tag-input\"\n          onChange={handleDescriptionChange}\n          placeholder={t('Add description of your tag')}\n          value={description}\n        />\n        <Divider />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select dashboards')}\n          mode=\"multiple\"\n          name=\"dashboards\"\n          // @ts-ignore\n          value={dashboardsToTag}\n          options={loadDashboards}\n          onChange={value =>\n            handleOptionChange(TaggableResources.Dashboard, value)\n          }\n          header={<FormLabel>{t('Dashboards')}</FormLabel>}\n          allowClear\n        />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select charts')}\n          mode=\"multiple\"\n          name=\"charts\"\n          // @ts-ignore\n          value={chartsToTag}\n          options={loadCharts}\n          onChange={value => handleOptionChange(TaggableResources.Chart, value)}\n          header={<FormLabel>{t('Charts')}</FormLabel>}\n          allowClear\n        />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select saved queries')}\n          mode=\"multiple\"\n          name=\"savedQueries\"\n          // @ts-ignore\n          value={savedQueriesToTag}\n          options={loadQueries}\n          onChange={value =>\n            handleOptionChange(TaggableResources.SavedQuery, value)\n          }\n          header={<FormLabel>{t('Saved queries')}</FormLabel>}\n          allowClear\n        />\n      </StyledModalBody>\n    </Modal>\n  );\n};\n\nexport default TagModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport moment from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { TagsList } from 'src/components/Tags';\nimport FacePile from 'src/components/FacePile';\nimport Tag from 'src/types/TagType';\nimport Owner from 'src/types/Owner';\nimport { EmptyStateBig } from 'src/components/EmptyState';\n\nconst MAX_TAGS_TO_SHOW = 3;\nconst PAGE_SIZE = 10;\n\nconst AllEntitiesTableContainer = styled.div`\n  text-align: left;\n  border-radius: ${({ theme }) => theme.gridUnit * 1}px 0;\n  .table {\n    table-layout: fixed;\n  }\n  .td {\n    width: 33%;\n  }\n  .entity-title {\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.typography.sizes.m}px;\n    font-weight: ${({ theme }) => theme.typography.weights.medium};\n    line-height: 17px;\n    letter-spacing: 0px;\n    text-align: left;\n    margin: ${({ theme }) => theme.gridUnit * 4}px 0;\n  }\n`;\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n  owners: Owner[];\n  tags: Tag[];\n}\n\nexport interface TaggedObjects {\n  dashboard: TaggedObject[];\n  chart: TaggedObject[];\n  query: TaggedObject[];\n}\n\ninterface AllEntitiesTableProps {\n  search?: string;\n  setShowTagModal: (show: boolean) => void;\n  objects: TaggedObjects;\n}\n\nexport default function AllEntitiesTable({\n  search = '',\n  setShowTagModal,\n  objects,\n}: AllEntitiesTableProps) {\n  type objectType = 'dashboard' | 'chart' | 'query';\n\n  const showListViewObjs =\n    objects.dashboard.length > 0 ||\n    objects.chart.length > 0 ||\n    objects.query.length > 0;\n\n  const renderTable = (type: objectType) => {\n    const data = objects[type].map((o: TaggedObject) => ({\n      [type]: <a href={o.url}>{o.name}</a>,\n      modified: moment.utc(o.changed_on).fromNow(),\n      tags: o.tags,\n      owners: o.owners,\n    }));\n\n    return (\n      <TableView\n        className=\"table-condensed\"\n        emptyWrapperType={EmptyWrapperType.Small}\n        data={data}\n        pageSize={PAGE_SIZE}\n        columns={[\n          {\n            accessor: type,\n            Header: 'Title',\n          },\n          {\n            Cell: ({\n              row: {\n                original: { tags = [] },\n              },\n            }: {\n              row: {\n                original: {\n                  tags: Tag[];\n                };\n              };\n            }) => (\n              // Only show custom type tags\n              <TagsList\n                tags={tags.filter(\n                  (tag: Tag) =>\n                    tag.type === 'TagTypes.custom' || tag.type === 1,\n                )}\n                maxTags={MAX_TAGS_TO_SHOW}\n              />\n            ),\n            Header: t('Tags'),\n            accessor: 'tags',\n            disableSortBy: true,\n          },\n          {\n            Cell: ({\n              row: {\n                original: { owners = [] },\n              },\n            }: any) => <FacePile users={owners} />,\n            Header: t('Owners'),\n            accessor: 'owners',\n            disableSortBy: true,\n            size: 'xl',\n          },\n        ]}\n      />\n    );\n  };\n\n  return (\n    <AllEntitiesTableContainer>\n      {showListViewObjs ? (\n        <>\n          <div className=\"entity-title\">{t('Dashboards')}</div>\n          {renderTable('dashboard')}\n          <div className=\"entity-title\">{t('Charts')}</div>\n          {renderTable('chart')}\n          <div className=\"entity-title\">{t('Queries')}</div>\n          {renderTable('query')}\n        </>\n      ) : (\n        <EmptyStateBig\n          image=\"dashboard.svg\"\n          title={t('No entities have this tag currently assigned')}\n          buttonAction={() => setShowTagModal(true)}\n          buttonText={t('Add tag to entities')}\n        />\n      )}\n    </AllEntitiesTableContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, t, css, SupersetTheme } from '@superset-ui/core';\nimport { NumberParam, useQueryParam } from 'use-query-params';\nimport AllEntitiesTable, {\n  TaggedObjects,\n} from 'src/features/allEntities/AllEntitiesTable';\nimport Button from 'src/components/Button';\nimport MetadataBar, {\n  MetadataType,\n  Description,\n  Owner,\n  LastModified,\n} from 'src/components/MetadataBar';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport { Tag } from 'src/views/CRUD/types';\nimport TagModal from 'src/features/tags/TagModal';\nimport withToasts, { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { fetchObjectsByTagIds, fetchSingleTag } from 'src/features/tags/tags';\nimport Loading from 'src/components/Loading';\nimport getOwnerName from 'src/utils/getOwnerName';\n\ninterface TaggedObject {\n  id: number;\n  type: string;\n  name: string;\n  url: string;\n  changed_on: moment.MomentInput;\n  created_by: number | undefined;\n  creator: string;\n  owners: Owner[];\n  tags: Tag[];\n}\n\nconst additionalItemsStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  align-items: center;\n  margin-left: ${theme.gridUnit}px;\n  & > span {\n    margin-right: ${theme.gridUnit * 3}px;\n  }\n`;\n\nconst AllEntitiesContainer = styled.div`\n  ${({ theme }) => `\n  background-color: ${theme.colors.grayscale.light4};\n  .select-control {\n    margin-left: ${theme.gridUnit * 4}px;\n    margin-right: ${theme.gridUnit * 4}px;\n    margin-bottom: ${theme.gridUnit * 2}px;\n  }\n  .select-control-label {\n    text-transform: uppercase;\n    font-size: ${theme.gridUnit * 3}px;\n    color: ${theme.colors.grayscale.base};\n    margin-bottom: ${theme.gridUnit * 1}px;\n  }\n  .entities {\n    margin: ${theme.gridUnit * 6}px; 0px;\n  }\n  .pagination-container {\n    background-color: transparent;\n  }\n  `}\n`;\n\nconst AllEntitiesNav = styled.div`\n  ${({ theme }) => `\n  height: ${theme.gridUnit * 12.5}px;\n  background-color: ${theme.colors.grayscale.light5};\n  margin-bottom: ${theme.gridUnit * 4}px;\n  .navbar-brand {\n    margin-left: ${theme.gridUnit * 2}px;\n    font-weight: ${theme.typography.weights.bold};\n  }\n  .header {\n    font-weight: ${theme.typography.weights.bold};\n    margin-right:  ${theme.gridUnit * 3}px;\n    text-align: left;\n    font-size: ${theme.gridUnit * 4.5}px;\n    padding: ${theme.gridUnit * 3}px;\n    display: inline-block;\n    line-height: ${theme.gridUnit * 9}px;\n  }\n  `};\n`;\n\nfunction AllEntities() {\n  const [tagId] = useQueryParam('id', NumberParam);\n  const [tag, setTag] = useState<Tag | null>(null);\n  const [showTagModal, setShowTagModal] = useState<boolean>(false);\n  const { addSuccessToast, addDangerToast } = useToasts();\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [objects, setObjects] = useState<TaggedObjects>({\n    dashboard: [],\n    chart: [],\n    query: [],\n  });\n\n  const editableTitleProps = {\n    title: tag?.name || '',\n    placeholder: 'testing',\n    onSave: (newDatasetName: string) => {},\n    canEdit: false,\n    label: t('dataset name'),\n  };\n\n  const items = [];\n  if (tag?.description) {\n    const description: Description = {\n      type: MetadataType.DESCRIPTION,\n      value: tag?.description || '',\n    };\n    items.push(description);\n  }\n\n  const owner: Owner = {\n    type: MetadataType.OWNER,\n    createdBy: getOwnerName(tag?.created_by),\n    createdOn: tag?.created_on_delta_humanized || '',\n  };\n  items.push(owner);\n\n  const lastModified: LastModified = {\n    type: MetadataType.LAST_MODIFIED,\n    value: tag?.changed_on_delta_humanized || '',\n    modifiedBy: getOwnerName(tag?.changed_by),\n  };\n  items.push(lastModified);\n\n  const fetchTaggedObjects = () => {\n    setLoading(true);\n    if (!tag) {\n      addDangerToast('Error tag object is not referenced!');\n      return;\n    }\n    fetchObjectsByTagIds(\n      { tagIds: [tag?.id] || '', types: null },\n      (data: TaggedObject[]) => {\n        const objects = { dashboard: [], chart: [], query: [] };\n        data.forEach(function (object) {\n          const object_type = object.type;\n          objects[object_type].push(object);\n        });\n        setObjects(objects);\n        setLoading(false);\n      },\n      (error: Response) => {\n        addDangerToast('Error Fetching Tagged Objects');\n        setLoading(false);\n      },\n    );\n  };\n\n  const fetchTag = (tagId: number) => {\n    fetchSingleTag(\n      tagId,\n      (tag: Tag) => {\n        setTag(tag);\n        setLoading(false);\n      },\n      (error: Response) => {\n        addDangerToast(t('Error Fetching Tagged Objects'));\n        setLoading(false);\n      },\n    );\n  };\n\n  useEffect(() => {\n    // fetch single tag met\n    if (tagId) {\n      setLoading(true);\n      fetchTag(tagId);\n    }\n  }, [tagId]);\n\n  useEffect(() => {\n    if (tag) fetchTaggedObjects();\n  }, [tag]);\n\n  if (isLoading) return <Loading />;\n  return (\n    <AllEntitiesContainer>\n      <TagModal\n        show={showTagModal}\n        onHide={() => {\n          setShowTagModal(false);\n        }}\n        editTag={tag}\n        addSuccessToast={addSuccessToast}\n        addDangerToast={addDangerToast}\n        refreshData={() => {\n          fetchTaggedObjects();\n          if (tagId) fetchTag(tagId);\n        }}\n      />\n      <AllEntitiesNav>\n        <PageHeaderWithActions\n          additionalActionsMenu={<></>}\n          editableTitleProps={editableTitleProps}\n          faveStarProps={{ itemId: 1, saveFaveStar: () => {} }}\n          showFaveStar={false}\n          showTitlePanelItems\n          titlePanelAdditionalItems={\n            <div css={additionalItemsStyles}>\n              <MetadataBar items={items} tooltipPlacement=\"bottom\" />\n            </div>\n          }\n          rightPanelAdditionalItems={\n            <>\n              <Button\n                data-test=\"bulk-select-action\"\n                buttonStyle=\"secondary\"\n                onClick={() => setShowTagModal(true)}\n                showMarginRight={false}\n              >\n                {t('Edit Tag')}{' '}\n              </Button>\n            </>\n          }\n          menuDropdownProps={{\n            disabled: true,\n          }}\n          showMenuDropdown={false}\n        />\n      </AllEntitiesNav>\n      <div className=\"entities\">\n        <AllEntitiesTable\n          search={tag?.name || ''}\n          setShowTagModal={setShowTagModal}\n          objects={objects}\n        />\n      </div>\n    </AllEntitiesContainer>\n  );\n}\n\nexport default withToasts(AllEntities);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["StyledTag","styled","AntdTag","_ref","theme","gridUnit","typography","sizes","s","_ref2","name","id","index","onDelete","editable","onClick","toolTipTitle","tagDisplay","useMemo","length","slice","___EmotionJSX","React","Tooltip","title","key","closable","onClose","handleClose","color","role","href","target","rel","TagsDiv","div","tags","maxTags","tempMaxTags","setTempMaxTags","useState","handleDelete","tagsIsLong","extraTags","className","map","tag","Tag","expand","undefined","t","join","collapse","StyledModalBody","TaggableResources","_ref3","show","onHide","editTag","refreshData","addSuccessToast","addDangerToast","clearOnHide","dashboardsToTag","setDashboardsToTag","chartsToTag","setChartsToTag","savedQueriesToTag","setSavedQueriesToTag","tagName","setTagName","description","setDescription","isEditMode","modalTitle","clearTagForm","useEffect","resourceMap","Dashboard","Chart","SavedQuery","updateResourceOptions","_ref4","type","resourceOptions","push","value","label","fetchObjectsByTagIds","tagIds","types","data","forEach","error","loadData","async","search","page","pageSize","columns","filterColumn","orderColumn","endpoint","queryParams","rison","filters","col","opr","order_column","json","SupersetClient","get","result","count","item","totalCount","handleOptionChange","resource","Modal","footer","Button","buttonStyle","onSave","dashboards","dash","charts","chart","savedQueries","q","put","jsonPayload","objects_to_tag","then","_ref5","catch","err","message","post","_ref6","FormLabel","Input","onChange","ev","placeholder","Divider","AsyncSelect","ariaLabel","mode","options","header","allowClear","AllEntitiesTableContainer","m","weights","medium","AllEntitiesTable","setShowTagModal","objects","showListViewObjs","dashboard","query","renderTable","o","url","modified","moment","changed_on","fromNow","owners","TableView","emptyWrapperType","EmptyWrapperType","Small","accessor","Header","Cell","row","original","TagsList","filter","disableSortBy","_ref7","FacePile","users","size","EmptyStateBig","image","buttonAction","buttonText","additionalItemsStyles","css","AllEntitiesContainer","colors","grayscale","light4","base","AllEntitiesNav","light5","bold","withToasts","tagId","useQueryParam","NumberParam","setTag","showTagModal","useToasts","isLoading","setLoading","setObjects","editableTitleProps","newDatasetName","canEdit","items","MetadataType","DESCRIPTION","owner","OWNER","createdBy","getOwnerName","created_by","createdOn","created_on_delta_humanized","lastModified","LAST_MODIFIED","changed_on_delta_humanized","modifiedBy","changed_by","fetchTaggedObjects","object","object_type","fetchTag","fetchSingleTag","Loading","TagModal","PageHeaderWithActions","additionalActionsMenu","faveStarProps","itemId","saveFaveStar","showFaveStar","showTitlePanelItems","titlePanelAdditionalItems","MetadataBar","tooltipPlacement","rightPanelAdditionalItems","showMarginRight","menuDropdownProps","disabled","showMenuDropdown","first_name","last_name"],"sourceRoot":""}