{"version":3,"file":"7cb08277b7a3754afb44.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/features/alerts/components/AlertStatusIcon.tsx","webpack://superset/./src/features/alerts/types.ts","webpack://superset/./src/features/alerts/components/RecipientIcon.tsx","webpack://superset/./src/components/LastUpdated/index.tsx","webpack://superset/./src/pages/AlertReportList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["import React from 'react';\n\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, SupersetTheme, useTheme } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { AlertState } from '../types';\n\nfunction getStatusColor(\n  status: string,\n  isReportEnabled: boolean,\n  theme: SupersetTheme,\n) {\n  switch (status) {\n    case AlertState.Working:\n      return theme.colors.primary.base;\n    case AlertState.Error:\n      return theme.colors.error.base;\n    case AlertState.Success:\n      return isReportEnabled\n        ? theme.colors.success.base\n        : theme.colors.alert.base;\n    case AlertState.Noop:\n      return theme.colors.success.base;\n    case AlertState.Grace:\n      return theme.colors.alert.base;\n    default:\n      return theme.colors.grayscale.base;\n  }\n}\n\nexport default function AlertStatusIcon({\n  state,\n  isReportEnabled = false,\n}: {\n  state: string;\n  isReportEnabled: boolean;\n}) {\n  const theme = useTheme();\n  const lastStateConfig = {\n    icon: Icons.Check,\n    label: '',\n    status: '',\n  };\n  switch (state) {\n    case AlertState.Success:\n      lastStateConfig.icon = isReportEnabled\n        ? Icons.Check\n        : Icons.AlertSolidSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sent')\n        : t('Alert triggered, notification sent');\n      lastStateConfig.status = AlertState.Success;\n      break;\n    case AlertState.Working:\n      lastStateConfig.icon = Icons.Running;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sending')\n        : t('Alert running');\n      lastStateConfig.status = AlertState.Working;\n      break;\n    case AlertState.Error:\n      lastStateConfig.icon = Icons.XSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report failed')\n        : t('Alert failed');\n      lastStateConfig.status = AlertState.Error;\n      break;\n    case AlertState.Noop:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n      break;\n    case AlertState.Grace:\n      lastStateConfig.icon = Icons.AlertSolidSmall;\n      lastStateConfig.label = t('Alert Triggered, In Grace Period');\n      lastStateConfig.status = AlertState.Grace;\n      break;\n    default:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n  }\n  const Icon = lastStateConfig.icon;\n  return (\n    <Tooltip title={lastStateConfig.label} placement=\"bottomLeft\">\n      <Icon\n        iconColor={getStatusColor(\n          lastStateConfig.status,\n          isReportEnabled,\n          theme,\n        )}\n      />\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Owner from 'src/types/Owner';\nimport { NOTIFICATION_FORMATS } from 'src/features/reports/types';\n\ntype user = {\n  id: number;\n  first_name: string;\n  last_name: string;\n};\nexport type ChartObject = {\n  id: number;\n  slice_name: string;\n  viz_type: string;\n};\n\nexport type DashboardObject = {\n  dashboard_title: string;\n  id: number;\n};\n\nexport type DatabaseObject = {\n  database_name: string;\n  id: number;\n};\n\nexport type NotificationMethodOption = 'Email' | 'Slack';\n\nexport type Recipient = {\n  recipient_config_json: {\n    target: string;\n  };\n  type: NotificationMethodOption;\n};\n\nexport type MetaObject = {\n  id?: number;\n  label?: string;\n  value?: number | string;\n};\n\nexport type Operator = '<' | '>' | '<=' | '>=' | '==' | '!=' | 'not null';\n\nexport type AlertObject = {\n  active?: boolean;\n  creation_method?: string;\n  chart?: MetaObject;\n  changed_by?: user;\n  changed_on_delta_humanized?: string;\n  chart_id: number;\n  created_by?: user;\n  created_on?: string;\n  crontab?: string;\n  custom_width?: number | null;\n  dashboard?: MetaObject;\n  dashboard_id?: number;\n  database?: MetaObject;\n  description?: string;\n  error?: string;\n  force_screenshot: boolean;\n  grace_period?: number;\n  id: number;\n  last_eval_dttm?: number;\n  last_state?: 'Success' | 'Working' | 'Error' | 'Not triggered' | 'On Grace';\n  log_retention?: number;\n  name?: string;\n  owners?: Array<Owner | MetaObject>;\n  sql?: string;\n  timezone?: string;\n  recipients?: Array<Recipient>;\n  report_format?: NOTIFICATION_FORMATS;\n  type?: string;\n  validator_config_json?: {\n    op?: Operator;\n    threshold?: number;\n  };\n  validator_type?: string;\n  working_timeout?: number;\n};\n\nexport type LogObject = {\n  end_dttm: string;\n  error_message: string;\n  id: number;\n  scheduled_dttm: string;\n  start_dttm: string;\n  state: string;\n  value: string;\n  uuid: string;\n};\n\nexport enum AlertState {\n  Success = 'Success',\n  Working = 'Working',\n  Error = 'Error',\n  Noop = 'Not triggered',\n  Grace = 'On Grace',\n}\n\nexport enum RecipientIconName {\n  Email = 'Email',\n  Slack = 'Slack',\n}\nexport interface AlertsReportsConfig {\n  ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT: number;\n  ALERT_REPORTS_DEFAULT_RETENTION: number;\n  ALERT_REPORTS_DEFAULT_CRON_VALUE: string;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetTheme, css } from '@superset-ui/core';\nimport React, { ReactElement } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { RecipientIconName } from '../types';\n\nconst StyledIcon = (theme: SupersetTheme) => css`\n  color: ${theme.colors.grayscale.light1};\n  margin-right: ${theme.gridUnit * 2}px;\n`;\n\nexport default function RecipientIcon({ type }: { type: string }) {\n  const recipientIconConfig: { icon: null | ReactElement; label: string } = {\n    icon: null,\n    label: '',\n  };\n  switch (type) {\n    case RecipientIconName.Email:\n      recipientIconConfig.icon = <Icons.Email css={StyledIcon} />;\n      recipientIconConfig.label = RecipientIconName.Email;\n      break;\n    case RecipientIconName.Slack:\n      recipientIconConfig.icon = <Icons.Slack css={StyledIcon} />;\n      recipientIconConfig.label = RecipientIconName.Slack;\n      break;\n    default:\n      recipientIconConfig.icon = null;\n      recipientIconConfig.label = '';\n  }\n  return recipientIconConfig.icon ? (\n    <Tooltip title={recipientIconConfig.label} placement=\"bottom\">\n      {recipientIconConfig.icon}\n    </Tooltip>\n  ) : null;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, FunctionComponent } from 'react';\nimport moment, { Moment, MomentInput } from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nconst REFRESH_INTERVAL = 60000; // every minute\n\ninterface LastUpdatedProps {\n  updatedAt: MomentInput;\n  update?: React.MouseEventHandler<HTMLSpanElement>;\n}\nmoment.updateLocale('en', {\n  calendar: {\n    lastDay: '[Yesterday at] LTS',\n    sameDay: '[Today at] LTS',\n    nextDay: '[Tomorrow at] LTS',\n    lastWeek: '[last] dddd [at] LTS',\n    nextWeek: 'dddd [at] LTS',\n    sameElse: 'L',\n  },\n});\n\nconst TextStyles = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst Refresh = styled(Icons.Refresh)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  width: auto;\n  height: ${({ theme }) => theme.gridUnit * 5}px;\n  position: relative;\n  top: ${({ theme }) => theme.gridUnit}px;\n  left: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n`;\n\nexport const LastUpdated: FunctionComponent<LastUpdatedProps> = ({\n  updatedAt,\n  update,\n}) => {\n  const [timeSince, setTimeSince] = useState<Moment>(moment(updatedAt));\n\n  useEffect(() => {\n    setTimeSince(() => moment(updatedAt));\n\n    // update UI every minute in case day changes\n    const interval = setInterval(() => {\n      setTimeSince(() => moment(updatedAt));\n    }, REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [updatedAt]);\n\n  return (\n    <TextStyles>\n      {t('Last Updated %s', timeSince.isValid() ? timeSince.calendar() : '--')}\n      {update && <Refresh onClick={update} />}\n    </TextStyles>\n  );\n};\n\nexport default LastUpdated;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  t,\n  SupersetClient,\n  makeApi,\n  styled,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport RecipientIcon from 'src/features/alerts/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport Owner from 'src/types/Owner';\nimport AlertReportModal from 'src/features/alerts/AlertReportModal';\nimport { AlertObject, AlertState } from 'src/features/alerts/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst PAGE_SIZE = 25;\n\nconst AlertStateLabel: Record<AlertState, string> = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace'),\n};\n\ninterface AlertListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\nconst deleteAlerts = makeApi<number[], { message: string }>({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/',\n});\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\n\nfunction AlertList({\n  addDangerToast,\n  isReportEnabled = false,\n  user,\n  addSuccessToast,\n}: AlertListProps) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(\n    () => [\n      {\n        id: 'type',\n        operator: FilterOperator.equals,\n        value: isReportEnabled ? 'Report' : 'Alert',\n      },\n    ],\n    [isReportEnabled],\n  );\n  const {\n    state: {\n      loading,\n      resourceCount: alertsCount,\n      resourceCollection: alerts,\n      bulkSelectEnabled,\n      lastFetched,\n    },\n    hasPerm,\n    fetchData,\n    setResourceCollection,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n    true,\n    undefined,\n    initialFilters,\n  );\n\n  const { updateResource } = useSingleViewResource<Partial<AlertObject>>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  const [alertModalOpen, setAlertModalOpen] = useState<boolean>(false);\n  const [currentAlert, setCurrentAlert] = useState<Partial<AlertObject> | null>(\n    null,\n  );\n  const [currentAlertDeleting, setCurrentAlertDeleting] =\n    useState<AlertObject | null>(null);\n\n  // Actions\n  function handleAlertEdit(alert: AlertObject | null) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n\n  const generateKey = () => `${new Date().getTime()}`;\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n\n  const handleAlertDelete = ({ id, name }: AlertObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setCurrentAlertDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkAlertDelete = async (alertsToDelete: AlertObject[]) => {\n    try {\n      const { message } = await deleteAlerts(\n        alertsToDelete.map(({ id }) => id),\n      );\n      refreshData();\n      addSuccessToast(message);\n    } catch (e) {\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'There was an issue deleting the selected %s: %s',\n            titlePlural,\n            errMsg,\n          ),\n        ),\n      )(e);\n    }\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n\n  const toggleActive = useCallback(\n    (data: AlertObject, checked: boolean) => {\n      if (data?.id) {\n        const update_id = data.id;\n        const original = [...alerts];\n\n        setResourceCollection(\n          original.map(alert => {\n            if (alert?.id === data.id) {\n              return {\n                ...alert,\n                active: checked,\n              };\n            }\n\n            return alert;\n          }),\n        );\n\n        updateResource(update_id, { active: checked }, false, false)\n          .then()\n          .catch(() => setResourceCollection(original));\n      }\n    },\n    [alerts, setResourceCollection, updateResource],\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { last_state: lastState },\n          },\n        }: any) => (\n          <AlertStatusIcon\n            state={lastState}\n            isReportEnabled={isReportEnabled}\n          />\n        ),\n        accessor: 'last_state',\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_eval_dttm: lastEvalDttm },\n          },\n        }: any) =>\n          lastEvalDttm\n            ? moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE)\n            : '',\n        accessor: 'last_eval_dttm',\n        Header: t('Last run'),\n        size: 'lg',\n      },\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        size: 'xl',\n      },\n      {\n        Header: t('Schedule'),\n        accessor: 'crontab_humanized',\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { crontab_humanized = '', timezone },\n          },\n        }: any) => (\n          <Tooltip\n            title={`${crontab_humanized} (${timezone})`}\n            placement=\"topLeft\"\n          >\n            <span>{`${crontab_humanized} (${timezone})`}</span>\n          </Tooltip>\n        ),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { recipients },\n          },\n        }: any) =>\n          recipients.map((r: any) => (\n            <RecipientIcon key={r.id} type={r.type} />\n          )),\n        accessor: 'recipients',\n        Header: t('Notification method'),\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          return (\n            <Switch\n              disabled={!allowEdit}\n              data-test=\"toggle-active\"\n              checked={original.active}\n              onClick={(checked: boolean) => toggleActive(original, checked)}\n              size=\"small\"\n            />\n          );\n        },\n        Header: t('Active'),\n        accessor: 'active',\n        id: 'active',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const history = useHistory();\n          const handleEdit = () => handleAlertEdit(original);\n          const handleDelete = () => setCurrentAlertDeleting(original);\n          const handleGotoExecutionLog = () =>\n            history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'execution-log-action',\n                  tooltip: t('Execution log'),\n                  placement: 'bottom',\n                  icon: 'Note',\n                  onClick: handleGotoExecutionLog,\n                }\n              : null,\n            canEdit\n              ? {\n                  label: allowEdit ? 'edit-action' : 'preview-action',\n                  tooltip: allowEdit ? t('Edit') : t('View'),\n                  placement: 'bottom',\n                  icon: allowEdit ? 'Edit' : 'Binoculars',\n                  onClick: handleEdit,\n                }\n              : null,\n            allowEdit && canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => item !== null);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.changed_by,\n        hidden: true,\n      },\n    ],\n    [canDelete, canEdit, isReportEnabled, toggleActive],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {title}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      },\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle',\n    });\n  }\n\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? (\n      <>\n        <i className=\"fa fa-plus\" /> {title}{' '}\n      </>\n    ) : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'owners',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching owners values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Status'),\n        key: 'status',\n        id: 'last_state',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'Any',\n        selects: [\n          {\n            label: AlertStateLabel[AlertState.Success],\n            value: AlertState.Success,\n          },\n          {\n            label: AlertStateLabel[AlertState.Working],\n            value: AlertState.Working,\n          },\n          { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n          { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n          { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  const header = HeaderExtension ? (\n    <StyledHeaderWithIcon>\n      <div>{t('Alerts & reports')}</div>\n      <HeaderExtension />\n    </StyledHeaderWithIcon>\n  ) : (\n    t('Alerts & reports')\n  );\n\n  return (\n    <>\n      <SubMenu\n        activeChild={pathName}\n        name={header}\n        tabs={[\n          {\n            name: 'Alerts',\n            label: t('Alerts'),\n            url: '/alert/list/',\n            usesRouter: true,\n            'data-test': 'alert-list',\n          },\n          {\n            name: 'Reports',\n            label: t('Reports'),\n            url: '/report/list/',\n            usesRouter: true,\n            'data-test': 'report-list',\n          },\n        ]}\n        buttons={subMenuButtons}\n      >\n        <RefreshContainer>\n          <LastUpdated updatedAt={lastFetched} update={() => refreshData()} />\n        </RefreshContainer>\n      </SubMenu>\n      <AlertReportModal\n        alert={currentAlert}\n        addDangerToast={addDangerToast}\n        layer={currentAlert}\n        onHide={() => {\n          setAlertModalOpen(false);\n          setCurrentAlert(null);\n          refreshData();\n        }}\n        show={alertModalOpen}\n        isReport={isReportEnabled}\n        key={currentAlert?.id || generateKey()}\n      />\n      {currentAlertDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentAlertDeleting.name,\n          )}\n          onConfirm={() => {\n            if (currentAlertDeleting) {\n              handleAlertDelete(currentAlertDeleting);\n            }\n          }}\n          onHide={() => setCurrentAlertDeleting(null)}\n          open\n          title={t('Delete %s?', title)}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected %s?',\n          titlePlural,\n        )}\n        onConfirm={handleBulkAlertDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n          return (\n            <ListView<AlertObject>\n              className=\"alerts-list-view\"\n              columns={columns}\n              count={alertsCount}\n              data={alerts}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              refreshData={refreshData}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AlertList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["ModifiedInfo","_ref","user","date","dateSpan","___EmotionJSX","className","userName","getOwnerName","title","t","Tooltip","placement","StyledActions","styled","span","theme","colors","primary","base","ActionWrapper","_ref2","grayscale","ActionsBar","_ref3","actions","map","action","index","ActionIcon","Icons","icon","tooltip","id","label","key","role","tabIndex","onClick","getStatusColor","status","isReportEnabled","AlertState","Working","Error","error","Success","success","alert","Noop","Grace","AlertStatusIcon","state","useTheme","lastStateConfig","Check","AlertSolidSmall","Running","XSmall","Icon","iconColor","RecipientIconName","StyledIcon","css","light1","gridUnit","RecipientIcon","type","recipientIconConfig","Email","Slack","moment","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","TextStyles","Refresh","_ref4","_ref5","_ref6","updatedAt","update","timeSince","setTimeSince","useState","useEffect","interval","setInterval","clearInterval","isValid","extensionsRegistry","getExtensionsRegistry","AlertStateLabel","deleteAlerts","makeApi","requestType","method","endpoint","RefreshContainer","div","light5","StyledHeaderWithIcon","HeaderExtension","get","withToasts","addDangerToast","addSuccessToast","titlePlural","pathName","initialFilters","useMemo","operator","FilterOperator","equals","value","loading","resourceCount","alertsCount","resourceCollection","alerts","bulkSelectEnabled","lastFetched","hasPerm","fetchData","setResourceCollection","refreshData","toggleBulkSelect","useListViewResource","undefined","updateResource","useSingleViewResource","alertModalOpen","setAlertModalOpen","currentAlert","setCurrentAlert","currentAlertDeleting","setCurrentAlertDeleting","handleAlertEdit","canEdit","canDelete","canCreate","initialSort","desc","toggleActive","useCallback","data","checked","update_id","original","active","then","catch","columns","Cell","_ref8","row","last_state","lastState","accessor","size","disableSortBy","_ref9","last_eval_dttm","lastEvalDttm","local","format","DATETIME_WITH_TIME_ZONE","Header","_ref10","crontab_humanized","timezone","_ref11","recipients","r","_ref12","owners","FacePile","users","_ref13","changed_on_delta_humanized","changedOn","changed_by","changedBy","_ref14","allowEdit","o","includes","userId","isUserAdmin","Switch","disabled","_ref15","history","useHistory","handleGotoExecutionLog","push","toLowerCase","handleEdit","handleDelete","filter","item","hidden","QueryObjectColumns","subMenuButtons","name","React","buttonStyle","emptyState","image","buttonAction","buttonText","filters","input","contains","relationManyMany","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","selects","relationOneMany","header","SubMenu","activeChild","tabs","url","usesRouter","buttons","LastUpdated","AlertReportModal","layer","onHide","show","isReport","Date","getTime","DeleteModal","description","onConfirm","handleAlertDelete","SupersetClient","delete","open","ConfirmStatusChange","async","alertsToDelete","message","_ref7","e","confirmDelete","bulkActions","onSelect","ListView","count","disableBulkSelect","pageSize","owner","first_name","last_name"],"sourceRoot":""}