{"version":3,"file":"7911ae228692823c21f0.chunk.js","mappings":"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","sources":["webpack://superset/./src/features/alerts/components/AlertStatusIcon.tsx","webpack://superset/./src/features/alerts/types.ts","webpack://superset/./src/pages/ExecutionLogList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, SupersetTheme, useTheme } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { AlertState } from '../types';\n\nfunction getStatusColor(\n  status: string,\n  isReportEnabled: boolean,\n  theme: SupersetTheme,\n) {\n  switch (status) {\n    case AlertState.Working:\n      return theme.colors.primary.base;\n    case AlertState.Error:\n      return theme.colors.error.base;\n    case AlertState.Success:\n      return isReportEnabled\n        ? theme.colors.success.base\n        : theme.colors.alert.base;\n    case AlertState.Noop:\n      return theme.colors.success.base;\n    case AlertState.Grace:\n      return theme.colors.alert.base;\n    default:\n      return theme.colors.grayscale.base;\n  }\n}\n\nexport default function AlertStatusIcon({\n  state,\n  isReportEnabled = false,\n}: {\n  state: string;\n  isReportEnabled: boolean;\n}) {\n  const theme = useTheme();\n  const lastStateConfig = {\n    icon: Icons.Check,\n    label: '',\n    status: '',\n  };\n  switch (state) {\n    case AlertState.Success:\n      lastStateConfig.icon = isReportEnabled\n        ? Icons.Check\n        : Icons.AlertSolidSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sent')\n        : t('Alert triggered, notification sent');\n      lastStateConfig.status = AlertState.Success;\n      break;\n    case AlertState.Working:\n      lastStateConfig.icon = Icons.Running;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sending')\n        : t('Alert running');\n      lastStateConfig.status = AlertState.Working;\n      break;\n    case AlertState.Error:\n      lastStateConfig.icon = Icons.XSmall;\n      lastStateConfig.label = isReportEnabled\n        ? t('Report failed')\n        : t('Alert failed');\n      lastStateConfig.status = AlertState.Error;\n      break;\n    case AlertState.Noop:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n      break;\n    case AlertState.Grace:\n      lastStateConfig.icon = Icons.AlertSolidSmall;\n      lastStateConfig.label = t('Alert Triggered, In Grace Period');\n      lastStateConfig.status = AlertState.Grace;\n      break;\n    default:\n      lastStateConfig.icon = Icons.Check;\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.Noop;\n  }\n  const Icon = lastStateConfig.icon;\n  return (\n    <Tooltip title={lastStateConfig.label} placement=\"bottomLeft\">\n      <Icon\n        iconColor={getStatusColor(\n          lastStateConfig.status,\n          isReportEnabled,\n          theme,\n        )}\n      />\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Owner from 'src/types/Owner';\nimport { NOTIFICATION_FORMATS } from 'src/features/reports/types';\n\ntype user = {\n  id: number;\n  first_name: string;\n  last_name: string;\n};\nexport type ChartObject = {\n  id: number;\n  slice_name: string;\n  viz_type: string;\n};\n\nexport type DashboardObject = {\n  dashboard_title: string;\n  id: number;\n};\n\nexport type DatabaseObject = {\n  database_name: string;\n  id: number;\n};\n\nexport type NotificationMethodOption = 'Email' | 'Slack';\n\nexport type Recipient = {\n  recipient_config_json: {\n    target: string;\n  };\n  type: NotificationMethodOption;\n};\n\nexport type MetaObject = {\n  id?: number;\n  label?: string;\n  value?: number | string;\n};\n\nexport type Operator = '<' | '>' | '<=' | '>=' | '==' | '!=' | 'not null';\n\nexport type AlertObject = {\n  active?: boolean;\n  creation_method?: string;\n  chart?: MetaObject;\n  changed_by?: user;\n  changed_on_delta_humanized?: string;\n  chart_id: number;\n  created_by?: user;\n  created_on?: string;\n  crontab?: string;\n  custom_width?: number | null;\n  dashboard?: MetaObject;\n  dashboard_id?: number;\n  database?: MetaObject;\n  description?: string;\n  error?: string;\n  force_screenshot: boolean;\n  grace_period?: number;\n  id: number;\n  last_eval_dttm?: number;\n  last_state?: 'Success' | 'Working' | 'Error' | 'Not triggered' | 'On Grace';\n  log_retention?: number;\n  name?: string;\n  owners?: Array<Owner | MetaObject>;\n  sql?: string;\n  timezone?: string;\n  recipients?: Array<Recipient>;\n  report_format?: NOTIFICATION_FORMATS;\n  type?: string;\n  validator_config_json?: {\n    op?: Operator;\n    threshold?: number;\n  };\n  validator_type?: string;\n  working_timeout?: number;\n};\n\nexport type LogObject = {\n  end_dttm: string;\n  error_message: string;\n  id: number;\n  scheduled_dttm: string;\n  start_dttm: string;\n  state: string;\n  value: string;\n  uuid: string;\n};\n\nexport enum AlertState {\n  Success = 'Success',\n  Working = 'Working',\n  Error = 'Error',\n  Noop = 'Not triggered',\n  Grace = 'On Grace',\n}\n\nexport enum RecipientIconName {\n  Email = 'Email',\n  Slack = 'Slack',\n}\nexport interface AlertsReportsConfig {\n  ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT: number;\n  ALERT_REPORTS_DEFAULT_RETENTION: number;\n  ALERT_REPORTS_DEFAULT_CRON_VALUE: string;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, styled, t } from '@superset-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport ListView from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SubMenu from 'src/features/home/SubMenu';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { fDuration } from 'src/utils/dates';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { AlertObject, LogObject } from 'src/features/alerts/types';\n\nconst PAGE_SIZE = 25;\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: ${theme.gridUnit * 4}px;\n      font-size: ${theme.typography.sizes.s};\n      font-weight: ${theme.typography.weights.normal};\n      text-decoration: underline;\n    }\n  `}\n`;\n\ninterface ExecutionLogProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n}\n\nfunction ExecutionLog({\n  addDangerToast,\n  addSuccessToast,\n  isReportEnabled,\n}: ExecutionLogProps) {\n  const { alertId }: any = useParams();\n  const {\n    state: { loading, resourceCount: logCount, resourceCollection: logs },\n    fetchData,\n  } = useListViewResource<LogObject>(\n    `report/${alertId}/log`,\n    t('log'),\n    addDangerToast,\n    false,\n  );\n  const {\n    state: { loading: alertLoading, resource: alertResource },\n    fetchResource,\n  } = useSingleViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  useEffect(() => {\n    if (alertId !== null && !alertLoading) {\n      fetchResource(alertId);\n    }\n  }, [alertId]);\n\n  const initialSort = [{ id: 'start_dttm', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { state },\n          },\n        }: any) => (\n          <AlertStatusIcon state={state} isReportEnabled={isReportEnabled} />\n        ),\n        accessor: 'state',\n        Header: t('State'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { uuid: executionId },\n          },\n        }: any) => (executionId ? executionId.slice(0, 6) : 'none'),\n        accessor: 'uuid',\n        Header: t('Execution ID'),\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { scheduled_dttm: scheduledDttm },\n          },\n        }: any) =>\n          moment(new Date(scheduledDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        accessor: 'scheduled_dttm',\n        Header: t('Scheduled at (UTC)'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('YYYY-MM-DD hh:mm:ss a'),\n        Header: t('Start at (UTC)'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm, end_dttm: endDttm },\n          },\n        }: any) =>\n          fDuration(new Date(startDttm).getTime(), new Date(endDttm).getTime()),\n        Header: t('Duration'),\n        disableSortBy: true,\n      },\n      {\n        accessor: 'value',\n        Header: t('Value'),\n      },\n      {\n        accessor: 'error_message',\n        Header: t('Error message'),\n        Cell: ({\n          row: {\n            original: { error_message = '' },\n          },\n        }: any) => (\n          <Tooltip title={error_message} placement=\"topLeft\">\n            <span>{error_message}</span>\n          </Tooltip>\n        ),\n      },\n    ],\n    [isReportEnabled],\n  );\n  const path = `/${isReportEnabled ? 'report' : 'alert'}/list/`;\n  const ALERT_TEXT = t('Alert');\n  const REPORT_TEXT = t('Report');\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>\n              {alertResource\n                ? alertResource.type === 'Alert'\n                  ? `${ALERT_TEXT}:`\n                  : alertResource.type === 'Report'\n                  ? `${REPORT_TEXT}:`\n                  : null\n                : null}{' '}\n              {alertResource?.name}\n            </span>\n            <span>\n              <Link to={path}>{t('Back to all')}</Link>\n            </span>\n          </StyledHeader>\n        }\n      />\n      <ListView<LogObject>\n        className=\"execution-log-list-view\"\n        columns={columns}\n        count={logCount}\n        data={logs}\n        fetchData={fetchData}\n        initialSort={initialSort}\n        loading={loading}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={() => {}}\n        pageSize={PAGE_SIZE}\n      />\n    </>\n  );\n}\n\nexport default withToasts(ExecutionLog);\n"],"names":["getStatusColor","status","isReportEnabled","theme","AlertState","Working","colors","primary","base","Error","error","Success","success","alert","Noop","Grace","grayscale","AlertStatusIcon","_ref","state","useTheme","lastStateConfig","icon","Icons","Check","label","AlertSolidSmall","t","Running","XSmall","Icon","___EmotionJSX","Tooltip","title","placement","iconColor","RecipientIconName","StyledHeader","styled","div","css","gridUnit","typography","sizes","s","weights","normal","withToasts","_ref2","addDangerToast","addSuccessToast","alertId","useParams","loading","resourceCount","logCount","resourceCollection","logs","fetchData","useListViewResource","alertLoading","resource","alertResource","fetchResource","useSingleViewResource","useEffect","columns","useMemo","Cell","_ref3","row","original","accessor","Header","size","disableSortBy","_ref4","uuid","executionId","slice","_ref5","scheduled_dttm","scheduledDttm","moment","Date","format","_ref6","start_dttm","startDttm","_ref7","end_dttm","endDttm","fDuration","getTime","_ref8","error_message","path","ALERT_TEXT","REPORT_TEXT","React","SubMenu","name","type","Link","to","ListView","className","count","data","initialSort","id","desc","refreshData","pageSize"],"sourceRoot":""}