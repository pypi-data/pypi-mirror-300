{"version":3,"file":"d0124351c38886e55eae.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/pages/DatabaseList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["import React from 'react';\n\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  isFeatureEnabled,\n  FeatureFlag,\n  getExtensionsRegistry,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\n\nimport Loading from 'src/components/Loading';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  uploadUserPerms,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport ListView, { FilterOperator, Filters } from 'src/components/ListView';\nimport handleResourceExport from 'src/utils/export';\nimport { ExtensionConfigs } from 'src/features/home/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport type { MenuObjectProps } from 'src/types/bootstrapTypes';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';\nimport { DatabaseObject } from 'src/features/databases/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatabaseDeleteRelatedExtension = extensionsRegistry.get(\n  'database.delete.related',\n);\nconst dbConfigExtraExtension = extensionsRegistry.get(\n  'databaseconnection.extraOption',\n);\n\nconst PAGE_SIZE = 25;\n\ninterface DatabaseDeleteObject extends DatabaseObject {\n  chart_count: number;\n  dashboard_count: number;\n  sqllab_tab_count: number;\n}\ninterface DatabaseListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst IconCheck = styled(Icons.Check)`\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n`;\n\nconst IconCancelX = styled(Icons.CancelX)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .action-button {\n    display: inline-block;\n    height: 100%;\n  }\n`;\n\nfunction BooleanDisplay({ value }: { value: Boolean }) {\n  return value ? <IconCheck /> : <IconCancelX />;\n}\n\nfunction DatabaseList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: DatabaseListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: databaseCount,\n      resourceCollection: databases,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n  } = useListViewResource<DatabaseObject>(\n    'database',\n    t('database'),\n    addDangerToast,\n  );\n  const fullUser = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const showDatabaseModal = getUrlParam(URL_PARAMS.showDatabaseModal);\n\n  const [query, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam,\n  });\n\n  const [databaseModalOpen, setDatabaseModalOpen] = useState<boolean>(\n    showDatabaseModal || false,\n  );\n  const [databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting] =\n    useState<DatabaseDeleteObject | null>(null);\n  const [currentDatabase, setCurrentDatabase] = useState<DatabaseObject | null>(\n    null,\n  );\n  const [allowUploads, setAllowUploads] = useState<boolean>(false);\n  const isAdmin = isUserAdmin(fullUser);\n  const showUploads = allowUploads || isAdmin;\n\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const { roles } = fullUser;\n  const {\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  } = useSelector<any, ExtensionConfigs>(state => state.common.conf);\n\n  useEffect(() => {\n    if (query?.databaseAdded) {\n      setQuery({ databaseAdded: undefined });\n      refreshData();\n    }\n  }, [query, setQuery, refreshData]);\n\n  const openDatabaseDeleteModal = (database: DatabaseObject) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/database/${database.id}/related_objects/`,\n    })\n      .then(({ json = {} }) => {\n        setDatabaseCurrentlyDeleting({\n          ...database,\n          chart_count: json.charts.count,\n          dashboard_count: json.dashboards.count,\n          sqllab_tab_count: json.sqllab_tab_states.count,\n        });\n      })\n      .catch(\n        createErrorHandler(errMsg =>\n          t(\n            'An error occurred while fetching database related data: %s',\n            errMsg,\n          ),\n        ),\n      );\n\n  function handleDatabaseDelete(database: DatabaseObject) {\n    const { id, database_name: dbName } = database;\n    SupersetClient.delete({\n      endpoint: `/api/v1/database/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        addSuccessToast(t('Deleted: %s', dbName));\n\n        // Remove any extension-related data\n        if (dbConfigExtraExtension?.onDelete) {\n          dbConfigExtraExtension.onDelete(database);\n        }\n\n        // Delete user-selected db from local storage\n        setItem(LocalStorageKeys.db, null);\n\n        // Close delete modal\n        setDatabaseCurrentlyDeleting(null);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', dbName, errMsg)),\n      ),\n    );\n  }\n\n  function handleDatabaseEditModal({\n    database = null,\n    modalOpen = false,\n  }: { database?: DatabaseObject | null; modalOpen?: boolean } = {}) {\n    // Set database and modal\n    setCurrentDatabase(database);\n    setDatabaseModalOpen(modalOpen);\n  }\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n\n  const { canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(\n    roles,\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  );\n\n  const isDisabled = isAdmin && !allowUploads;\n\n  const uploadDropdownMenu = [\n    {\n      label: t('Upload file to database'),\n      childs: [\n        {\n          label: t('Upload CSV'),\n          name: 'Upload CSV file',\n          url: '/csvtodatabaseview/form',\n          perm: canUploadCSV && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload columnar file'),\n          name: 'Upload columnar file',\n          url: '/columnartodatabaseview/form',\n          perm: canUploadColumnar && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload Excel file'),\n          name: 'Upload Excel file',\n          url: '/exceltodatabaseview/form',\n          perm: canUploadExcel && showUploads,\n          disable: isDisabled,\n        },\n      ],\n    },\n  ];\n\n  const hasFileUploadEnabled = () => {\n    const payload = {\n      filters: [\n        { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true },\n      ],\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`,\n    }).then(({ json }: Record<string, any>) => {\n      // There might be some existings Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload =\n        json?.result?.filter(\n          (database: any) => database?.engine_information?.supports_file_upload,\n        ) || [];\n      setAllowUploads(allowedDatabasesWithFileUpload?.length >= 1);\n    });\n  };\n\n  useEffect(() => hasFileUploadEnabled(), [databaseModalOpen]);\n\n  const filteredDropDown = uploadDropdownMenu.reduce((prev, cur) => {\n    // eslint-disable-next-line no-param-reassign\n    cur.childs = cur.childs.filter(item => item.perm);\n    if (!cur.childs.length) return prev;\n    prev.push(cur);\n    return prev;\n  }, [] as MenuObjectProps[]);\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Databases',\n    dropDownLinks: filteredDropDown,\n    name: t('Databases'),\n  };\n\n  if (canCreate) {\n    menuData.buttons = [\n      {\n        'data-test': 'btn-create-database',\n        name: (\n          <>\n            <i className=\"fa fa-plus\" /> {t('Database')}{' '}\n          </>\n        ),\n        buttonStyle: 'primary',\n        onClick: () => {\n          // Ensure modal will be opened in add mode\n          handleDatabaseEditModal({ modalOpen: true });\n        },\n      },\n    ];\n  }\n\n  function handleDatabaseExport(database: DatabaseObject) {\n    if (database.id === undefined) {\n      return;\n    }\n\n    handleResourceExport('database', [database.id], () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  }\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'database_name',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'backend',\n        Header: t('Backend'),\n        size: 'lg',\n        disableSortBy: true, // TODO: api support for sorting by 'backend'\n      },\n      {\n        accessor: 'allow_run_async',\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_run_async: allowRunAsync },\n          },\n        }: {\n          row: { original: { allow_run_async: boolean } };\n        }) => <BooleanDisplay value={allowRunAsync} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_dml',\n        Header: (\n          <Tooltip\n            id=\"allow-dml-header-tooltip\"\n            title={t('Allow data manipulation language')}\n            placement=\"top\"\n          >\n            <span>{t('DML')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_dml: allowDML },\n          },\n        }: any) => <BooleanDisplay value={allowDML} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_file_upload',\n        Header: t('CSV upload'),\n        Cell: ({\n          row: {\n            original: { allow_file_upload: allowFileUpload },\n          },\n        }: any) => <BooleanDisplay value={allowFileUpload} />,\n        size: 'md',\n      },\n      {\n        accessor: 'expose_in_sqllab',\n        Header: t('Expose in SQL Lab'),\n        Cell: ({\n          row: {\n            original: { expose_in_sqllab: exposeInSqllab },\n          },\n        }: any) => <BooleanDisplay value={exposeInSqllab} />,\n        size: 'md',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_by: changedBy,\n              changed_on_delta_humanized: changedOn,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () =>\n            handleDatabaseEditModal({ database: original, modalOpen: true });\n          const handleDelete = () => openDatabaseDeleteModal(original);\n          const handleExport = () => handleDatabaseExport(original);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className=\"action-button\"\n                  data-test=\"database-delete\"\n                  onClick={handleDelete}\n                >\n                  <Tooltip\n                    id=\"delete-action-tooltip\"\n                    title={t('Delete database')}\n                    placement=\"bottom\"\n                  >\n                    <Icons.Trash />\n                  </Tooltip>\n                </span>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    data-test=\"database-edit\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleEdit}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.changed_by,\n        hidden: true,\n      },\n    ],\n    [canDelete, canEdit, canExport],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'database_name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n      {\n        Header: t('Expose in SQL Lab'),\n        key: 'expose_in_sql_lab',\n        id: 'expose_in_sqllab',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-filter-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        key: 'allow_run_async',\n        id: 'allow_run_async',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'database',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <DatabaseModal\n        databaseId={currentDatabase?.id}\n        show={databaseModalOpen}\n        onHide={handleDatabaseEditModal}\n        onDatabaseAdd={() => {\n          refreshData();\n        }}\n      />\n      {databaseCurrentlyDeleting && (\n        <DeleteModal\n          description={\n            <>\n              <p>\n                {t(\n                  'The database %s is linked to %s charts that appear on %s dashboards and users have %s SQL Lab tabs using this database open. Are you sure you want to continue? Deleting the database will break those objects.',\n                  databaseCurrentlyDeleting.database_name,\n                  databaseCurrentlyDeleting.chart_count,\n                  databaseCurrentlyDeleting.dashboard_count,\n                  databaseCurrentlyDeleting.sqllab_tab_count,\n                )}\n              </p>\n              {DatabaseDeleteRelatedExtension && (\n                <DatabaseDeleteRelatedExtension\n                  database={databaseCurrentlyDeleting}\n                />\n              )}\n            </>\n          }\n          onConfirm={() => {\n            if (databaseCurrentlyDeleting) {\n              handleDatabaseDelete(databaseCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setDatabaseCurrentlyDeleting(null)}\n          open\n          title={t('Delete Database?')}\n        />\n      )}\n\n      <ListView<DatabaseObject>\n        className=\"database-list-view\"\n        columns={columns}\n        count={databaseCount}\n        data={databases}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={() => {}}\n        pageSize={PAGE_SIZE}\n      />\n\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(DatabaseList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["ModifiedInfo","_ref","user","date","dateSpan","___EmotionJSX","className","userName","getOwnerName","title","t","Tooltip","placement","extensionsRegistry","getExtensionsRegistry","DatabaseDeleteRelatedExtension","get","dbConfigExtraExtension","IconCheck","styled","Icons","Check","theme","colors","grayscale","dark1","IconCancelX","CancelX","_ref2","light1","Actions","div","_ref3","base","BooleanDisplay","_ref4","value","withToasts","_ref5","addDangerToast","addSuccessToast","state","loading","resourceCount","databaseCount","resourceCollection","databases","hasPerm","fetchData","refreshData","useListViewResource","fullUser","useSelector","showDatabaseModal","getUrlParam","URL_PARAMS","query","setQuery","useQueryParams","databaseAdded","BooleanParam","databaseModalOpen","setDatabaseModalOpen","useState","databaseCurrentlyDeleting","setDatabaseCurrentlyDeleting","currentDatabase","setCurrentDatabase","allowUploads","setAllowUploads","isAdmin","isUserAdmin","showUploads","preparingExport","setPreparingExport","roles","CSV_EXTENSIONS","COLUMNAR_EXTENSIONS","EXCEL_EXTENSIONS","ALLOWED_EXTENSIONS","common","conf","handleDatabaseEditModal","_temp","database","modalOpen","useEffect","undefined","canCreate","canEdit","canDelete","canExport","isFeatureEnabled","FeatureFlag","VERSIONED_EXPORT","canUploadCSV","canUploadColumnar","canUploadExcel","uploadUserPerms","isDisabled","uploadDropdownMenu","label","childs","name","url","perm","disable","SupersetClient","endpoint","rison","filters","col","opr","then","_ref7","_json$result","json","allowedDatabasesWithFileUpload","result","filter","_database$engine_info","engine_information","supports_file_upload","length","menuData","activeChild","dropDownLinks","reduce","prev","cur","item","push","buttons","React","buttonStyle","onClick","columns","useMemo","accessor","Header","size","disableSortBy","id","Cell","_ref8","row","original","allow_run_async","allowRunAsync","_ref9","allow_dml","allowDML","_ref10","allow_file_upload","allowFileUpload","_ref11","expose_in_sqllab","exposeInSqllab","_ref12","changed_by","changedBy","changed_on_delta_humanized","changedOn","_ref13","role","tabIndex","handleDelete","openDatabaseDeleteModal","_ref6","chart_count","charts","count","dashboard_count","dashboards","sqllab_tab_count","sqllab_tab_states","catch","createErrorHandler","errMsg","Trash","handleExport","handleResourceExport","Share","handleEdit","EditAlt","hidden","QueryObjectColumns","key","input","operator","FilterOperator","contains","equals","unfilteredLabel","selects","relationOneMany","fetchSelects","createFetchRelated","paginate","SubMenu","DatabaseModal","databaseId","show","onHide","onDatabaseAdd","DeleteModal","description","database_name","onConfirm","dbName","delete","onDelete","setItem","LocalStorageKeys","db","handleDatabaseDelete","open","ListView","data","initialSort","desc","pageSize","Loading","owner","first_name","last_name"],"sourceRoot":""}