# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/CosmicSelection',
                'doc_host': 'https://2catycm.github.io',
                'git_url': 'https://github.com/2catycm/CosmicSelection',
                'lib_path': 'cosmic_selection'},
  'syms': { 'cosmic_selection.algorithms.concepts': { 'cosmic_selection.algorithms.concepts.EvolvingAlgorithm': ( 'algorithms/concepts.html#evolvingalgorithm',
                                                                                                                  'cosmic_selection/algorithms/concepts.py'),
                                                      'cosmic_selection.algorithms.concepts.EvolvingAlgorithm.__init__': ( 'algorithms/concepts.html#evolvingalgorithm.__init__',
                                                                                                                           'cosmic_selection/algorithms/concepts.py'),
                                                      'cosmic_selection.algorithms.concepts.EvolvingAlgorithm.__str__': ( 'algorithms/concepts.html#evolvingalgorithm.__str__',
                                                                                                                          'cosmic_selection/algorithms/concepts.py'),
                                                      'cosmic_selection.algorithms.concepts.EvolvingAlgorithm.forward': ( 'algorithms/concepts.html#evolvingalgorithm.forward',
                                                                                                                          'cosmic_selection/algorithms/concepts.py'),
                                                      'cosmic_selection.algorithms.concepts.EvolvingAlgorithm.get_device': ( 'algorithms/concepts.html#evolvingalgorithm.get_device',
                                                                                                                             'cosmic_selection/algorithms/concepts.py')},
            'cosmic_selection.algorithms.scientist_experiment': { 'cosmic_selection.algorithms.scientist_experiment.StudentExperiment': ( 'algorithms/scientist_experiment.html#studentexperiment',
                                                                                                                                          'cosmic_selection/algorithms/scientist_experiment.py'),
                                                                  'cosmic_selection.algorithms.scientist_experiment.StudentExperiment.__init__': ( 'algorithms/scientist_experiment.html#studentexperiment.__init__',
                                                                                                                                                   'cosmic_selection/algorithms/scientist_experiment.py'),
                                                                  'cosmic_selection.algorithms.scientist_experiment.StudentExperiment.forward': ( 'algorithms/scientist_experiment.html#studentexperiment.forward',
                                                                                                                                                  'cosmic_selection/algorithms/scientist_experiment.py')},
            'cosmic_selection.core': {'cosmic_selection.core.foo': ('core.html#foo', 'cosmic_selection/core.py')},
            'cosmic_selection.objectives.benchmark_funs': { 'cosmic_selection.objectives.benchmark_funs.Ackley': ( 'objectives/benchmark_funs.html#ackley',
                                                                                                                   'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Ackley.__init__': ( 'objectives/benchmark_funs.html#ackley.__init__',
                                                                                                                            'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Ackley.forward': ( 'objectives/benchmark_funs.html#ackley.forward',
                                                                                                                           'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.BenchmarkFunction': ( 'objectives/benchmark_funs.html#benchmarkfunction',
                                                                                                                              'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.BenchmarkFunction.__init__': ( 'objectives/benchmark_funs.html#benchmarkfunction.__init__',
                                                                                                                                       'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.BenchmarkFunction.forward': ( 'objectives/benchmark_funs.html#benchmarkfunction.forward',
                                                                                                                                      'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.BenchmarkFunction.get_budget': ( 'objectives/benchmark_funs.html#benchmarkfunction.get_budget',
                                                                                                                                         'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.BenchmarkFunction.get_device': ( 'objectives/benchmark_funs.html#benchmarkfunction.get_device',
                                                                                                                                         'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.BenchmarkFunction.is_input_valid': ( 'objectives/benchmark_funs.html#benchmarkfunction.is_input_valid',
                                                                                                                                             'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Camel3': ( 'objectives/benchmark_funs.html#camel3',
                                                                                                                   'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Camel3.__init__': ( 'objectives/benchmark_funs.html#camel3.__init__',
                                                                                                                            'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Camel3.forward': ( 'objectives/benchmark_funs.html#camel3.forward',
                                                                                                                           'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Holder': ( 'objectives/benchmark_funs.html#holder',
                                                                                                                   'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Holder.__init__': ( 'objectives/benchmark_funs.html#holder.__init__',
                                                                                                                            'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Holder.forward': ( 'objectives/benchmark_funs.html#holder.forward',
                                                                                                                           'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Michal': ( 'objectives/benchmark_funs.html#michal',
                                                                                                                   'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Michal.__init__': ( 'objectives/benchmark_funs.html#michal.__init__',
                                                                                                                            'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Michal.forward': ( 'objectives/benchmark_funs.html#michal.forward',
                                                                                                                           'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.NegativeProxyObjective': ( 'objectives/benchmark_funs.html#negativeproxyobjective',
                                                                                                                                   'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.NegativeProxyObjective.__init__': ( 'objectives/benchmark_funs.html#negativeproxyobjective.__init__',
                                                                                                                                            'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.NegativeProxyObjective.forward': ( 'objectives/benchmark_funs.html#negativeproxyobjective.forward',
                                                                                                                                           'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.NoisyQuartic': ( 'objectives/benchmark_funs.html#noisyquartic',
                                                                                                                         'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.NoisyQuartic.__init__': ( 'objectives/benchmark_funs.html#noisyquartic.__init__',
                                                                                                                                  'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.NoisyQuartic.forward': ( 'objectives/benchmark_funs.html#noisyquartic.forward',
                                                                                                                                 'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Rosenbrock': ( 'objectives/benchmark_funs.html#rosenbrock',
                                                                                                                       'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Rosenbrock.__init__': ( 'objectives/benchmark_funs.html#rosenbrock.__init__',
                                                                                                                                'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Rosenbrock.forward': ( 'objectives/benchmark_funs.html#rosenbrock.forward',
                                                                                                                               'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Schwefel222': ( 'objectives/benchmark_funs.html#schwefel222',
                                                                                                                        'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Schwefel222.__init__': ( 'objectives/benchmark_funs.html#schwefel222.__init__',
                                                                                                                                 'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Schwefel222.forward': ( 'objectives/benchmark_funs.html#schwefel222.forward',
                                                                                                                                'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Schwefel226': ( 'objectives/benchmark_funs.html#schwefel226',
                                                                                                                        'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Schwefel226.__init__': ( 'objectives/benchmark_funs.html#schwefel226.__init__',
                                                                                                                                 'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Schwefel226.forward': ( 'objectives/benchmark_funs.html#schwefel226.forward',
                                                                                                                                'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Sphere': ( 'objectives/benchmark_funs.html#sphere',
                                                                                                                   'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Sphere.__init__': ( 'objectives/benchmark_funs.html#sphere.__init__',
                                                                                                                            'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Sphere.forward': ( 'objectives/benchmark_funs.html#sphere.forward',
                                                                                                                           'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Step': ( 'objectives/benchmark_funs.html#step',
                                                                                                                 'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Step.__init__': ( 'objectives/benchmark_funs.html#step.__init__',
                                                                                                                          'cosmic_selection/objectives/benchmark_funs.py'),
                                                            'cosmic_selection.objectives.benchmark_funs.Step.forward': ( 'objectives/benchmark_funs.html#step.forward',
                                                                                                                         'cosmic_selection/objectives/benchmark_funs.py')},
            'cosmic_selection.objectives.integer_funs': { 'cosmic_selection.objectives.integer_funs.IntegerBenchmarkFunction': ( 'objectives/integer_funs.html#integerbenchmarkfunction',
                                                                                                                                 'cosmic_selection/objectives/integer_funs.py'),
                                                          'cosmic_selection.objectives.integer_funs.IntegerBenchmarkFunction.__init__': ( 'objectives/integer_funs.html#integerbenchmarkfunction.__init__',
                                                                                                                                          'cosmic_selection/objectives/integer_funs.py'),
                                                          'cosmic_selection.objectives.integer_funs.LargestSum': ( 'objectives/integer_funs.html#largestsum',
                                                                                                                   'cosmic_selection/objectives/integer_funs.py'),
                                                          'cosmic_selection.objectives.integer_funs.LargestSum.__init__': ( 'objectives/integer_funs.html#largestsum.__init__',
                                                                                                                            'cosmic_selection/objectives/integer_funs.py'),
                                                          'cosmic_selection.objectives.integer_funs.LargestSum.forward': ( 'objectives/integer_funs.html#largestsum.forward',
                                                                                                                           'cosmic_selection/objectives/integer_funs.py')},
            'cosmic_selection.utils': {}}}
