{
  "Resources": {
    "SourceStream325EA350": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 3,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis"
            }
          ]
        }
      }
    },
    "DLQ581697C4": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "FunctionServiceRole675BB04A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "Function76856677": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import base64\nimport json\n\n\ndef handler(events, context):\n    enriched_events = []\n    for event in events:\n        event[\"enrichment\"] = \"Hello from Lambda\"\n        enriched_events.append(event)\n        # Trigger intentional failure\n        data = base64.b64decode(event[\"data\"]).decode(\"utf-8\")\n        data_json = json.loads(data)\n        if data_json.get(\"fail\", False):\n            raise Exception(\"Fail intentionally\")\n    return enriched_events\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FunctionServiceRole675BB04A",
            "Arn"
          ]
        },
        "Runtime": "python3.12"
      },
      "DependsOn": [
        "FunctionServiceRole675BB04A"
      ]
    },
    "TargetStream3B4B2880": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis"
            }
          ]
        }
      }
    },
    "PipeRole4D7B8476": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "pipes.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "PipeRoleDefaultPolicy84F54597": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SourceStream325EA350",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DLQ581697C4",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Function76856677",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Function76856677",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TargetStream3B4B2880",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipeRoleDefaultPolicy84F54597",
        "Roles": [
          {
            "Ref": "PipeRole4D7B8476"
          }
        ]
      }
    },
    "Pipe": {
      "Type": "AWS::Pipes::Pipe",
      "Properties": {
        "Enrichment": {
          "Fn::GetAtt": [
            "Function76856677",
            "Arn"
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "PipeRole4D7B8476",
            "Arn"
          ]
        },
        "Source": {
          "Fn::GetAtt": [
            "SourceStream325EA350",
            "Arn"
          ]
        },
        "SourceParameters": {
          "KinesisStreamParameters": {
            "BatchSize": 2,
            "DeadLetterConfig": {
              "Arn": {
                "Fn::GetAtt": [
                  "DLQ581697C4",
                  "Arn"
                ]
              }
            },
            "MaximumRetryAttempts": 1,
            "StartingPosition": "TRIM_HORIZON"
          }
        },
        "Target": {
          "Fn::GetAtt": [
            "TargetStream3B4B2880",
            "Arn"
          ]
        },
        "TargetParameters": {
          "KinesisStreamParameters": {
            "PartitionKey": "target-partition-key-0"
          }
        }
      }
    }
  },
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-north-1"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-northwest-1"
          ]
        }
      ]
    }
  },
  "Outputs": {
    "PipeName": {
      "Value": {
        "Ref": "Pipe"
      }
    },
    "SourceStreamName": {
      "Value": {
        "Ref": "SourceStream325EA350"
      }
    },
    "DlqUrl": {
      "Value": {
        "Ref": "DLQ581697C4"
      }
    },
    "DlqName": {
      "Value": {
        "Fn::GetAtt": [
          "DLQ581697C4",
          "QueueName"
        ]
      }
    },
    "EnrichmentFunctionName": {
      "Value": {
        "Ref": "Function76856677"
      }
    },
    "TargetStreamName": {
      "Value": {
        "Ref": "TargetStream3B4B2880"
      }
    },
    "RoleName": {
      "Value": {
        "Ref": "PipeRole4D7B8476"
      }
    }
  }
}
